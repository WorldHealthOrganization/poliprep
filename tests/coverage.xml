<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<style>body{background-color:white;}</style>
<link href="lib/htmltools-fill-0.5.8.1/fill.css" rel="stylesheet" />
<script src="lib/htmlwidgets-1.6.4/htmlwidgets.js"></script>
<link href="lib/datatables-css-0.0.0/datatables-crosstalk.css" rel="stylesheet" />
<script src="lib/datatables-binding-0.33/datatables.js"></script>
<script src="lib/jquery-3.6.0/jquery-3.6.0.min.js"></script>
<link href="lib/dt-core-1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="lib/dt-core-1.13.6/css/jquery.dataTables.extra.css" rel="stylesheet" />
<script src="lib/dt-core-1.13.6/js/jquery.dataTables.min.js"></script>
<link href="lib/crosstalk-1.2.1/css/crosstalk.min.css" rel="stylesheet" />
<script src="lib/crosstalk-1.2.1/js/crosstalk.min.js"></script>
<link href="lib/highlight.js-6.2/rstudio.css" rel="stylesheet" />
<script src="lib/highlight.js-6.2/highlight.pack.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link href="lib/bootstrap-3.3.5/css/bootstrap.min.css" rel="stylesheet" />
<link href="lib/bootstrap-3.3.5/css/bootstrap-theme.min.css" rel="stylesheet" />
<script src="lib/bootstrap-3.3.5/js/bootstrap.min.js"></script>
<script src="lib/bootstrap-3.3.5/shim/html5shiv.min.js"></script>
<script src="lib/bootstrap-3.3.5/shim/respond.min.js"></script>

</head>
<body>
<div class="container-fluid">
  <style type="text/css">table tr:hover td {
  font-weight:bold;text-decoration:none
}
table tr.covered td{
  background-color:rgba(95,151,68,0.3)
}

table tr:hover.covered .num{
  background-color:rgba(95,151,68,0.7)
}
table tr.missed td{
  background-color:rgba(185,73,71,0.3)
}
table tr:hover.missed .num{
  background-color:rgba(185,73,71,0.7)
}

table tr.missed:hover td{
  -webkit-box-shadow:0 -2px 0 0 #b94947 inset;
  -moz-box-shadow:0 -2px 0 0 #b94947 inset;
  box-shadow:0 -2px 0 0 #b94947 inset
}
table tr.covered:hover td{
  -webkit-box-shadow:0 -2px 0 0 #5f9744 inset;
  -moz-box-shadow:0 -2px 0 0 #5f9744 inset;
  box-shadow:0 -2px 0 0 #5f9744 inset
}

table tr.never td{
  background-color:transparent
}

table tbody {
  border-style: solid;
  border: 1px solid rgba(0,0,0,0.1)
}

table .num {
  border-right: 1px solid rgba(0,0,0,0.1)
}

td.coverage em {
  opacity: 0.5;
}

table td.coverage {
  border-right: 1px solid rgba(0,0,0,0.1);
  font-weight: bold;
  text-align: center;
}
table.table-condensed pre {
  background-color: transparent;
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 11px;
}
div#files td {
  padding: 0;
  padding-left: 5px;
}

div#files td.num {
  padding-right: 5px;
}

table.table-condensed {
  font-size: 11px;
}</style>
  <div class="col-md-8 col-md-offset-2">
    <h2>poliprep coverage - 63.80%</h2>
    <div class="tabbable">
      <ul class="nav nav-tabs" data-tabsetid="covr">
        <li class="active">
          <a href="#tab-covr-1" data-toggle="tab" data-value="Files">Files</a>
        </li>
        <li>
          <a href="#tab-covr-2" data-toggle="tab" data-value="Source">Source</a>
        </li>
      </ul>
      <div class="tab-content" data-tabsetid="covr">
        <div class="tab-pane active" title="Files" data-value="Files" id="tab-covr-1">
          <div class="datatables html-widget html-fill-item" id="htmlwidget-04e277f44e1e65356910" style="width:100%;height:500px;"></div>
          <script type="application/json" data-for="htmlwidget-04e277f44e1e65356910">{"x":{"filter":"none","vertical":false,"fillContainer":false,"data":[["<a href=\"#\">R/prep_mdb_merge.R<\/a>","<a href=\"#\">R/compress_png_files.R<\/a>","<a href=\"#\">R/setup.R<\/a>","<a href=\"#\">R/validate_data.R<\/a>","<a href=\"#\">R/get_polis.R<\/a>","<a href=\"#\">R/prep_dates.R<\/a>","<a href=\"#\">R/prep_coords.R<\/a>","<a href=\"#\">R/assign_round_number.R<\/a>","<a href=\"#\">R/find_nearest_coord.R<\/a>","<a href=\"#\">R/prep_detections.R<\/a>","<a href=\"#\">R/categorize_biannual.R<\/a>","<a href=\"#\">R/prep_match_datatypes.R<\/a>","<a href=\"#\">R/prep_match_names.R<\/a>","<a href=\"#\">R/read.R<\/a>","<a href=\"#\">R/save.R<\/a>","<a href=\"#\">R/detect_date_format.R<\/a>"],[84,67,205,2135,841,865,885,95,50,482,81,66,88,87,91,54],[39,31,77,933,257,359,397,29,17,292,40,22,21,20,19,19],[0,0,22,398,126,291,350,27,16,275,40,22,21,20,19,19],[39,31,55,535,131,68,47,2,1,17,0,0,0,0,0,0],["0","0","3","1","2","2","5","2","1","2","1","2","5","4","3","21"],["0.00%","0.00%","28.57%","42.66%","49.03%","81.06%","88.16%","93.10%","94.12%","94.18%","100.00%","100.00%","100.00%","100.00%","100.00%","100.00%"]],"container":"<table class=\"row-border\">\n  <thead>\n    <tr>\n      <th>File<\/th>\n      <th>Lines<\/th>\n      <th>Relevant<\/th>\n      <th>Covered<\/th>\n      <th>Missed<\/th>\n      <th>Hits / Line<\/th>\n      <th>Coverage<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"searching":false,"dom":"t","paging":false,"columnDefs":[{"targets":6,"createdCell":"function(td, cellData, rowData, row, col) {\n  var percent = cellData.replace(\"%\", \"\");\n  if (percent > 90) {\n    var grad = \"linear-gradient(90deg, #edfde7 \" + cellData + \", white \" + cellData + \")\";\n  } else if (percent > 75) {\n    var grad = \"linear-gradient(90deg, #f9ffe5 \" + cellData + \", white \" + cellData + \")\";\n  } else {\n    var grad = \"linear-gradient(90deg, #fcece9 \" + cellData + \", white \" + cellData + \")\";\n  }\n  $(td).css(\"background\", grad);\n}\n"},{"className":"dt-right","targets":[1,2,3,4]},{"name":"File","targets":0},{"name":"Lines","targets":1},{"name":"Relevant","targets":2},{"name":"Covered","targets":3},{"name":"Missed","targets":4},{"name":"Hits / Line","targets":5},{"name":"Coverage","targets":6}],"order":[],"autoWidth":false,"orderClasses":false},"callback":"function(table) {\ntable.on('click.dt', 'a', function() {\n  files = $('div#files div');\n  files.not('div.hidden').addClass('hidden');\n  id = $(this).text();\n  files.filter('div[id=\\'' + id + '\\']').removeClass('hidden');\n  $('ul.nav a[data-value=Source]').text(id).tab('show');\n});\n}","selection":{"mode":"multiple","selected":null,"target":"row","selectable":null}},"evals":["options.columnDefs.0.createdCell","callback"],"jsHooks":[]}</script>
        </div>
        <div class="tab-pane" title="Source" data-value="Source" id="tab-covr-2">
          <div id="files">
            <div id="R/prep_dates.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Try parsing dates with multiple formats</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This helper function attempts to parse dates using specified formats and </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' handles ISO 8601 formatted dates (containing 'T') separately using ymd_hms.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param x A character vector of dates to parse</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param formats A character vector of date formats to try (see ?strptime for </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   format specifications)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A POSIXct vector of parsed dates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">try_parsing &lt;- function(x, formats) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">12</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  parsed &lt;- lubridate::parse_date_time(x,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">13</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                       orders = formats, quiet = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Handle special cases</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">17</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  iso_indices &lt;- grepl("T", x)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">18</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  parsed[iso_indices] &lt;- lubridate::ymd_hms(x[iso_indices], quiet = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">20</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(parsed)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Available date formats for `autoparse_dates` function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' A character vector containing all supported date formats that can be parsed </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' by `autoparse_dates()`. These formats follow standard date-time components:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \itemize{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item d: day</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item m: month</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Y/y: year (Y=4 digits, y=2 digits)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item B: full month name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item b: abbreviated month name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item H: hour</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item M: minute</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item S: second</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @format A character vector of date format strings</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' head(available_date_formats)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">available_date_formats &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "dmY", "mdY", "Ymd", "Ydm",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "dmy", "mdy", "ymd", "ydm",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "dmY HMS", "mdY HMS", "Ymd HMS", "Ydm HMS",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "dmy HMS", "mdy HMS", "ymd HMS", "ydm HMS",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "Y-m-d", "Y-m-d H:M:S", "Y-m-d H:M",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "y-m-d", "y-m-d H:M:S", "y-m-d H:M",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d-m-Y H:M:S", "d.m.Y H:M:S", "d.m.Y H:M",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d-m-y H:M:S", "d.m.y H:M:S", "d.m.y H:M",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d B Y", "B d, Y", "Y B d",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d B y", "B d, y", "y B d",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d b Y", "b d, Y", "Y b d",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d b y", "b d, y", "y b d",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "dmY", "mdY", "d-m-Y H:M", "d.m.Y", "d.m.Y H:M",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "dmy", "mdy", "d-m-y H:M", "d.m.y", "d.m.y H:M",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d/m/Y", "d/m/Y H:M:S", "d/m/Y H:M", "d/m/Y HMS", "d/m/Y HM",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "d/m/y", "d/m/y H:M:S", "d/m/y H:M", "d/m/y HMS", "d/m/y HM",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "Y/m/d", "Y/m/d H:M:S", "Y/m/d H:M", "Y/m/d HMS", "Y/m/d HM",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  "y/m/d", "y/m/d H:M:S", "y/m/d H:M", "y/m/d HMS", "y/m/d HM"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Parse Dates in a Data Frame</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function parses date columns in a data frame using various date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' formats. It standardizes the output to a specified format and provides</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' verbose feedback on parsing results.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">68</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing columns with date values to parse.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">69</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_cols A character vector specifying the names of columns with</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    date values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">71</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param output_format A character string specifying the desired output format</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">72</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    for the parsed dates. Default is \code{"\%Y-\%m-\%d"}.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">73</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param additional_format A character string specifying any additional formats </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">74</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    that are not included in the default formats </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">75</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    (see `available_date_formats`). Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">76</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param verbose Logical. If \code{TRUE}, prints messages about parsing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">77</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   success or failure for each column. Default is \code{TRUE}.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">78</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return Returns the original data frame with the specified date columns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">80</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'  parsed and formatted.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">81</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function supports a wide range of date formats, including:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \itemize{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Basic formats: \code{"dmY"}, \code{"mdY"}, \code{"Ymd"},</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">86</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \code{"Ydm"}, \code{"dmy"}, \code{"mdy"}, \code{"ymd"}, \code{"ydm"}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">87</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Formats with time: \code{"dmY HMS"}, \code{"mdY HMS"},</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \code{"Ymd HMS"}, \code{"Ydm HMS"}, \code{"dmy HMS"}, \code{"mdy HMS"},</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">89</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \code{"ymd HMS"}, \code{"ydm HMS"}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">90</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Additional formats: \code{"Y-m-d"}, \code{"Y-m-d H:M:S"},</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">91</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \code{"Y-m-d H:M"}, \code{"d-m-Y H:M:S"}, \code{"d.m.Y H:M:S"},</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">92</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \code{"d.m.Y H:M"}, \code{"d-m-Y H:M"}, \code{"d.m.Y"}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">93</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item ISO 8601 format: e.g., \code{"2021-03-20T00:01:00.513+01:00"}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">94</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">95</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">96</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">97</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Define a sample data frame</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">98</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' df &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">99</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `dmY` = c("03-10-2023", "11-09-2022", "25-12-2021", "15-08-2020"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">100</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `mdY` = c("10-03-2023", "09-11-2022", "12-25-2021", "08-15-2020"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">101</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Ymd` = c("2023-10-03", "2022-09-11", "2021-12-25", "2020-08-15"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">102</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Ydm` = c("2023-03-10", "2022-11-09", "2021-25-12", "2020-15-08"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">103</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `dmy` = c("03-10-23", "11-09-22", "25-12-21", "15-08-20"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">104</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `mdy` = c("10-03-23", "09-11-22", "12-25-21", "08-15-20"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">105</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `ymd` = c("23-10-03", "22-09-11", "21-12-25", "20-08-15"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">106</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `ydm` = c("23-03-10", "22-11-09", "21-25-12", "20-15-08"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">107</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `dmY_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">108</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "03-10-2023 14:30:00", "11-09-2022 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">109</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "25-12-2021 23:59:59", "15-08-2020 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">111</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `mdY_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "10-03-2023 14:30:00", "09-11-2022 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">113</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "12-25-2021 23:59:59", "08-15-2020 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">114</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">115</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Ymd_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">116</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2023-10-03 14:30:00", "2022-09-11 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">117</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2021-12-25 23:59:59", "2020-08-15 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">119</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Ydm_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">120</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2023-03-10 14:30:00", "2022-11-09 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">121</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2021-25-12 23:59:59", "2020-15-08 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">123</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `dmy_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">124</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "03-10-23 14:30:00", "11-09-22 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">125</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "25-12-21 23:59:59", "15-08-20 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">126</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">127</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `mdy_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "10-03-23 14:30:00", "09-11-22 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">129</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "12-25-21 23:59:59", "08-15-20 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">130</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">131</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `ymd_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "23-10-03 14:30:00", "22-09-11 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">133</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "21-12-25 23:59:59", "20-08-15 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">134</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">135</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `ydm_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">136</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "23-03-10 14:30:00", "22-11-09 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">137</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "21-25-12 23:59:59", "20-15-08 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">138</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">139</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Y-m-d` = c("2023-10-03", "2022-09-11", "2021-12-25", "2020-08-15"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">140</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Y-m-d_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">141</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2023-10-03 14:30:00", "2022-09-11 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">142</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2021-12-25 23:59:59", "2020-08-15 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">143</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">144</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `Y-m-d_HM` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">145</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2023-10-03 14:30", "2022-09-11 05:45",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">146</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2021-12-25 23:59", "2020-08-15 00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">147</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">148</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `d-m-Y_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">149</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "03-10-2023 14:30:00", "11-09-2022 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">150</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "25-12-2021 23:59:59", "15-08-2020 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">151</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">152</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `d.m.Y_HMS` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">153</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "03.10.2023 14:30:00", "11.09.2022 05:45:12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">154</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "25.12.2021 23:59:59", "15.08.2020 00:00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">155</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">156</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `d.m.Y_HM` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">157</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "03.10.2023 14:30", "11.09.2022 05:45",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">158</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "25.12.2021 23:59", "15.08.2020 00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">159</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">160</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `d-m-Y_HM` = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">161</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "03-10-2023 14:30", "11-09-2022 05:45",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">162</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "25-12-2021 23:59", "15-08-2020 00:00"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">163</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">164</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `d.m.Y` = c("03.10.2023", "11.09.2022", "25.12.2021", "15.08.2020"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">165</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `iso8601` = c("2021-03-20T00:01:00.513+01:00", </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">166</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 "2022-11-05T23:15:59.123+01:00",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">167</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 "2023-06-15T12:30:45.789Z", </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">168</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 "2020-01-01T00:00:00.000-05:00"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">169</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   `mixed_formats` = c("2023-10-03", "11.09.2022",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">170</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                      "25-12-21 23:59", "2020-08-15T00:00:00Z"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">171</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">172</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">173</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">174</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Parse the date columns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">175</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' parsed_df &lt;- autoparse_dates(df,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">176</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   date_cols = colnames(df),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">177</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   output_format = "%Y-%m-%d"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">178</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">179</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">180</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">181</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">autoparse_dates &lt;- function(data, date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">182</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            output_format = "%Y-%m-%d", </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">183</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            additional_format = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">184</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            verbose = TRUE) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">185</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.character(date_cols)) date_cols &lt;- as.character(date_cols)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">186</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">187</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  parse_results &lt;- vector("list", length(date_cols))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">188</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  names(parse_results) &lt;- date_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">189</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">190</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # set up formats by also including additional formats</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">191</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  formats &lt;- c(available_date_formats, additional_format)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">192</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">193</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">194</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">195</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::across(dplyr::all_of(date_cols), \(x) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">196</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed &lt;- try_parsing(x, formats)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">197</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parse_results[[dplyr::cur_column()]] &lt;&lt;- sum(is.na(parsed))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">198</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">199</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (output_format %in% "%Y-%m-%d") {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">200</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          as.Date(parsed)  } else { as.Date(parsed) |&gt; format(output_format) }</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">201</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      })) -&gt; data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">202</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">203</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (verbose) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">204</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    purrr::iwalk(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">205</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      parse_results, \(result, col) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">206</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (result &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">207</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">208</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Warning: {result} dates could not be parsed in column '{col}'"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">209</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">210</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">211</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">212</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">213</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (all(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">214</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      purrr::map_lgl(parse_results, \(x) x == 0))) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">215</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">216</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "All columns have been successfully parsed to the given format"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">217</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">218</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">219</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">220</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">221</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">222</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">223</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">224</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check Leap Year Issues in Date Column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">225</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">226</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function checks if the dates in the given column have leap year issues.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">227</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' It identifies dates that are February 29 in a non-leap year.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">228</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">229</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_col A character vector representing date values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">230</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A logical vector indicating which dates have leap year issues.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">231</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">232</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' dates &lt;- c("2020-02-29", "2019-02-29", "2021-03-01")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">233</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' check_leap_issue(dates)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">234</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">235</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_leap_issue &lt;- function(date_col) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">236</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_col &lt;- gsub("/", "-", date_col)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">237</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_col &lt;- gsub("T.*$", "", date_col) # remove time from date</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">238</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_parts &lt;- strsplit(date_col, "-")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">239</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  leap_issue &lt;- sapply(date_parts, function(parts) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">240</td>
                    <td class="coverage">51<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (length(parts) == 3) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">241</td>
                    <td class="coverage">47<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      year &lt;- as.integer(parts[[1]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">242</td>
                    <td class="coverage">47<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      month &lt;- as.integer(parts[[2]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">243</td>
                    <td class="coverage">47<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      day &lt;- as.integer(parts[[3]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">244</td>
                    <td class="coverage">47<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if (!is.na(year) &amp;&amp; !is.na(month) &amp;&amp; !is.na(day)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">245</td>
                    <td class="coverage">47<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        return(month == 2 &amp;&amp; day == 29 &amp;&amp; !lubridate::leap_year(year))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">246</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">247</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">248</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">249</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">250</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(leap_issue)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">251</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">252</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">253</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Validate Date Column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">254</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">255</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function checks and validates a date column in a data frame. It</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">256</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' performs various checks for missing dates, non-date values, sensible dates,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">257</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' leap year validity, and date formatting.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">258</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">259</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the date column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">260</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_col The name of the date column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">261</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param tests A character vector specifying which tests to run. Default is</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">262</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        c("missing", "non_date", "sensible", "leap_year", "format").</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">263</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_year The minimum year to consider as valid. Default is 2000.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">264</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return The modified data frame with additional columns indicating issues</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">265</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         found during the checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">266</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">267</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">268</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   country = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">269</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Rwanda", "Burundi", "Ethiopia", "Zambia", "Zambia",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">270</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Chad", "Niger", "Angola"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">271</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">272</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   date = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">273</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2023-06-15", "2024-07-20", NA, "1999-12-31", "2025-08-22",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">274</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2020/23/10", "2020-02-29", "2019-02-29"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">275</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">276</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">277</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">278</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # check whether dates column is valid</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">279</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res &lt;- validate_date(data, "date")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">280</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">281</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where there is a non-date issue in the date column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">282</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">283</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date_non_date == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">284</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">285</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">286</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where there is an invalid leap year issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">287</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">288</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date_leap_issue == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">289</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">290</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">291</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where there is improper formatting of the date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">292</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">293</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date_format_issue == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">294</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">295</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">296</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">297</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">validate_date &lt;- function(data, date_col,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">298</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          tests = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">299</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            "missing", "non_date", "sensible",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">300</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            "leap_year", "format"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">301</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">302</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          min_year = 2000) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">303</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">304</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">305</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suppressWarnings(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">306</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # parse datest correctly at the start</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">307</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">308</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">309</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_date = lubridate::parse_date_time(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">310</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(date_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">311</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">312</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmY", "mdY", "Ymd", "Ydm",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">313</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmy", "mdy", "ymd", "ydm",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">314</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmY HMS", "mdY HMS", "Ymd HMS", "Ydm HMS",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">315</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmy HMS", "mdy HMS", "ymd HMS", "ydm HMS"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">316</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">317</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          train = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">318</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">319</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_date = as.character(parsed_date),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">320</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(date_col) := as.character(!!rlang::sym(date_col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">321</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">322</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">323</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(date_col) := dplyr::if_else(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">324</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          is.na(parsed_date), !!rlang::sym(date_col), parsed_date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">325</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">326</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">327</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(-parsed_date)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">328</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">329</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">330</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 1: Check for missing dates -------------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">331</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("missing" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">332</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for missing dates")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">333</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data[[paste0(date_col, "_missing")]] &lt;- is.na(data[[date_col]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">334</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">335</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(data[[paste0(date_col, "_missing")]], na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">336</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">337</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">338</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">339</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">340</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            sum(data[[paste0(date_col, "_missing")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">341</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                na.rm = T</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">342</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">343</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            big.mark = ","</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">344</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">345</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">346</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " missing date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">347</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col, "_missing")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">348</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">349</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">350</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Date column is non-missing!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">351</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">352</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">353</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results$missing &lt;- data[[paste0(date_col, "_missing")]]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">354</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">355</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">356</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 2: Check for non-date values -----------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">357</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("non_date" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">358</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for non-date values")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">359</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    non_date &lt;- is.na(as.Date(data[[date_col]], format = "%Y-%m-%d")) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">360</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !is.na(data[[date_col]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">361</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">362</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data[[paste0(date_col, "_non_date")]] &lt;- non_date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">363</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">364</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(non_date, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">365</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">366</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">367</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">368</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(non_date, na.rm = T), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">369</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">370</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-date value(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">371</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col, "_non_date")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">372</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">373</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">374</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Date column has fully valid dates!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">375</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">376</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">377</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results$non_date &lt;- non_date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">378</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">379</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">380</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 3: Check for sensible dates ------------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">381</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("sensible" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">382</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for sensible dates")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">383</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">384</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    invalid_date &lt;- !stringr::str_detect(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">385</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data[[date_col]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">386</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0("^", substr(min_year, 1, 2) |&gt; as.numeric())</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">387</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">388</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">389</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    current_year &lt;- lubridate::year(Sys.Date())</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">390</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">391</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    future_date &lt;- lubridate::year(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">392</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">393</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) &gt; current_year</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">394</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">395</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data[[paste0(date_col, "_invalid")]] &lt;- invalid_date</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">396</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data[[paste0(date_col, "_future")]] &lt;- future_date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">397</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">398</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(invalid_date, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">399</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">400</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">401</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">402</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(invalid_date, na.rm = T), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">403</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">404</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-sensible date(s) (not starting with '", min_year,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">405</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "')! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">406</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col, "_invalid")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">407</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">408</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">409</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">410</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(future_date, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">411</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">412</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">413</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">414</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(future_date, na.rm = T), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">415</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">416</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " date(s) with a year greater than the current year! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">417</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col, "_future")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">418</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">419</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">420</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!any(invalid_date, na.rm = TRUE) &amp;&amp; !any(future_date, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">421</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Date column has sensible dates!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">422</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">423</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">424</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results$invalid &lt;- invalid_date</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">425</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results$future &lt;- future_date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">426</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">427</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">428</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 4: Check for leap year validity --------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">429</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("leap_year" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">430</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for leap year validity")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">431</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    na_issue &lt;- is.na(data[[date_col]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">432</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">433</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    leap_issue &lt;- check_leap_issue(data[[date_col]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">434</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">435</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data[[paste0(date_col, "_leap_issue")]] &lt;- leap_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">436</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">437</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(leap_issue, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">438</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">439</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">440</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">441</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(leap_issue, na.rm = T), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">442</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">443</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " invalid leap year date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">444</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col, "_leap_issue")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">445</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">446</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">447</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Date column has no leap year issues!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">448</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">449</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">450</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results$leap_issue &lt;- leap_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">451</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">452</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">453</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 5: Check for improper date formatting --------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">454</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("format" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">455</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for improper date formatting")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">456</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    valid_indices &lt;- !leap_issue &amp; !na_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">457</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">458</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_col_no_leap &lt;- data[[date_col]][valid_indices]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">459</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">460</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_col_converted &lt;- as.Date(date_col_no_leap, format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">461</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">462</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    format_issue &lt;- is.na(date_col_converted)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">463</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">464</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_format_issue &lt;- rep(FALSE, nrow(data))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">465</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_format_issue[valid_indices] &lt;- format_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">466</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">467</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data[[paste0(date_col, "_format_issue")]] &lt;- full_format_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">468</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">469</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(full_format_issue, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">470</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">471</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">472</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">473</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(full_format_issue, na.rm = T), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">474</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">475</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " improperly formatted date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">476</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col, "_format_issue")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">477</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">478</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">479</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Date column has no formatting issues!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">480</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">481</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">482</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results$format_issue &lt;- full_format_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">483</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">484</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">485</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">486</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">487</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">488</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Validate Date Columns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">489</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">490</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function checks and validates two date columns in a data frame. It</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">491</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' performs various checks for missing dates, non-date values, sensible dates,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">492</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' leap year validity, date formatting, similarity in date formatting, and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">493</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' if the first date is before the second date.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">494</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">495</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the date columns.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">496</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_col1 The name of the first date column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">497</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_col2 The name of the second date column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">498</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param tests A character vector specifying which tests to run. Default is</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">499</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        c("missing", "non_date", "sensible", "leap_year", "format",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">500</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        "similarity", "order").</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">501</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_year The minimum year to consider as valid. Default is 2000.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">502</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return The modified data frame with additional columns indicating issues</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">503</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         found during the checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">504</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">505</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">506</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   country = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">507</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Rwanda", "Burundi", "Ethiopia", "Zambia", "Zambia",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">508</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Chad", "Niger", "Angola"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">509</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">510</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   date1 = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">511</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2024-06-15", "2024-07-20", NA, "1999-12-31", "2025-08-22",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">512</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2020/23/10", "2020-02-29", "2024-02-29"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">513</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">514</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   date2 = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">515</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2023-06-15", "2024-07-20", "2022-05-10", "2019-02-29",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">516</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "2026-09-23", "2020/23/10", "2020-02-29", "2022-02-29"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">517</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">518</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">519</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">520</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res &lt;- validate_dates(data, "date1", "date2")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">521</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">522</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where there is a non-date issue in the date1 column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">523</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">524</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date1_non_date == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">525</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">526</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">527</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where there is an invalid leap year issue in date1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">528</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">529</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date1_leap_issue == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">530</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">531</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">532</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where there is improper formatting of date1 col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">533</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">534</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date1_format_issue == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">535</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">536</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">537</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check for countries where date1 is after date2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">538</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">539</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::filter(date1_invalid_order == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">540</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   dplyr::count(country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">541</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">542</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">543</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">validate_dates &lt;- function(data, date_col1, date_col2,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">544</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           tests = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">545</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             "missing", "non_date", "sensible",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">546</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             "leap_year", "format", "similarity",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">547</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             "order"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">548</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">549</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           min_year = 2000) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">550</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results &lt;- data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">551</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">552</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # parse datest correctly at the start</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">553</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suppressWarnings(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">554</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">555</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">556</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_date1 := lubridate::parse_date_time(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">557</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(date_col1),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">558</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">559</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmY HMS", "mdY HMS", "Ymd HMS", "Ydm HMS",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">560</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmy HMS", "mdy HMS", "ymd HMS", "ydm HMS"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">561</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">562</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          train = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">563</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">564</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_date2 := lubridate::parse_date_time(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">565</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(date_col2),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">566</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">567</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmY HMS", "mdY HMS", "Ymd HMS", "Ydm HMS",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">568</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "dmy HMS", "mdy HMS", "ymd HMS", "ydm HMS"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">569</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">570</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          train = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">571</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">572</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_date1 = as.character(parsed_date1),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">573</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_date2 = as.character(parsed_date2),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">574</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(date_col1) := as.character(!!rlang::sym(date_col1)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">575</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(date_col2) := as.character(!!rlang::sym(date_col2))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">576</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">577</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">578</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(date_col1) := dplyr::if_else(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">579</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          is.na(parsed_date1), !!rlang::sym(date_col1), parsed_date1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">580</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">581</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(date_col2) := dplyr::if_else(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">582</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          is.na(parsed_date2), !!rlang::sym(date_col2), parsed_date2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">583</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">584</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">585</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(-parsed_date1, -parsed_date2)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">586</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">587</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">588</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 1: Check for missing dates -------------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">589</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("missing" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">590</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for missing dates")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">591</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_missing")]] &lt;- is.na(data[[date_col1]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">592</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col2, "_missing")]] &lt;- is.na(data[[date_col2]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">593</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">594</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(results[[paste0(date_col1, "_missing")]], na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">595</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">596</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">597</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">598</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(results[[paste0(date_col1, "_missing")]], na.rm = TRUE),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">599</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                 big.mark = ","</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">600</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">601</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">602</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " missing date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">603</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col1, "_missing")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">604</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">605</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">606</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(results[[paste0(date_col2, "_missing")]], na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">607</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">608</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col2), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">609</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">610</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(results[[paste0(date_col2, "_missing")]], na.rm = TRUE),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">611</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                 big.mark = ","</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">612</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">613</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">614</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " missing date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">615</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_missing")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">616</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">617</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">618</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!any(results[[paste0(date_col1, "_missing")]], na.rm = TRUE) &amp;&amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">619</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !any(results[[paste0(date_col2, "_missing")]], na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">620</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Both date columns are non-missing!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">621</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">622</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">623</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">624</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 2: Check for non-date values -----------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">625</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("non_date" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">626</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for non-date values")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">627</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    non_date1 &lt;- is.na(as.Date(data[[date_col1]], format = "%Y-%m-%d")) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">628</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !is.na(data[[date_col1]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">629</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    non_date2 &lt;- is.na(as.Date(data[[date_col2]], format = "%Y-%m-%d")) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">630</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !is.na(data[[date_col2]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">631</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">632</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_non_date")]] &lt;- non_date1</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">633</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col2, "_non_date")]] &lt;- non_date2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">634</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">635</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(non_date1, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">636</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">637</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">638</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">639</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(non_date1, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">640</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">641</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-date value(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">642</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col1, "_non_date")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">643</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">644</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">645</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(non_date2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">646</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">647</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col2), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">648</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">649</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(non_date2, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">650</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">651</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-date value(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">652</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_non_date")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">653</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">654</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">655</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!any(non_date1, na.rm = TRUE) &amp;&amp; !any(non_date2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">656</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Both date columns have fully valid dates!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">657</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">658</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">659</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">660</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 3: Check for sensible dates ------------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">661</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("sensible" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">662</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for sensible dates")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">663</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">664</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    current_year &lt;- lubridate::year(Sys.Date())</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">665</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">666</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    invalid_date1 &lt;- !between(lubridate::year(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">667</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col1]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">668</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ), min_year, current_year)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">669</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    invalid_date2 &lt;- !between(lubridate::year(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">670</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col2]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">671</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ), min_year, current_year)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">672</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">673</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    future_date1 &lt;- lubridate::year(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">674</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col1]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">675</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) &gt; current_year</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">676</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    future_date2 &lt;- lubridate::year(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">677</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col2]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">678</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) &gt; current_year</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">679</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">680</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_invalid")]] &lt;- invalid_date1</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">681</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col2, "_invalid")]] &lt;- invalid_date2</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">682</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_future")]] &lt;- future_date1</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">683</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col2, "_future")]] &lt;- future_date2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">684</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">685</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(invalid_date1, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">686</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">687</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">688</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">689</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(invalid_date1, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">690</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">691</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-sensible date(s) (not between ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">692</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        min_year, " and ", current_year, ")! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">693</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col1, "_invalid")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">694</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">695</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">696</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(invalid_date2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">697</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">698</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col2), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">699</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">700</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(invalid_date2, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">701</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">702</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-sensible date(s) (not between ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">703</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        min_year, " and ", current_year, ")! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">704</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_invalid")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">705</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">706</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">707</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(future_date1, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">708</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">709</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">710</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">711</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(future_date1, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">712</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">713</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " date(s) with a year greater than the current year! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">714</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col1, "_future")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">715</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">716</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">717</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(future_date2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">718</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">719</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col2), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">720</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">721</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(future_date2, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">722</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">723</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " date(s) with a year greater than the current year! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">724</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_future")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">725</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">726</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">727</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!any(invalid_date1, na.rm = TRUE) &amp;&amp; !any(invalid_date2, na.rm = TRUE) &amp;&amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">728</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !any(future_date1, na.rm = TRUE) &amp;&amp; !any(future_date2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">729</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Both date columns have sensible dates!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">730</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">731</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">732</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">733</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 4: Check for leap year validity --------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">734</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("leap_year" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">735</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for leap year validity")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">736</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    leap_issue1 &lt;- check_leap_issue(data[[date_col1]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">737</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    leap_issue2 &lt;- check_leap_issue(data[[date_col2]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">738</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">739</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_leap_issue")]] &lt;- leap_issue1</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">740</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col2, "_leap_issue")]] &lt;- leap_issue2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">741</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">742</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(leap_issue1, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">743</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">744</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">745</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">746</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(leap_issue1, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">747</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">748</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " invalid leap year date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">749</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col1, "_leap_issue")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">750</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">751</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">752</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(leap_issue2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">753</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">754</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col2), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">755</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">756</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(leap_issue2, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">757</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">758</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " invalid leap year date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">759</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_leap_issue")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">760</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">761</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">762</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!any(leap_issue1, na.rm = TRUE) &amp;&amp; !any(leap_issue2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">763</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Both date columns have no leap year issues!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">764</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">765</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">766</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">767</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 5: Check for improper date formatting --------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">768</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("format" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">769</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check for improper date formatting")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">770</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    valid_indices1 &lt;- !is.na(data[[date_col1]])</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">771</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    valid_indices2 &lt;- !is.na(data[[date_col2]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">772</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">773</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_col1_no_na &lt;- data[[date_col1]][valid_indices1]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">774</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_col2_no_na &lt;- data[[date_col2]][valid_indices2]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">775</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">776</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_col1_converted &lt;- as.Date(date_col1_no_na, format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">777</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_col2_converted &lt;- as.Date(date_col2_no_na, format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">778</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">779</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    format_issue1 &lt;- is.na(date_col1_converted)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">780</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    format_issue2 &lt;- is.na(date_col2_converted)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">781</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">782</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_format_issue1 &lt;- rep(FALSE, nrow(data))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">783</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_format_issue1[valid_indices1] &lt;- format_issue1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">784</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">785</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_format_issue2 &lt;- rep(FALSE, nrow(data))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">786</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_format_issue2[valid_indices2] &lt;- format_issue2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">787</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">788</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_format_issue")]] &lt;- full_format_issue1</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">789</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col2, "_format_issue")]] &lt;- full_format_issue2</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">790</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">791</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(full_format_issue1, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">792</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">793</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">794</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">795</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(full_format_issue1, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">796</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">797</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " improperly formatted date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">798</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col1, "_format_issue")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">799</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">800</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">801</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(full_format_issue2, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">802</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">803</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col2), " has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">804</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">805</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(full_format_issue2, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">806</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">807</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " improperly formatted date(s)! Check column ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">808</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_format_issue")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">809</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">810</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">811</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!any(full_format_issue1, na.rm = TRUE) &amp;&amp; !any(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">812</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      full_format_issue2,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">813</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">814</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">815</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Both date columns have no formatting issues!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">816</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">817</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">818</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">819</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 6: Check similarity in date formatting -------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">820</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("similarity" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">821</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check similarity in date formatting")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">822</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date1_fmt &lt;- poliprep::detect_date_format(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">823</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col1]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">824</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">825</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date2_fmt &lt;- poliprep::detect_date_format(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">826</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(data[[date_col2]][!is.na(data[[date_col2]])], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">827</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">828</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">829</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (date1_fmt != date2_fmt) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">830</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">831</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Date column ", crayon::blue(date_col1), " has format ", date1_fmt,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">832</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " while date column ", crayon::blue(date_col2), " has format ", date2_fmt,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">833</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ". Check columns ", crayon::green(paste0(date_col1, "_fmt")), " and ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">834</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        crayon::green(paste0(date_col2, "_fmt")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">835</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">836</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">837</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Both date columns have the same format!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">838</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">839</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">840</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">841</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 7: Check if the first date is before the second date -----------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">842</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("order" %in% tests) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">843</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Check if the first date is before the second date")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">844</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    invalid_order &lt;- as.Date(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">845</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data[[date_col1]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">846</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      format = "%Y-%m-%d"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">847</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) &gt; as.Date(data[[date_col2]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">848</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">849</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results[[paste0(date_col1, "_invalid_order")]] &lt;- invalid_order</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">850</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">851</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (any(invalid_order, na.rm = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">852</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">853</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "There are ", crayon::red(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">854</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          format(sum(invalid_order, na.rm = TRUE), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">855</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">856</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " instances where the first date is not before the second date! ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">857</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Check column ", crayon::green(paste0(date_col1, "_invalid_order")), "."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">858</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">859</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">860</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("All date pairs are in the correct order!")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">861</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">862</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">863</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">864</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(results)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">865</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/validate_data.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check for Missing Values in a Data Frame</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function analyzes a data frame for missing values, providing both</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' counts and percentages of missing data for specified columns or all columns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' if not specified. It also allows grouping by one or more variables.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame to check for missing values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param cols_to_check An optional character vector of column names to check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        If NULL (default), all columns are checked.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param key_columns An optional character vector of column names that</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        are considered key for the analysis. Any missing values in these</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        columns will be flagged as "High Priority" in the output.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param group_by An optional character vector of column names to group by.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        If provided, missing values will be calculated within each group.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A tibble with columns:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{Column}{The name of the checked column}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{Missing Count}{The number of missing values in the column}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{Missing Percent}{The percentage of missing values in the column}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{Priority}{Indicates if the column is "High Priority" or "Standard"}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{Is Completely Null}{Indicates if the column is completely null}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   If grouping is used, additional columns for each grouping variable will be</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   included.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' df &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   a = c(1, 2, NA), b = c("x", NA, "z"), c = c(TRUE, FALSE, TRUE),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Year = c(2020, 2021, 2020), Country = c("USA", "Canada", "USA")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' check_missing(df)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' check_missing(df, c("a", "b"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' check_missing(df, group_by = c("Year", "Country"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_missing &lt;- function(data, cols_to_check = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          key_columns = NULL, group_by = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # If no columns specified, use all columns except grouping variables</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">38</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (base::is.null(cols_to_check)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">39</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cols_to_check &lt;- base::setdiff(base::names(data), group_by)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">41</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cols_to_check &lt;- base::setdiff(cols_to_check, group_by)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Prepare the grouping</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">45</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!base::is.null(group_by)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data &lt;- data |&gt; dplyr::group_by(dplyr::across(dplyr::all_of(group_by)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">50</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::summarise(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">51</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::across(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">52</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::all_of(cols_to_check),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">53</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        .fns = base::list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">54</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          missing_count = ~ base::sum(base::is.na(.)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">55</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          missing_percent = ~ base::mean(base::is.na(.)) * 100</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">58</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      .groups = "drop"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">60</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tidyr::pivot_longer(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">61</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cols = -dplyr::all_of(group_by),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">62</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      names_to = c("column", ".value"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">63</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      names_pattern = "(.*)_(missing_count|missing_percent)"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">65</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(dplyr::desc(missing_percent)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">66</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">67</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      missing_count = big_mark(missing_count),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">68</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      missing_percent = round(missing_percent, 2),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">69</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      priority = dplyr::case_when(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">70</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        column %in% key_columns ~ "High Priority",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">71</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        TRUE ~ "Standard"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">72</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">73</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::rename(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column = column,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">76</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Missing Count` = missing_count,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">77</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Missing Percent` = missing_percent,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">78</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Priority = priority</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">81</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Is Completely Null` = ifelse(`Missing Percent` == 100, TRUE, FALSE),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">82</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column = factor(Column, levels = cols_to_check),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">83</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      key_order = match(Column, key_columns)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">85</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">86</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::across(dplyr::all_of(group_by)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">87</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      key_order, Column, dplyr::desc(`Missing Percent`)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">89</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">90</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::all_of(group_by),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">91</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column, Priority,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">92</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Missing Count`, `Missing Percent`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">93</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Is Completely Null`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">94</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">95</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    as.data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">96</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">97</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # drop Priority col if key column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">98</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # is not specified</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">99</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(key_columns)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">100</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    result &lt;- result |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">101</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(-Priority)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">102</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">103</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">104</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize a list to store results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">105</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_results &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">106</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">107</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Loop through each row in the result</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">108</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_len(nrow(result))) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">109</td>
                    <td class="coverage">38<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    col &lt;- result$Column[i]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">110</td>
                    <td class="coverage">38<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_percent &lt;- result$`Missing Percent`[i]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">111</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Check if there are missing values</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">113</td>
                    <td class="coverage">38<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (missing_percent &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">114</td>
                    <td class="coverage">16<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      missing_results[[length(missing_results) + 1]] &lt;- list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">115</td>
                    <td class="coverage">16<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        column = col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">116</td>
                    <td class="coverage">16<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        missing_percent = missing_percent,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">117</td>
                    <td class="coverage">16<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        missing_count = result$`Missing Count`[i]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">119</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">120</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">121</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Summarize results row by row</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">123</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_h1("Completely Null Columns")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">124</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">125</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_len(nrow(result))) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">126</td>
                    <td class="coverage">38<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (result$`Is Completely Null`[i]) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">127</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">128</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Column '", result$Column[i], "' is completely null."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">129</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">130</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">131</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">133</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Summarize results row by row</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">134</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_h1("Columns with Missing Values")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">135</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">136</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_cols &lt;- result |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">137</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::filter(`Missing Count` &gt; 0 &amp; `Is Completely Null` == FALSE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">138</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(dplyr::desc(`Missing Percent`))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">139</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">140</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_len(nrow(missing_cols))) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">141</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    row &lt;- missing_cols[i, ]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">142</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">143</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h2(paste("Column:", row$Column))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">144</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">145</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Report on columns with missing values</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">146</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_warning(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">147</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Column '", crayon::blue(row$Column), "' has ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">148</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      crayon::red(row$`Missing Percent`), "% (",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">149</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      crayon::red(row$`Missing Count`), ") missing values."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">150</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">151</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">152</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_text("")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">153</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">154</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">155</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">156</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">157</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">158</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Get IDs with Missing Values for a Specific Column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">159</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">160</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function returns the IDs of rows where a specified column has</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">161</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' missing values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">162</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">163</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame to check for missing values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">164</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_column A string specifying the name of the ID column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">165</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param variable A string specifying the name of the column to</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">166</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  check for missing values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">167</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">168</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A vector of IDs corresponding to rows with missing values in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">169</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        the specified column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">170</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">171</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">172</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' df &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">173</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   id = 1:5,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">174</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   a = c(1, NA, 3, NA, 5),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">175</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   b = c("x", "y", NA, "w", "z")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">176</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">177</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' get_missing_ids(df, "id", "a")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">178</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' get_missing_ids(df, "id", "b")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">179</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">180</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">181</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">get_missing_ids &lt;- function(data, id_column, variable) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">182</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">183</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::filter(base::is.na(!!dplyr::sym(variable))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">184</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::pull(!!dplyr::sym(id_column))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">185</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">186</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">187</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Validate Administrative Hierarchy</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">188</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">189</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs validation checks on administrative hierarchy data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">190</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' focusing on hierarchical integrity and uniqueness of combinations.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">191</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">192</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the administrative hierarchy data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">193</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param column_combos A list of character vectors, each representing a set of</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">194</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        hierarchical columns to check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">195</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_columns A character vector specifying the column(s) containing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">196</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        unique identifiers. Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">197</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param return_non_unique A logical value indicating whether to return</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">198</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        non-unique IDs. Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">199</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return If return_non_unique is FALSE (default), returns a data frame</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">200</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         containing the results of hierarchical integrity checks. If</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">201</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         return_non_unique is TRUE and id_columns is provided, returns a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">202</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         vector of non-unique IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">203</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">204</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">205</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Sample data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">206</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' sample_data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">207</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Id = c(1, 2, 3, 4, 5, 6, 7),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">208</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin0GUID = c("A1", "A1", "A2", "A2", "A1", "A2", "A1"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">209</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin0Name = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">210</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Country1", "Country1", "Country2", "Country2",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">211</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Country1", "Country2", "Country1"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">212</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">213</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin1GUID = c("B1", "B2", "B3", "B3", "B1", "B3", "B2"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">214</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin1Name = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">215</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Province1", "Province2", "Province3", "Province3",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">216</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Province1", "Province3", "Province2"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">217</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">218</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin2GUID = c("C1", "C2", "C3", "C4", "C1", "C3", "C2"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">219</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin2Name = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">220</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "District1", "District2", "District3", "District4",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">221</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "District1", "District3", "District2"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">222</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">223</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">224</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">225</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check hierarchical integrity</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">226</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' result1 &lt;- validate_admin_hierarchy(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">227</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   data = sample_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">228</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   column_combos = list(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">229</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     c("Admin0GUID", "Admin1GUID", "Admin2GUID"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">230</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     c("Admin0Name", "Admin1Name", "Admin2Name")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">231</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">232</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">233</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' print(result1)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">234</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">235</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Get non-unique IDs</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">236</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' result2 &lt;- validate_admin_hierarchy(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">237</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   data = sample_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">238</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   column_combos = list(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">239</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     c("Admin0GUID", "Admin1GUID", "Admin2GUID"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">240</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     c("Admin0Name", "Admin1Name", "Admin2Name")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">241</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">242</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   id_columns = "Id",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">243</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   return_non_unique = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">244</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">245</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' print(result2)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">246</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">247</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">248</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">validate_admin_hierarchy &lt;- function(data, column_combos,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">249</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     id_columns = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">250</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     return_non_unique = FALSE) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">251</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check if id_columns is provided when return_non_unique is TRUE</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">252</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (return_non_unique &amp;&amp; is.null(id_columns)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">253</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop("id_columns must be provided when return_non_unique is TRUE")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">254</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">255</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">256</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Validate that id_columns exist in the data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">257</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(id_columns) &amp;&amp; !all(id_columns %in% names(data))) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">258</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_cols &lt;- setdiff(id_columns, names(data))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">259</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(paste(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">260</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The following id_columns are not present in the data:",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">261</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste(missing_cols, collapse = ", ")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">262</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">263</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">264</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">265</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Validate that column_combos are present in the data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">266</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  all_columns &lt;- unique(unlist(column_combos))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">267</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!all(all_columns %in% names(data))) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">268</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_cols &lt;- setdiff(all_columns, names(data))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">269</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(paste(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">270</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The following columns are not present in the data:",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">271</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste(missing_cols, collapse = ", ")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">272</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">273</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">274</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">275</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Convert columns to character</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">276</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">277</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(dplyr::across(dplyr::all_of(all_columns), as.character))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">278</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">279</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result_list &lt;- purrr::map(column_combos, function(combo) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">280</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">281</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::distinct(dplyr::across(dplyr::all_of(combo))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">282</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::summarise(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">283</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        total_count = dplyr::n(),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">284</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        unique_count = dplyr::n_distinct(dplyr::pick(dplyr::everything())),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">285</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        .groups = "drop"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">286</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">287</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">288</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        non_unique_count = total_count - unique_count,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">289</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        proportion_unique = (unique_count / total_count) * 100</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">290</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">291</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(total_count, non_unique_count, proportion_unique)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">292</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">293</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">294</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  names(result_list) &lt;- purrr::map_chr(column_combos, paste, collapse = " ~ ")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">295</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">296</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results_df &lt;- result_list |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">297</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::bind_rows(.id = "Column Combination") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">298</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::rename(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">299</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Total Count" = total_count,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">300</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Non-unique Count" = non_unique_count,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">301</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Proportion Unique" = proportion_unique</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">302</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">303</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    as.data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">304</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">305</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (return_non_unique &amp;&amp; !is.null(id_columns)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">306</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    non_unique_ids &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">307</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::group_by(dplyr::across(dplyr::all_of(all_columns))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">308</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(dplyr::n() &gt; 1) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">309</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::ungroup() |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">310</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::pull(dplyr::all_of(id_columns)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">311</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      unique()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">312</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">313</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(non_unique_ids)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">314</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">315</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(results_df)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">316</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">317</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">318</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Summarize results row by row</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">319</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_h1("Summary of Administrative Hierarchy Validation")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">320</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">321</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_len(nrow(results_df))) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">322</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    row &lt;- results_df[i, ]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">323</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">324</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h2(paste("Column Combination:", row$`Column Combination`))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">325</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">326</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (row$`Non-unique Count` &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">327</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">328</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Found ", crayon::red(row$`Non-unique Count`),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">329</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " non-unique combination(s) out of ", row$`Total Count`, " total."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">330</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">331</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">332</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("All combinations are unique.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">333</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">334</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">335</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_text("")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">336</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">337</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">338</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">339</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check for Mismatches Between Data and Shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">340</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">341</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function compares geographical data with a shapefile to identify</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">342</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' mismatches in names and IDs. It provides both a summary of mismatches and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">343</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' detailed information about specific mismatches.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">344</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">345</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the geographical data to be checked.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">346</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_data A data frame containing the shapefile data. If NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">347</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        poliprep::shp_global will be used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">348</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_name_cols A character vector of column names in 'data' containing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">349</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        geographical names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">350</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_id_cols A character vector of column names in 'data' containing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">351</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        geographical IDs. The first element (typically ADM0_GUID) will be</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">352</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        removed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">353</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_name_cols A character vector of column names in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">354</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        'shapefile_data' containing geographical names. If NULL, default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">355</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        values will be used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">356</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_id_cols A character vector of column names in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">357</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        'shapefile_data' containing geographical IDs. If NULL, default values</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">358</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        will be used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">359</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_col A string specifying the name of the ID column in 'data'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">360</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">361</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list containing two data frames:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">362</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{summary_table}{A summary of mismatches for each geographical column}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">363</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{detailed_mismatches}{Detailed information about each mismatch}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">364</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">365</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">366</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Sample data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">367</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' sample_data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">368</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   EPID = 1:5,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">369</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin0GUID = c("A1", "A1", "A2", "A2", "A3"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">370</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin0Name = c("Country1", "Country1", "Country2", "Country2", "Country3"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">371</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin1GUID = c("B1", "B2", "B3", "B3", "B4"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">372</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin1Name = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">373</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Province1", "Province2", "Province3", "Province3",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">374</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Province4"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">375</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">376</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin2GUID = c("C1", "C2", "C3", "C4", "C5"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">377</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Admin2Name = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">378</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "District1", "District2", "District3", "District4",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">379</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "District5"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">380</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">381</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">382</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">383</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Sample shapefile data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">384</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' shapefile_data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">385</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ADM0_NAME = c("Country1", "Country2"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">386</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ADM1_NAME = c("Province1", "Province3"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">387</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ADM2_NAME = c("District1", "District3"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">388</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ADM1_GUID = c("B1", "B3"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">389</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ADM2_GUID = c("C1", "C3")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">390</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">391</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">392</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Define column names</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">393</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' geo_name_cols &lt;- c("Admin0Name", "Admin1Name", "Admin2Name")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">394</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' geo_id_cols &lt;- c("Admin0GUID", "Admin1GUID", "Admin2GUID")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">395</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' shapefile_name_cols &lt;- c("ADM0_NAME", "ADM1_NAME", "ADM2_NAME")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">396</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' shapefile_id_cols &lt;- c("ADM1_GUID", "ADM2_GUID")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">397</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' id_col &lt;- "EPID"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">398</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">399</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Run the function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">400</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' results &lt;- join_and_check_mismatches(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">401</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   sample_data, shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">402</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   geo_name_cols, geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">403</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   shapefile_name_cols, shapefile_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">404</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   id_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">405</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">406</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">407</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # View results</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">408</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' print(results$summary_table)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">409</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' print(results$detailed_mismatches)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">410</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom stats setNames</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">411</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">412</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">join_and_check_mismatches &lt;- function(data, shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">413</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      geo_name_cols, geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">414</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      shapefile_name_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">415</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      shapefile_id_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">416</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      id_col) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">417</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Remove the first element from geo_id_cols</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">418</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  geo_id_cols &lt;- geo_id_cols[-1]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">419</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">420</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use poliprep::shp_global if shapefile_data is not provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">421</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">422</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">423</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_name_cols &lt;- c("ADM0_NAME", "ADM1_NAME", "ADM2_NAME")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">424</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_id_cols &lt;- c("ADM1_GUID", "ADM2_GUID")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">425</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">426</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">427</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Ensure input integrity</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">428</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(geo_name_cols) != length(shapefile_name_cols) ||</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">429</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    length(geo_id_cols) != length(shapefile_id_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">430</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">431</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">432</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "The number of name columns must match, ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">433</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "and ID columns must match except for ADM0_GUID."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">434</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">435</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">436</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">437</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">438</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Ensure distinct combinations in both datasets</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">439</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">440</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::distinct(dplyr::across(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">441</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::all_of(c(geo_name_cols, geo_id_cols, id_col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">442</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">443</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  shapefile_data &lt;- shapefile_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">444</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::distinct(dplyr::across(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">445</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::all_of(c(shapefile_name_cols, shapefile_id_cols))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">446</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">447</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">448</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize results list</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">449</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">450</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">451</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Summary table to keep track of mismatches</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">452</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  summary_table &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">453</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    Column = c(geo_name_cols, geo_id_cols),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">454</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    Missing_in_Shapefile = numeric(length(c(geo_name_cols, geo_id_cols))),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">455</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">456</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">457</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">458</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Detailed mismatches (long list)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">459</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  detailed_mismatches &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">460</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">461</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">462</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  detailed_mismatches[[id_col]] &lt;- character()</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">463</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  detailed_mismatches$Geo_Column &lt;- character()</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">464</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  detailed_mismatches$Data_Value &lt;- character()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">465</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">466</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check names and IDs for mismatches</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">467</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_along(geo_name_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">468</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Check if names from data exist in shapefile</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">469</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    col &lt;- geo_name_cols[i]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">470</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_col &lt;- shapefile_name_cols[i]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">471</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">472</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Mismatches where data values are not found in the shapefile</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">473</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_in_shapefile &lt;- dplyr::anti_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">474</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data |&gt; dplyr::filter(!is.na(.data[[col]])),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">475</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_data |&gt; dplyr::filter(!is.na(.data[[shapefile_col]])),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">476</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      by = setNames(shapefile_col, col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">477</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">478</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">479</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Update the summary table</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">480</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summary_table$Missing_in_Shapefile[i] &lt;- nrow(missing_in_shapefile)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">481</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">482</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # If there are mismatches, add them to the detailed mismatch table</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">483</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (nrow(missing_in_shapefile) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">484</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      detailed_mismatches &lt;- rbind(detailed_mismatches, data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">485</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        id_col = missing_in_shapefile[[id_col]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">486</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Geo_Column = col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">487</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Data_Value = missing_in_shapefile[[col]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">488</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">489</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">490</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">491</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">492</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">493</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_along(geo_id_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">494</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Check if IDs from data exist in shapefile</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">495</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    col &lt;- geo_id_cols[i]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">496</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_col &lt;- shapefile_id_cols[i]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">497</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">498</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Ensure the shapefile ID column is character and lowercase</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">499</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- shapefile_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">500</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">501</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(shapefile_id_cols[i]) := as.character(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">502</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(shapefile_id_cols[i])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">503</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">504</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(shapefile_id_cols[i]) := stringr::str_to_lower(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">505</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          stringr::str_replace_all(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">506</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            !!rlang::sym(shapefile_id_cols[i]), "[{}]", ""</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">507</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">508</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">509</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">510</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">511</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Ensure the data ID column is character and lowercase</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">512</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">513</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">514</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(geo_id_cols[i]) := as.character(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">515</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(geo_id_cols[i])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">516</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">517</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(geo_id_cols[i]) := stringr::str_to_lower(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">518</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          stringr::str_replace_all(!!rlang::sym(geo_id_cols[i]), "[{}]", "")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">519</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">520</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">521</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">522</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Mismatches where data values are not found in the shapefile</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">523</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_in_shapefile &lt;- dplyr::anti_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">524</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data |&gt; dplyr::filter(!is.na(.data[[col]])),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">525</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_data |&gt; dplyr::filter(!is.na(.data[[shapefile_col]])),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">526</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      by = setNames(shapefile_col, col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">527</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">528</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">529</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Update the summary table</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">530</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summary_table$Missing_in_Shapefile[length(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">531</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_name_cols</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">532</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) + i] &lt;- nrow(missing_in_shapefile)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">533</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">534</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # If there are mismatches, add them to the detailed mismatch table</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">535</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (nrow(missing_in_shapefile) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">536</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      detailed_mismatches &lt;- rbind(detailed_mismatches, data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">537</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        id_col = missing_in_shapefile[[id_col]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">538</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Geo_Column = col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">539</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Data_Value = missing_in_shapefile[[col]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">540</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">541</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">542</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">543</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">544</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">545</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Rename the columns and add to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">546</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results$detailed_mismatches &lt;- detailed_mismatches |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">547</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::rename(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">548</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Geo Column Type` = Geo_Column,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">549</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Name/ID  Missing in Shapefile` = Data_Value</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">550</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">551</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  names(results$detailed_mismatches)[1] &lt;- id_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">552</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">553</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Rename the columns and add to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">554</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results$summary_table &lt;- summary_table |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">555</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::rename(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">556</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Geo Column Type` = Column,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">557</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      `Missing in Shapefile` = Missing_in_Shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">558</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">559</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">560</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Summarize results row by row</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">561</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_h1("Summary of Geoname and ID Mismatches")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">562</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">563</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (i in seq_len(nrow(results$summary_table))) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">564</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    row &lt;- results$summary_table[i, ]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">565</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">566</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h2(paste("Geographic Column:", row$`Geo Column Type`))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">567</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">568</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (row$`Missing in Shapefile` &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">569</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">570</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Found ", crayon::red(row$`Missing in Shapefile`),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">571</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " value(s) in the data not present in the shapefile."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">572</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">573</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">574</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("All values in the data match the shapefile.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">575</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">576</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">577</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_text("") # Add a blank line for readability</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">578</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">579</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">580</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(results)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">581</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">582</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">583</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">584</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">585</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check and validate data across multiple dimensions</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">586</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">587</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs comprehensive checks on a dataset, including missing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">588</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data, data types, date validations, geographic hierarchy, geo-name and ID</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">589</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' mismatches, and coordinate checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">590</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">591</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the dataset to be checked.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">592</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_col Character string specifying the name of the ID column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">593</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_name_cols Character vector of column names containing geographic</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">594</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">595</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_id_cols Character vector of column names containing geographic</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">596</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">597</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_cols Character vector of column names containing dates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">598</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_pair_cols List of character vectors, each containing a pair of</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">599</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   date column names to be compared.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">600</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_long_cols Character vector of two column names containing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">601</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   latitude and longitude.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">602</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_data Optional data frame containing shapefile data for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">603</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   geographic comparisons.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">604</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_join_key Optional character string specifying the join key</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">605</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for the shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">606</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lat_col Optional character string specifying the column name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">607</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for correct latitude in shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">608</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lon_col Optional character string specifying the column name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">609</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for correct longitude in shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">610</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_name_cols Optional character vector of column names in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">611</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   shapefile data containing geographic names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">612</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_id_cols Optional character vector of column names in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">613</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   shapefile data containing geographic IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">614</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_missing_check Logical, whether to run missing data check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">615</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_date_check Logical, whether to run date validation checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">616</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_geo_hierarchy_check Logical, whether to run geographic hierarchy</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">617</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">618</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_geo_mismatch_check Logical, whether to run geographic mismatch</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">619</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">620</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_coordinate_checks Logical, whether to run coordinate checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">621</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_detections Logical, whether to run virus detections checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">622</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param coordinate_checks Character vector specifying which coordinate checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">623</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    to run.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">624</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">625</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list containing the following elements:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">626</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{missing_data}{Data frame summarizing missing data and data types for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">627</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     all columns}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">628</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{date_results}{Data frame summarizing date validation results}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">629</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{date_results_pairs}{Data frame summarizing date pair validation</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">630</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     results}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">631</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{geo_hierarchy}{List containing results of geographic hierarchy</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">632</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     validation}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">633</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{geo_mismatches}{Data frame summarizing mismatches between data and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">634</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     shapefile}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">635</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{coordinate_checks}{Data frame summarizing coordinate validation</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">636</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     results}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">637</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">638</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">639</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Basic usage:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">640</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # results &lt;- check_data(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">641</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   data = my_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">642</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   id_col = "ID",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">643</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   geo_name_cols = c("country", "region", "district"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">644</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   geo_id_cols = c("country_id", "region_id", "district_id"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">645</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   date_cols = c("start_date", "end_date"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">646</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   lat_long_cols = c("latitude", "longitude")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">647</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">648</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">649</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # With shapefile data and date pairs:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">650</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # results_with_shapefile &lt;- check_data(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">651</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   data = my_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">652</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   id_col = "ID",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">653</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   geo_name_cols = c("country", "region", "district"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">654</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   geo_id_cols = c("country_id", "region_id", "district_id"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">655</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   date_cols = c("start_date", "end_date"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">656</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   date_pair_cols = list(c("start_date", "end_date")),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">657</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   lat_long_cols = c("latitude", "longitude"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">658</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   shapefile_data = my_shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">659</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   shapefile_join_key = "district_id",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">660</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   correct_lat_col = "correct_lat",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">661</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   correct_lon_col = "correct_lon",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">662</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   shapefile_name_cols = c("country_name", "region_name", "district_name"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">663</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   shapefile_id_cols = c("country_code", "region_code", "district_code")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">664</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">665</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">666</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">667</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_data &lt;- function(data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">668</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       id_col,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">669</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">670</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">671</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">672</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       date_pair_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">673</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       lat_long_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">674</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">675</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       shapefile_join_key = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">676</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       correct_lat_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">677</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       correct_lon_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">678</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       shapefile_name_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">679</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       shapefile_id_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">680</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       run_missing_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">681</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       run_date_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">682</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       run_geo_hierarchy_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">683</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       run_geo_mismatch_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">684</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       run_coordinate_checks = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">685</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       run_detections = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">686</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       coordinate_checks = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">687</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         "flip", "on_water", "missing",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">688</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         "out_of_bounds", "precision",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">689</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         "null_coords", "parse"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">690</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                       )) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">691</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize results list</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">692</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_results &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">693</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">694</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get all columns</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">695</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  all_cols &lt;- names(data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">696</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">697</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 1. Base data information ---------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">698</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">699</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 1a. Missing data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">700</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (run_missing_check) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">701</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$missing_data &lt;- check_missing(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">702</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">703</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cols_to_check = all_cols,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">704</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      key_columns = c(id_col, geo_id_cols, date_cols, lat_long_cols)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">705</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">706</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(Column, `Missing Count`, `Is Completely Null`) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">707</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">708</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        `Missing Count` = stringr::str_replace_all(`Missing Count`, ",", ""),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">709</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        `Missing Count` = as.integer(`Missing Count`)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">710</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">711</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">712</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">713</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # 1b. Data type check for all columns</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">714</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data_type_check &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">715</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column = names(data),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">716</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      DataType = sapply(data, function(x) class(x)[1])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">717</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">718</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">719</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # add data type check to missing data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">720</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$missing_data &lt;- full_results$missing_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">721</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::left_join(data_type_check, by = "Column") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">722</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(Column, DataType, `Missing Count`, `Is Completely Null`)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">723</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">724</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$geo_missing_data &lt;- full_results$missing_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">725</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(Column %in% c(geo_name_cols, geo_id_cols))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">726</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">727</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$geo_missing_id &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">728</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(!!rlang::sym(id_col), dplyr::all_of(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">729</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c(geo_name_cols, geo_id_cols)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">730</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">731</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      tidyr::pivot_longer(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">732</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cols = -!!rlang::sym(id_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">733</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        names_to = "Column",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">734</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        values_to = "Value"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">735</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">736</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(is.na(Value)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">737</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::distinct(!!rlang::sym(id_col), Column) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">738</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(`Column Type` = "Geo") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">739</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(Test = glue::glue("{Column} is missing")) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">740</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(-Column) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">741</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">742</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">743</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">744</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 2a Check date columns if provided ------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">745</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">746</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (run_date_check) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">747</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_results &lt;- data.frame(Column = date_cols)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">748</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">749</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    for (i in seq_along(date_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">750</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      col &lt;- date_cols[i]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">751</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      validated_data &lt;- validate_date(data, col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">752</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">753</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results[i, "Missing"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">754</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data[[paste0(col, "_missing")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">755</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">756</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">757</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results[i, "Non-date"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">758</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data[[paste0(col, "_non_date")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">759</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">760</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">761</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results[i, "Invalid"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">762</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data[[paste0(col, "_invalid")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">763</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">764</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">765</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results[i, "Future"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">766</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data[[paste0(col, "_future")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">767</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">768</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">769</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results[i, "Leap Issue"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">770</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data[[paste0(col, "_leap_issue")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">771</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">772</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">773</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results[i, "Format Issue"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">774</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data[[paste0(col, "_format_issue")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">775</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">776</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">777</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">778</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # Get IDs</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">779</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ids &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">780</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(!!rlang::sym(paste0(col, "_missing"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">781</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">782</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(Test = glue::glue("{col} is missing"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">783</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">784</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ids_non_date &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">785</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(!!rlang::sym(paste0(col, "_non_date"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">786</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">787</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(Test = glue::glue("{col} is non-date"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">788</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">789</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ids_invalid &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">790</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(!!rlang::sym(paste0(col, "_invalid"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">791</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">792</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(Test = glue::glue("{col} is invalid"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">793</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">794</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ids_future &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">795</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(!!rlang::sym(paste0(col, "_future"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">796</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">797</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(Test = glue::glue("{col} is in the future"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">798</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">799</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ids_leap_issue &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">800</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(!!rlang::sym(paste0(col, "_leap_issue"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">801</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">802</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(Test = glue::glue("{col} has leap year issue"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">803</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">804</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ids_format_issue &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">805</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(!!rlang::sym(paste0(col, "_format_issue"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">806</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">807</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(Test = glue::glue("{col} has format issue"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">808</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">809</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      full_results$date_issue_id &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">810</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ids, ids_non_date, ids_invalid, ids_future,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">811</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ids_leap_issue, ids_format_issue</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">812</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">813</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(`Column Type` = "Date")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">814</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">815</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">816</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # add date results pairs to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">817</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$date_results &lt;- date_results</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">818</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">819</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # 2b Check date pairs if provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">820</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!is.null(date_pair_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">821</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_results_pairs &lt;- data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">822</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">823</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      for (pair in date_pair_cols) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">824</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        start_col &lt;- pair[1]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">825</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        end_col &lt;- pair[2]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">826</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        validated_data &lt;- validate_dates(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">827</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          data, start_col, end_col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">828</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          tests = c("order")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">829</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">830</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        pair_name &lt;- paste(start_col, end_col, sep = " ~ ")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">831</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        date_results_pairs[nrow(date_results_pairs) + 1, "Variable"] &lt;-</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">832</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          pair_name</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">833</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        date_results_pairs[nrow(date_results_pairs), "Invalid Order"] &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">834</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          validated_data[[paste0(start_col, "_invalid_order")]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">835</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          na.rm = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">836</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">837</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">838</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # Get IDs for invalid order</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">839</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ids_invalid_order &lt;- validated_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">840</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(!!rlang::sym(paste0(start_col, "_invalid_order"))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">841</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">842</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = glue::glue("{pair_name} has invalid order"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">843</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">844</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        full_results$date_pair_issue_id &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">845</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          full_results$date_pair_issue_id, ids_invalid_order</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">846</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">847</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(`Column Type` = "Date")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">848</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">849</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">850</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # add date results pairs to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">851</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      full_results$date_results_pairs &lt;- date_results_pairs</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">852</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">853</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">854</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">855</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (run_geo_hierarchy_check) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">856</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_hierarchy_results &lt;- validate_admin_hierarchy(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">857</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">858</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      column_combos = list(geo_id_cols, geo_name_cols),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">859</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_columns = id_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">860</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">861</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">862</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # add geo_hierarchy to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">863</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$geo_hierarchy &lt;- geo_hierarchy_results</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">864</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">865</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">866</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 4. Check geoname and ID -------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">867</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">868</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (run_geo_mismatch_check) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">869</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_mismatches &lt;- join_and_check_mismatches(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">870</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data, shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">871</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_name_cols, geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">872</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_name_cols, shapefile_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">873</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">874</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">875</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">876</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # get ID and detAILS</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">877</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$geo_mismatches_id &lt;- geo_mismatches$detailed_mismatches |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">878</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">879</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(id_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">880</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Test = "Geo Column Type"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">881</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">882</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(`Column Type` = "Geo")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">883</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">884</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # add geo_mismatches to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">885</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$geo_mismatches &lt;- geo_mismatches$summary_table</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">886</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">887</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">888</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # 5. Coordinate Checks -----------------------------------------------</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">889</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">890</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (run_coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">891</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    coord_check_results &lt;- check_coords(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">892</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data = data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">893</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_data = shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">894</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      join_key_a = geo_id_cols[length(geo_id_cols)],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">895</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      join_key_b = shapefile_join_key,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">896</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_col = lat_long_cols[1],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">897</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lon_col = lat_long_cols[2],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">898</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      correct_lat_col = correct_lat_col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">899</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      correct_lon_col = correct_lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">900</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      summary_table = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">901</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      checks = coordinate_checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">902</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">903</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    coord_check_results$var1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">904</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # add coordinate_checks to results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">905</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$coordinate_checks &lt;- coord_check_results</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">906</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">907</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    coord_check_results &lt;- check_coords(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">908</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data = data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">909</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_data = shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">910</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      join_key_a = geo_id_cols[length(geo_id_cols)],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">911</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      join_key_b = shapefile_join_key,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">912</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_col = lat_long_cols[1],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">913</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lon_col = lat_long_cols[2],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">914</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      correct_lat_col = correct_lat_col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">915</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      correct_lon_col = correct_lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">916</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      summary_table = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">917</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      checks = coordinate_checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">918</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">919</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">920</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$coord_issue_id &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">921</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("parse" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">922</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">923</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(parse_failed == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">924</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">925</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "parse_failed")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">926</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">927</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("on_water" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">928</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">929</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(on_water != "Land") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">930</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">931</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "on_water")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">932</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">933</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("flip" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">934</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">935</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(potentially_flipped == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">936</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">937</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "potentially_flipped")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">938</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">939</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("null_coords" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">940</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">941</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(null_count == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">942</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">943</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "null_count")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">944</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">945</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("out_of_bounds" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">946</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">947</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(out_of_bounds == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">948</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">949</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "out_of_bounds")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">950</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">951</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("precision" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">952</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">953</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(low_precision == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">954</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">955</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "low_precision")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">956</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">957</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("missing" %in% coordinate_checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">958</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_check_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">959</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::filter(missing_coords == TRUE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">960</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::distinct(!!rlang::sym(id_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">961</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(Test = "missing_coords")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">962</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">963</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">964</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(`Column Type` = "Coordinate")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">965</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">966</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">967</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (run_detections) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">968</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # set up data identify detections</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">969</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data2 &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">970</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">971</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cVDPV1 = if ("VDPV1" %in% names(data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">972</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::if_else(VDPV1 == TRUE &amp; VdpvClassifications == "Circulating",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">973</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            TRUE, FALSE, missing = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">974</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">975</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">976</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cVDPV2 = if ("VDPV2" %in% names(data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">977</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::if_else(VDPV2 == TRUE &amp; VdpvClassifications == "Circulating",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">978</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            TRUE, FALSE, missing = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">979</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">980</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">981</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        WPV1 = if ("WILD1" %in% names(data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">982</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::if_else(WILD1 == TRUE, TRUE, FALSE, missing = FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">983</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">984</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">985</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">986</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">987</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">988</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$wpv1_count &lt;- if ("WPV1" %in% names(data2)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">989</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      sum(data2$WPV1, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">990</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">991</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      0</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">992</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">993</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$cvdpv1_count &lt;- if ("cVDPV1" %in% names(data2)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">994</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      sum(data2$cVDPV1, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">995</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">996</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      0</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">997</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">998</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$cvdpv2_count &lt;- if ("cVDPV2" %in% names(data2)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">999</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      sum(data2$cVDPV2, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1000</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1001</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      0</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1002</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1003</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1004</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1005</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_results$total_columns &lt;- ncol(data)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1006</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_results$total_rows &lt;- nrow(data)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1007</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_results$duplicated_rows &lt;- sum(duplicated(data[, id_col, drop = FALSE]))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1008</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_results$total_null_columns &lt;- sum(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1009</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_results$missing_data$`Is Completely Null`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1010</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    na.rm = T</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1011</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1012</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">1013</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(full_results)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1014</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1015</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1016</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Create a Summary Table from Data Quality Check Results</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1017</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1018</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function takes the results of various data quality checks and creates a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1019</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' unified summary table. It processes different types of checks including</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1020</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' overall data summary, coordinate checks, geographical mismatches,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1021</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' geographical hierarchy, date checks, and date pair checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1022</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1023</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A list containing the results of various data quality checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1024</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   The list may include the following components:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1025</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - total_rows: Total number of rows in the dataset</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1026</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - total_columns: Total number of columns in the dataset</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1027</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - duplicated_rows: Number of duplicated rows</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1028</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - coordinate_checks: Results of coordinate validity checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1029</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - geo_mismatches: Results of geographical mismatches with shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1030</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - geo_hierarchy: Results of geographical hierarchy checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1031</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - date_results: Results of individual date column checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1032</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - date_results_pairs: Results of date pair checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1033</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1034</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame with columns:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1035</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - header: The category of the check (factor)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1036</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - Column: The specific item being checked</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1037</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   - count: The count or measure of the item (numeric)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1038</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1039</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1040</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function processes each type of check separately and then combines them</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1041</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' into a single table. It also renames and recodes some of the column names</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1042</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and values for better readability.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1043</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1044</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1045</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Assuming 'results' is the output from a data quality check function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1046</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # summary_table &lt;- create_summary_table(results)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1047</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # print(summary_table)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1048</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1049</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1050</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">create_summary_table &lt;- function(data) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1051</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  all_summaries &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1052</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1053</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Main summary</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1054</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$total_rows) &amp;&amp; !is.null(data$total_columns) &amp;&amp;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1055</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !is.null(data$duplicated_rows)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1056</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    main_summary &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1057</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column = c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1058</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Total Rows", "Total Columns", "Total Duplicate",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1059</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Total Null Columns"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1060</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1061</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      count = c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1062</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        data$total_rows, data$total_columns, data$duplicated_rows,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1063</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        data$total_null_columns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1064</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1065</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1066</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1067</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Overall Data Summary") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1068</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(!Column %in% c("Total Columns", "Total Null Columns"))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1069</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$main_summary &lt;- main_summary</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1070</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1071</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1072</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Detections summary</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1073</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$wpv1_count) &amp;&amp; !is.null(data$cvdpv1_count) &amp;&amp;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1074</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !is.null(data$cvdpv2_count)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1075</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    detections &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1076</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column = c("WPV1", "cVDPV1", "cVDPV2"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1077</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      count = c(data$wpv1_count, data$cvdpv1_count, data$cvdpv2_count)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1078</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1079</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1080</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Virus Detections")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1081</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1082</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$detections &lt;- detections</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1083</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1084</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1085</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Coordinate checks</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1086</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$coordinate_checks)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1087</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    coordinate_checks &lt;- data$coordinate_checks |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1088</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1089</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      tidyr::pivot_longer(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1090</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cols = dplyr::everything(),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1091</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        names_to = "Column",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1092</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        values_to = "count"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1093</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1094</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Coordinate Checks") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1095</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(Column != "Total Coords")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1096</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$coordinate_checks &lt;- coordinate_checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1097</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1098</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1099</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Geo missing checks</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1100</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$geo_missing_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1101</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_missing_checks &lt;- data$geo_missing_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1102</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Coordinate Checks") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1103</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1104</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(Column, count = "Missing Count") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1105</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Geographical Names &amp; ID Missing")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1106</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1107</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$geo_missing_checks &lt;- geo_missing_checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1108</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1109</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Geographical mismatches</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1111</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$geo_mismatches)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1112</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_mismatches &lt;- data$geo_mismatches |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1113</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1114</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Geographical Mismatches") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1115</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::rename(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1116</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column = "Geo Column Type",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1117</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        count = `Missing in Shapefile`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1119</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$geo_mismatches &lt;- geo_mismatches</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1120</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1121</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Geographical hierarchy</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1123</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$geo_hierarchy)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1124</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_hierarchy &lt;- data$geo_hierarchy |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1125</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1126</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = "Geographical Hierarchy") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1127</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1128</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column = "Column Combination",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1129</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        count = `Non-unique Count`, header</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1130</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1131</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$geo_hierarchy &lt;- geo_hierarchy</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1133</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1134</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Date results</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1135</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$date_results)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1136</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_results &lt;- data$date_results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1137</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::rename(Variable = Column) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1138</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1139</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      tidyr::pivot_longer(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1140</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cols = -Variable,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1141</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        names_to = "Column",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1142</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        values_to = "count"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1143</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1144</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = paste("Date Check:", Variable)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1145</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(Column, count, header)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1146</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$date_results &lt;- date_results</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1147</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1148</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1149</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Date results pairs</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1150</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$date_results_pairs)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1151</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_results_pairs &lt;- data$date_results_pairs |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1152</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(dplyr::everything(), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1153</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      tidyr::pivot_longer(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1154</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cols = -Variable,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1155</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        names_to = "Column",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1156</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        values_to = "count"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1157</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1158</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(header = paste("Date Pair Check:", Variable)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1159</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(Column, count, header)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1160</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    all_summaries$date_results_pairs &lt;- date_results_pairs</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1161</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1162</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1163</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Combine all summaries</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1164</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  all_summaries &lt;- dplyr::bind_rows(all_summaries)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1165</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1166</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Create a unified summary table</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1167</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  summary_table &lt;- all_summaries |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1168</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(header = factor(header,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1169</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      levels = unique(all_summaries$header)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1170</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1171</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(header, Column, count) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1172</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(count = as.numeric(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1173</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      stringr::str_replace_all(count, ",", "")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1174</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1175</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1176</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      header,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1177</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::desc(stringr::str_detect(Column, "Name")),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1178</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1179</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1180</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1181</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column = dplyr::case_when(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1182</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Total Rows" ~ "Total Rows",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1183</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Total Columns" ~ "Total Columns",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1184</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Total Duplicate" ~ "Total Duplicate Rows",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1185</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Missing Coords" ~ "Missing Coordinates",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1186</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Parse Failed" ~ "Coordinates Failed to Parse",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1187</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Null Coords" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1188</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Null Coordinates (Latitude and Longitude are 0, 0)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1189</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Out of Bounds" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1190</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Coordinates Out of Bounds (-90 to 90, -180 to 180)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1191</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Low Precision" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1192</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Low Precision Coordinates (less than 5 decimal places)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1193</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Potentially Flipped" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1194</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Flipped Coordinates (Latitude and Longitude are switched)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1195</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "On Water" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1196</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Coordinates On Water (Sea, Ocean, Lake or River)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1197</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Names &amp; ID Missing" &amp; Column == "Admin0Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1198</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin0Name",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1199</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Names &amp; ID Missing" &amp; Column == "Admin1Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1200</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin1Name",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1201</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Names &amp; ID Missing" &amp; Column == "Admin2Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1202</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin2Name",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1203</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Names &amp; ID Missing" &amp; Column == "Admin0GUID" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1204</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin0GUID",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1205</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Names &amp; ID Missing" &amp; Column == "Admin1GUID" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1206</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin1GUID",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1207</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Names &amp; ID Missing" &amp; Column == "Admin2GUID" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1208</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin2GUID",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1209</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Mismatches" &amp; Column == "Admin0Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1210</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin0Name not in Shapefile",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1211</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Mismatches" &amp; Column == "Admin1Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1212</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin1Name not in Shapefile",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1213</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Mismatches" &amp; Column == "Admin2Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1214</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin2Name not in Shapefile",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1215</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Mismatches" &amp; Column == "Admin1GUID" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1216</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin1GUID not in Shapefile",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1217</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Mismatches" &amp; Column == "Admin2GUID" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1218</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Admin2GUID not in Shapefile",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1219</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Hierarchy" &amp;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1220</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Column == "Admin0Name ~ Admin1Name ~ Admin2Name" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1221</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Non-unique name Hierarchy (Admin0Name ~ Admin1Name ~ Admin2Name)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1222</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        header == "Geographical Hierarchy" &amp;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1223</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Column == "Admin0GUID ~ Admin1GUID ~ Admin2GUID" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1224</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Non-unique GUID Hierarchy (Admin0GUID ~ Admin1GUID ~ Admin2GUID)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1225</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Missing" ~ "Date is Missing",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1226</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Non-date" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1227</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Non-date Value (Cannot be converted to date format)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1228</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Invalid" ~ "Invalid Date (Not starting with '20')",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1229</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Future" ~ glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1230</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Date into the future (beyond {lubridate::year(Sys.Date())})"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1231</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1232</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Leap Issue" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1233</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Leap date (Feb 29th) appearing in Non-leap Year",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1234</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Format Issue" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1235</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Date Format Issue (Not YYYY-MM-DD)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1236</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Column == "Invalid Order" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1237</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Invalid Date Order (First date is after second date)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1238</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        TRUE ~ Column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1239</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1240</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1241</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1242</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1243</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1244</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(data$date_issue_id) ||</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1245</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !is.null(data$geo_missing_id) ||</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1246</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !is.null(data$date_pair_issue_id) ||</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1247</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !is.null(data$geo_mismatches_id) ||</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1248</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !is.null(data$coord_issue_id)) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1249</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # resolve ID datasets</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1250</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    id_data &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1251</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data$date_issue_id,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1252</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data$geo_missing_id,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1253</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data$date_issue_id,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1254</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data$date_pair_issue_id,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1255</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data$geo_mismatches_id,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1256</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data$coord_issue_id</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1257</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1258</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1259</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Test = dplyr::case_when(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1260</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "parse_failed" ~ "Coordinates Failed to Parse",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1261</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "missing_coords" ~ "Missing Coordinate Values",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1262</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "null_count" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1263</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Null Coordinates (Latitude And Longitude Are 0, 0)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1264</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "out_of_bounds" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1265</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Coordinates Out Of Bounds (Not Within -90 To 90, -180 To 180)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1266</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "low_precision" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1267</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Low Precision Coordinates (Less Than 5 Decimal Places)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1268</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "potentially_flipped" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1269</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Potentially Flipped Coordinates (Latitude And Longitude Switched)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1270</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test == "on_water" ~</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1271</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Coordinates On Water Bodies (Sea, Ocean, Lake Or River)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1272</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          TRUE ~ Test</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1273</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1274</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1275</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1276</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Test = stringr::str_replace(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1277</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test, "future",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1278</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          glue::glue("Future Dates (Beyond {lubridate::year(Sys.Date())})")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1279</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1280</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Test = stringr::str_replace(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1281</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test, "has invalid order",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1282</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Invalid Date Order (First Date Is After Second Date)"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1283</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1284</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Test = stringr::str_replace(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1285</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test, "is invalid",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1286</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Invalid Date (Not Starting With '20')"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1287</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1288</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Test = stringr::str_replace(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1289</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Test, "is missing",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1290</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Missing Value"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1291</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1292</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1293</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(1, 3, 2)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1294</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1295</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1296</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1297</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1298</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      summary_table = summary_table,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1299</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_data = id_data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1300</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1301</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1302</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1303</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1304</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Create Summary by Group</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1305</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1306</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function creates a summary of data quality checks grouped by a specified</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1307</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' variable.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1308</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1309</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the dataset to be summarized.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1310</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param group_var The name of the column to group by.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1311</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_col The name of the column containing unique identifiers.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1312</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_name_cols A vector of column names containing geographic names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1313</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_id_cols A vector of column names containing geographic IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1314</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_long_cols A vector of column names for latitude and longitude.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1315</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_cols A vector of column names containing dates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1316</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_pair_cols A list of date column pairs to be checked together.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1317</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_data Optional data frame containing shapefile data for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1318</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   geographic comparisons.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1319</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_join_key Optional character string specifying the join key</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1320</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for the shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1321</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lat_col Optional character string specifying the column name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1322</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for correct latitude in shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1323</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lon_col Optional character string specifying the column name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1324</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for correct longitude in shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1325</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_name_cols Optional character vector of column names in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1326</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   shapefile data containing geographic names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1327</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_id_cols Optional character vector of column names in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1328</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   shapefile data containing geographic IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1329</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_missing_check Logical; if TRUE, runs missing data check (default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1330</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   is TRUE).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1331</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_date_check Logical; if TRUE, runs date validation check (default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1332</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   is TRUE).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1333</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_geo_hierarchy_check Logical; if TRUE, runs geographic hierarchy</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1334</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   check (default is TRUE).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1335</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_geo_mismatch_check Logical; if TRUE, runs geographic mismatch</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1336</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   check (default is TRUE).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1337</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_coordinate_checks Logical; if TRUE, runs coordinate validation</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1338</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   checks (default is TRUE).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1339</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param run_detections Logical, whether to run virus detections checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1340</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param coordinate_checks Character vector specifying which coordinate checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1341</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   to run.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1342</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param n_groups The number of groups to include in the summary (def is 4).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1343</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param decreasing Logical; if TRUE, sorts groups in decreasing order (default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1344</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   is TRUE).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1345</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1346</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame containing the combined summary of data quality checks</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1347</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   for each group.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1348</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1349</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1350</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs the following steps:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1351</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 1. Selects unique groups based on the specified group variable.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1352</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 2. For each group, it runs data quality checks using `check_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1353</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 3. Creates a summary table for each group using the `create_summary_table`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1354</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    function.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1355</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 4. Combines the results into a single data frame, with groups as columns.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1356</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1357</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1358</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # summary &lt;- create_summary_by_group(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1359</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   data = my_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1360</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   group_var = "Region",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1361</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   id_col = "ID",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1362</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   geo_name_cols = c("Country", "State", "City"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1363</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   geo_id_cols = c("CountryID", "StateID", "CityID"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1364</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   lat_long_cols = c("Latitude", "Longitude"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1365</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   date_cols = c("Date1", "Date2"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1366</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   date_pair_cols = list(c("Date1", "Date2")),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1367</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   n_groups = 3,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1368</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   decreasing = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1369</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1370</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1371</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1372</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">create_summary_by_group &lt;- function(data, group_var, id_col, geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1373</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    geo_id_cols, lat_long_cols, date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1374</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    date_pair_cols, shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1375</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    shapefile_join_key = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1376</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    correct_lat_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1377</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    correct_lon_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1378</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    shapefile_name_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1379</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    shapefile_id_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1380</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    run_missing_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1381</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    run_date_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1382</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    run_geo_hierarchy_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1383</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    run_geo_mismatch_check = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1384</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    run_coordinate_checks = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1385</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    run_detections = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1386</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    coordinate_checks = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1387</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      "flip", "on_water",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1388</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      "missing",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1389</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      "out_of_bounds",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1390</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      "precision",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1391</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      "null_coords", "parse"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1392</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1393</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                    n_groups = 4, decreasing = FALSE) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1394</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get unique groups and sort them</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1395</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  unique_groups &lt;- unique(data[[group_var]]) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1396</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sort(decreasing = decreasing) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1397</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    utils::tail(n_groups)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1398</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1399</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  res_list &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1400</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1401</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (group in unique_groups) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1402</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    group_data &lt;- dplyr::filter(data, .data[[group_var]] == group)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1403</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1404</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    res_list[[as.character(group)]] &lt;- check_data(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1405</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data = group_data,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1406</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_col = id_col,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1407</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_name_cols = geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1408</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_id_cols = geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1409</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_long_cols = lat_long_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1410</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_cols = date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1411</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_pair_cols = date_pair_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1412</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_data = shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1413</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_join_key = shapefile_join_key,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1414</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      correct_lat_col = correct_lat_col,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1415</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      correct_lon_col = correct_lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1416</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_name_cols = shapefile_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1417</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_id_cols = shapefile_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1418</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      run_missing_check = run_missing_check,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1419</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      run_date_check = run_date_check,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1420</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      run_geo_hierarchy_check = run_geo_hierarchy_check,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1421</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      run_geo_mismatch_check = run_geo_mismatch_check,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1422</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      run_coordinate_checks = run_coordinate_checks,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1423</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      coordinate_checks = coordinate_checks,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1424</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      run_detections = run_detections</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1425</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1426</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      create_summary_table()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1427</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1428</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1429</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1430</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Process summary table</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1431</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  summary_table &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1432</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lapply(res_list, `[[`, "summary_table"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1433</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    .id = group_var</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1434</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1435</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tidyr::pivot_wider(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1436</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_cols = c(header, Column),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1437</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      names_from = all_of(group_var),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1438</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      values_from = count</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1439</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1440</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(header) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1441</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::group_by(header) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1442</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1443</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      header = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1444</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::row_number() &gt; 1, "", as.character(header)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1445</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1446</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1447</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::ungroup()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1448</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1449</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Process id data</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1450</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  id_data &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1451</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lapply(res_list, `[[`, "id_data"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1452</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    .id = group_var</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1453</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1454</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1455</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(list(summary_table = summary_table, id_data = id_data))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1456</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1457</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1458</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Create a GT Table for Data Quality Summary</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1459</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1460</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function creates a formatted GT table from a summary of data quality</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1461</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1462</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1463</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param summary_data A data frame containing the summary of data quality</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1464</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1465</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param title A string for the table title. Default is "Summary of POLIS Data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1466</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Quality Checks".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1467</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param add_nanoplot A logical indicating whether to add a nanoplot column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1468</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Default is TRUE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1469</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param row_start An integer indicating the starting row for data color</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1470</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   formatting. Default is 6.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1471</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param autoscale_nanoplot Logical. Whether to autoscale the nanoplot.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1472</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1473</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1474</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A GT table object with formatted data quality summary.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1475</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1476</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1477</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function applies various formatting and styling to the summary data:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1478</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Applies color scaling to numeric columns based on their values.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1479</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Sets custom labels for columns.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1480</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Adds borders to specific rows.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1481</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Formats numbers to remove decimal places.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1482</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Optionally adds a nanoplot column for visualizing trends.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1483</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1484</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1485</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #  summary_data &lt;- create_summary_by_group(my_data, "Region", "ID", ...)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1486</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # gt_table &lt;- create_gt_table(summary_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1487</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # title = "My Data Quality Summary",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1488</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #  add_nanoplot = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1489</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #  row_start = 6</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1490</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1491</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1492</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1493</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">create_gt_table &lt;- function(summary_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1494</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            title = "Summary of POLIS Data Quality Checks",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1495</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            add_nanoplot = TRUE, row_start = 6,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1496</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                            autoscale_nanoplot = FALSE) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1497</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Conditional loading for packages</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1498</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  required_packages &lt;- c("scales", "gt", "glue")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1499</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1500</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_packages &lt;- required_packages[!sapply(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1501</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    required_packages, requireNamespace,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1502</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quietly = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1503</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1504</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1505</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_packages) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1506</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1507</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1508</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Package(s) ", paste(missing_packages, collapse = ", "),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1509</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " required but not installed. Please install them."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1510</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1511</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      call. = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1512</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1513</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1514</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1515</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  gt_table &lt;- gt::gt(summary_data) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1516</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::data_color(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1517</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      columns = -c(Column, header),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1518</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      rows = row_start:nrow(summary_data),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1519</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      fn = function(x) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1520</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # Handle potential negative values or NAs for this row</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1521</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        x_clean &lt;- pmax(x, 0, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1522</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        row_max &lt;- max(x_clean, na.rm = TRUE) * 1.3</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1523</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1524</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (row_max == 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1525</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          return(rep("white", length(x)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1526</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1527</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1528</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        scales::col_numeric(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1529</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          palette = c("#FFFFFF", "#FF9999", "#FF0000"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1530</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          domain = c(0, row_max)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1531</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )(x_clean)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1532</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1533</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1534</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::tab_header(title = title) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1535</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::cols_label(Column = "Validation Test") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1536</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::cols_label(header = "Grouping") |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1537</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::cols_align(align = "left", columns = 2) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1538</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1539</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      style = gt::cell_borders(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1540</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        sides = "bottom",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1541</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        color = "black",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1542</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        weight = gt::px(3)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1543</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1544</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      locations = gt::cells_body(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1545</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        rows = summary_data$Column %in% c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1546</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Missing Values",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1547</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Data Types",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1548</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Date Validations",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1549</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Geographic Validations"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1550</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1551</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1552</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1553</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::fmt_number(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1554</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      columns = dplyr::where(is.numeric),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1555</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      decimals = 0</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1556</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1557</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1558</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      style = gt::cell_text(weight = "bold"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1559</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      locations = gt::cells_column_labels(everything())</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1560</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1561</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1562</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (add_nanoplot) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1563</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt_table &lt;- gt_table |&gt; gt::cols_nanoplot(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1564</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      columns = -c(1, 2),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1565</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      new_col_name = "nanoplot",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1566</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      new_col_label = gt::md("**Quality Trend**"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1567</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      autohide = FALSE, autoscale = autoscale_nanoplot,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1568</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      options = gt::nanoplot_options(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1569</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        data_bar_stroke_width = 10,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1570</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        vertical_guide_stroke_width = 51</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1571</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1572</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1573</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1574</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1575</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(gt_table)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1576</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1577</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1578</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Validate POLIS Data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1579</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1580</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs data quality checks on POLIS (Polio Information</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1581</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' System) data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1582</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1583</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A dataframe containing the POLIS data to be validated.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1584</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param type Character string specifying the data type. Either "AFP" or "ES".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1585</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param group_var Optional. The column name to group the data by. If NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1586</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1587</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_col Optional. The column name for the unique identifier. If NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1588</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1589</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_name_cols Optional. A vector of column names for geographic names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1590</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1591</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_id_cols Optional. A vector of column names for geographic IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1592</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1593</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_long_cols Optional. A vector of column names for latitude and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1594</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    longitude. If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1595</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_cols Optional. A vector of column names for date fields. If NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1596</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1597</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_pair_cols Optional. A list of date column pairs for comparison.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1598</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1599</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param n_groups Integer. The number of groups to display in the summary.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1600</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is 8.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1601</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param decreasing Logical. Whether to sort the groups in decreasing order.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1602</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1603</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param plots_path Optional. The file path to save output plots. Required if</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1604</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    save_output is TRUE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1605</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_version Character string. The version of POLIS being used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1606</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is "2.37.1".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1607</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param custom_title Optional. A custom title for the output table.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1608</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param save_output Logical. Whether to save the output as HTML and PNG.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1609</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1610</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vheight Integer. The height of the output image in pixels.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1611</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is 1400.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1612</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vwidth Integer. The width of the output image in pixels. Default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1613</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    is 1550.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1614</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param autoscale_nanoplot Logical. Whether to autoscale the nanoplot.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1615</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1616</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ... Additional arguments passed to internal functions.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1617</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1618</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list containing two elements:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1619</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{gt_table}{A gt table object with the validation summary}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1620</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{id_data}{A dataframe with detailed information for each unique</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1621</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    identifier}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1622</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1623</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1624</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs various data quality checks on POLIS data, including</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1625</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'  checks for missing values, geographic data consistency, date field validity,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1626</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'  and more. It allows for customization of column names and grouping</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1627</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'  variables, making it flexible for different data structures within the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1628</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'  POLIS system.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1629</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1630</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function will use default parameters based on the specified data type</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1631</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' (AFP or ES) if custom parameters are not provided. It also checks if all</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1632</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' specified columns exist in the dataset before proceeding with the analysis.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1633</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1634</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1635</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Assuming polis_data is your dataset and you have the necessary dependencies</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1636</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # result &lt;- validate_polis(polis_data, type = "AFP",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1637</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        group_var = "ReportingYear",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1638</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        n_groups = 8,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1639</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        decreasing = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1640</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        plots_path = "/path/to/save/plots",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1641</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        polis_version = "2.37.1",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1642</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        save_output = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1643</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        vheight = 1500, vwidth = 1600)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1644</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1645</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Access the GT table and ID data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1646</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # gt_table &lt;- result$gt_table</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1647</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # id_data &lt;- result$id_data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1648</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1649</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1650</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">validate_polis &lt;- function(data, type = "AFP",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1651</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           group_var = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1652</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           id_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1653</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           geo_name_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1654</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           geo_id_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1655</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           lat_long_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1656</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           date_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1657</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           date_pair_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1658</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           n_groups = 8,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1659</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           decreasing = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1660</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           plots_path = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1661</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           polis_version = "2.37.1",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1662</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           autoscale_nanoplot = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1663</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           custom_title = NULL, save_output = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1664</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           vheight = 1400, vwidth = 1550, ...) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1665</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Conditional loading for packages</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1666</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  required_packages &lt;- c("scales", "gt", "glue", "webshot")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1667</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1668</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_packages &lt;- required_packages[!sapply(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1669</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    required_packages, requireNamespace,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1670</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quietly = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1671</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1672</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1673</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_packages) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1674</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1675</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1676</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Package(s) ", paste(missing_packages, collapse = ", "),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1677</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " required but not installed. Please install them."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1678</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1679</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      call. = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1680</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1681</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1682</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1683</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Define parameters based on data type</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1684</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  default_params &lt;- list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1685</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    AFP = list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1686</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      group_var = group_var,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1687</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_col = "EPID",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1688</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_name_cols = c("Admin0Name", "Admin1Name", "Admin2Name"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1689</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_id_cols = c("Admin0GUID", "Admin1GUID", "Admin2GUID"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1690</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_long_cols = c("Latitude", "Longitude"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1691</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_cols = c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1692</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "CaseDate", "InvestigationDate",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1693</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "NotificationDate", "Stool1CollectionDate",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1694</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Stool2CollectionDate"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1695</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1696</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_pair_cols = list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1697</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c("NotificationDate", "InvestigationDate"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1698</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c("NotificationDate", "Stool1CollectionDate"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1699</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c("Stool1CollectionDate", "Stool2CollectionDate")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1700</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1701</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1702</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ES = list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1703</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      group_var = group_var,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1704</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_col = "SampleId",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1705</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_name_cols = c("Admin0Name", "Admin1Name", "Admin2Name"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1706</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_id_cols = c("Admin0GUID", "Admin1GUID", "Admin2GUID"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1707</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_long_cols = c("SiteYCoordinate", "SiteXCoordinate"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1708</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_cols = c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1709</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "CollectionDate", "DateShippedToRefLab", "DateReceivedInLab",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1710</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "DateFinalCultureResult", "DateFinalResultsReported"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1711</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1712</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_pair_cols = list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1713</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c("CollectionDate", "DateShippedToRefLab"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1714</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c("CollectionDate", "DateReceivedInLab"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1715</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        c("CollectionDate", "DateFinalResultsReported")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1716</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1717</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1718</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1719</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1720</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!type %in% names(default_params)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1721</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1722</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Invalid data type. Supported types are: ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1723</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste(names(default_params), collapse = ", ")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1724</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1725</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1726</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1727</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use provided parameters if not NULL, otherwise use defaults</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1728</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  params &lt;- list(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1729</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    group_var = if (!is.null(group_var)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1730</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      group_var</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1731</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1732</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$group_var</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1733</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1734</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    id_col = if (!is.null(id_col)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1735</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      id_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1736</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1737</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$id_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1738</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1739</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_name_cols = if (!is.null(geo_name_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1740</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_name_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1741</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1742</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$geo_name_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1743</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1744</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_id_cols = if (!is.null(geo_id_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1745</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      geo_id_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1746</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1747</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$geo_id_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1748</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1749</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lat_long_cols = if (!is.null(lat_long_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1750</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_long_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1751</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1752</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$lat_long_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1753</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1754</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_cols = if (!is.null(date_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1755</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1756</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1757</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$date_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1758</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1759</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_pair_cols = if (!is.null(date_pair_cols)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1760</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      date_pair_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1761</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1762</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      default_params[[type]]$date_pair_cols</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1763</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1764</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1765</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1766</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check if all specified columns exist in the dataset</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1767</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  all_cols &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1768</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    params$group_var, params$id_col, params$geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1769</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    params$geo_id_cols, params$lat_long_cols, params$date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1770</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    unlist(params$date_pair_cols)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1771</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1772</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_cols &lt;- setdiff(all_cols, names(data))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1773</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1774</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_cols) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1775</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(paste(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1776</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The following columns are not present in the dataset:",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1777</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste(missing_cols, collapse = ", ")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1778</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1779</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1780</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1781</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1782</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  summary &lt;- create_summary_by_group(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1783</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data = data,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1784</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    group_var = params$group_var,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1785</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    id_col = params$id_col,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1786</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_name_cols = params$geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1787</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_id_cols = params$geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1788</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lat_long_cols = params$lat_long_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1789</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_cols = params$date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1790</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_pair_cols = params$date_pair_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1791</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    n_groups = n_groups,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1792</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    decreasing = decreasing,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1793</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ...</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1794</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1795</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1796</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  title &lt;- if (is.null(custom_title)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1797</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1798</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "POLIS {type} Data Quality Checks ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1799</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "(POLIS Version: {polis_version})"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1800</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1801</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1802</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    custom_title</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1803</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1804</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1805</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  gt_table &lt;- create_gt_table(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1806</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summary$summary_table |&gt; dplyr::filter(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1807</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column != "Total Null Columns"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1808</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1809</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    title = title,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1810</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    autoscale_nanoplot = autoscale_nanoplot</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1811</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1812</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1813</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (save_output) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1814</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (is.null(plots_path)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1815</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      stop("plots_path must be provided when save_output is TRUE")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1816</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1817</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1818</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    today &lt;- format(Sys.Date(), "%Y%m%d")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1819</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    file_prefix &lt;- glue::glue("polis_{type}_validation_{today}_{polis_version}")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1820</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1821</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    html_path &lt;- file.path(plots_path, glue::glue("{file_prefix}.html"))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1822</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    png_path &lt;- file.path(plots_path, glue::glue("{file_prefix}.png"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1823</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1824</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt_table |&gt; gt::gtsave(html_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1825</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1826</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    webshot::webshot(html_path, png_path, vheight = vheight, vwidth = vwidth)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1827</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1828</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    file.remove(html_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1829</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1830</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1831</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(list(gt_table = gt_table, id_data = summary$id_data))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1832</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1833</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1834</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Validate POLIS Data Snapshots</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1835</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1836</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function validates POLIS data snapshots for a specific year and data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1837</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' type.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1838</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1839</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param path Character. Directory path containing POLIS snapshot files.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1840</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data_type Character. Type of data ("AFP" or "ES"). Default is "AFP".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1841</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param plots_path Character. Directory to save output plots.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1842</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param custom_title Character. Custom title for the output. Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1843</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data_type_string String of data list name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1844</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param year_of_interest Numeric. Year of interest for validation. Default is</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1845</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    2024.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1846</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param pattern Character. Pattern to match snapshot files. Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1847</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param snapshots Numeric. Number of snapshots to validate. Default is 6.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1848</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vheight Integer. The height of the output image in pixels.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1849</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is 1400.  Corresponds to the default 6 snapshots.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1850</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vwidth Integer. The width of the output image in pixels. Default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1851</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    is 1760. Corresponds to the default 6 snapshots.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1852</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ... Additional arguments passed to validate_polis function.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1853</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1854</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list containing validation results and GT table.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1855</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1856</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom purrr map_dfr</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1857</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom dplyr filter mutate</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1858</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom lubridate year</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1859</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom rlang sym</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1860</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1861</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1862</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">validate_polis_snapshots &lt;- function(path, data_type = "AFP",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1863</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     year_of_interest = 2024,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1864</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     pattern = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1865</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     data_type_string = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1866</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     snapshots = 6,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1867</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     plots_path,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1868</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     custom_title = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1869</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     vheight = 1400,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1870</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     vwidth = 1760,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1871</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                     ...) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1872</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  default_title &lt;- sprintf(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1873</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "POLIS %s Data Quality Checks For Data Snapshots (%d-%d)",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1874</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data_type, year_of_interest - 1, year_of_interest</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1875</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1876</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1877</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(pattern)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1878</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    pattern &lt;- paste0("^polis_raw_data_", year_of_interest, "_")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1879</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1880</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1881</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  files &lt;- list.files(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1882</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    path,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1883</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    pattern = pattern,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1884</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full.names = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1885</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1886</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1887</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  weeks &lt;- sort(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1888</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    as.numeric(gsub(".*_([0-9]+)\\.rds$", "\\1", files)),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1889</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    decreasing = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1890</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )[1:snapshots]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1891</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1892</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_col &lt;- if (data_type == "AFP") "CaseDate" else "CollectionDate"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1893</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1894</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(data_type_string)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1895</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data_type_string &lt;- if (data_type == "AFP") "human" else "env"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1896</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1897</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1898</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  df &lt;- purrr::map_dfr(weeks, function(week) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1899</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    file_path &lt;- file.path(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1900</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      path,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1901</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      sprintf("polis_raw_data_%d_%d.rds", year_of_interest, week)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1902</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1903</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1904</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    poliprep::read(file_path)[[data_type_string]] |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1905</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1906</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        lubridate::year(!!rlang::sym(date_col)) &gt;= year_of_interest - 1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1907</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1908</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(snapshot = sprintf("%d W%d", year_of_interest, week))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1909</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1910</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1911</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      snapshot = factor(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1912</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        snapshot,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1913</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        levels = sprintf("%d W%d", year_of_interest, rev(weeks))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1914</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1915</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1916</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1917</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results &lt;- poliprep::validate_polis(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1918</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data = df,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1919</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    group_var = "snapshot",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1920</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    type = data_type,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1921</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    n_groups = Inf,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1922</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    plots_path = plots_path,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1923</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    custom_title = if (is.null(custom_title)) default_title else custom_title,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1924</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    save_output = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1925</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    vheight = vheight,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1926</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    vwidth = vwidth,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1927</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ...</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1928</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1929</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1930</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  today &lt;- format(Sys.Date(), "%Y%m%d")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1931</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  save_path &lt;- file.path(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1932</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    plots_path,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1933</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1934</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "polis_",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1935</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      tolower(data_type), "_snapshots_", year_of_interest, "_", today, ".RData"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1936</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1937</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1938</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1939</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  base::save(results, file = save_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1940</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">1941</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(results)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1942</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1943</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1944</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1945</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Validate Dataset</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1946</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1947</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs data quality checks on a given dataset and produces </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1948</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' a gt table with metadata</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1949</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1950</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A dataframe containing the AFRO data to be validated.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1951</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param group_var Optional. The column name to group the data by. If NULL, </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1952</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1953</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param id_col Optional. The column name for the unique identifier. If NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1954</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1955</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_name_cols Optional. A vector of column names for geographic names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1956</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1957</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param geo_id_cols Optional. A vector of column names for geographic IDs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1958</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1959</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_long_cols Optional. A vector of column names for latitude and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1960</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    longitude. If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1961</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_cols Optional. A vector of column names for date fields. If NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1962</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1963</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_pair_cols Optional. A list of date column pairs for comparison.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1964</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    If NULL, uses default.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1965</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param n_groups Integer. The number of groups to display in the summary.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1966</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is 10.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1967</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param decreasing Logical. Whether to sort the groups in decreasing order.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1968</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1969</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param plots_path Optional. The file path to save output plots. Required if</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1970</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    save_output is TRUE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1971</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param custom_title Optional. A custom title for the output table.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1972</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param save_output Logical. Whether to save the output as HTML and PNG.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1973</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1974</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param save_preffix Optional. A prefix for the saved output file name.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1975</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vheight Integer. The height of the output image in pixels.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1976</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is 1400.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1977</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vwidth Integer. The width of the output image in pixels. Default</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1978</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    is 1550.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1979</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param autoscale_nanoplot Logical. Whether to autoscale the nanoplot.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1980</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1981</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ... Additional arguments passed to create_summary_by_group function.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1982</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1983</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list containing two elements:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1984</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{gt_table}{A gt table object with the validation summary}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1985</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{id_data}{A dataframe with detailed information for each unique</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1986</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    identifier}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1987</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1988</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1989</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function performs various data quality checks on AFRO data before it is</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1990</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' sent to POLIS, including checks for missing values, geographic data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1991</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' consistency, date field validity, and more. It allows for customization of</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1992</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' column names and grouping variables, making it flexible for different data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1993</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' structures within the AFRO system.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1994</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1995</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function will use default parameters based on the specified data type</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1996</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' (AFP or ES) if custom parameters are not provided. It also checks if all</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1997</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' specified columns exist in the dataset before proceeding with the analysis.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1998</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">1999</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @seealso [create_summary_by_group()]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2000</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2001</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2002</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Assuming afro_data is your dataset and you have the necessary dependencies</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2003</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # result &lt;- validate_data(afro_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2004</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        group_var = "ReportingYear",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2005</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        n_groups = 8,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2006</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        decreasing = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2007</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        plots_path = "/path/to/save/plots",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2008</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        save_output = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2009</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                        vheight = 1500, vwidth = 1600)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2010</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2011</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Access the GT table and ID data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2012</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # gt_table &lt;- result$gt_table</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2013</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # id_data &lt;- result$id_data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2014</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2015</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2016</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">validate_data &lt;- function(data, </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2017</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          group_var = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2018</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          id_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2019</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          geo_name_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2020</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          geo_id_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2021</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          lat_long_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2022</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          date_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2023</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          date_pair_cols = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2024</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          n_groups = 10,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2025</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          decreasing = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2026</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          plots_path = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2027</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          custom_title = NULL, </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2028</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          save_output = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2029</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          save_preffix = NULL, </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2030</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          vheight = 1400, vwidth = 1550,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2031</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          autoscale_nanoplot = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2032</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                          ...) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2033</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2034</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Conditional loading for packages</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2035</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  required_packages &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2036</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "scales", "zoo", "gt", "glue", "webshot"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2037</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2038</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2039</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_packages &lt;- required_packages[!sapply(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2040</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    required_packages, requireNamespace,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2041</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quietly = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2042</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2043</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2044</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_packages) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2045</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2046</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2047</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Package(s) ", paste(missing_packages, collapse = ", "),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2048</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " required but not installed. Please install them."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2049</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2050</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      call. = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2051</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2052</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2053</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2054</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check if all specified columns exist in the dataset</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2055</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  all_cols &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2056</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    group_var, id_col, geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2057</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_id_cols, lat_long_cols, date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2058</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    unlist(date_pair_cols)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2059</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2060</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_cols &lt;- setdiff(all_cols, names(data))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2061</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2062</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_cols) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2063</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(paste(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2064</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The following columns are not present in the dataset:",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2065</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste(missing_cols, collapse = ", ")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2066</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2067</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2068</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2069</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  summary &lt;- poliprep::create_summary_by_group(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2070</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data = data,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2071</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    group_var = group_var,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2072</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    id_col = id_col,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2073</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_name_cols = geo_name_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2074</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_id_cols = geo_id_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2075</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lat_long_cols = lat_long_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2076</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_cols = date_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2077</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_pair_cols = date_pair_cols,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2078</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    n_groups = n_groups,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2079</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    decreasing = decreasing,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2080</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ...</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2081</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2082</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2083</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # set up time lab</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2084</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  time_labs &lt;- paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2085</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "For ", zoo::as.yearmon(Sys.Date()),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2086</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    " in Epiweek ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2087</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lubridate::epiweek(Sys.Date())</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2088</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2089</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2090</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  title &lt;- if (is.null(custom_title)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2091</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2092</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Data Quality Checks ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2093</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "{time_labs} - N = {poliprep::big_mark(nrow(data))}"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2094</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2095</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2096</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    custom_title</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2097</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2098</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2099</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  gt_table &lt;- poliprep::create_gt_table(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2100</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summary$summary_table |&gt; dplyr::filter(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2101</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Column != "Total Null Columns"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2102</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2103</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    autoscale_nanoplot = autoscale_nanoplot,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2104</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    title = title</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2105</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2106</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2107</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  output_list &lt;- list(gt_table = gt_table, id_data = summary$id_data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2108</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2109</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (save_output) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2110</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (is.null(plots_path)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2111</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      stop("plots_path must be provided when save_output is TRUE")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2113</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2114</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    today &lt;- format(Sys.Date(), "%Y%m%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2115</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2116</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    file_prefix &lt;- glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2117</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "{save_preffix}_data_validation_{today}"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2119</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2120</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    html_path &lt;- file.path(plots_path, glue::glue("{file_prefix}.html"))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2121</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    png_path &lt;- file.path(plots_path, glue::glue("{file_prefix}.png"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2123</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt_table |&gt; gt::gtsave(html_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2124</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2125</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    webshot::webshot(html_path, png_path, vheight = vheight, vwidth = vwidth)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2126</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2127</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    file.remove(html_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2129</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    saveRDS(output_list, </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2130</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            file.path(plots_path, glue::glue("metadata_{file_prefix}.rds")))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2131</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2133</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">2134</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(output_list)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2135</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/prep_coords.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Format Numbers with Thousand Separator</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function formats numbers by adding a thousand separator (big mark)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and optionally rounding to a specified number of decimal places.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param x A numeric vector to be formatted.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param decimals An integer specifying the number of decimal places to</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         round to. Default is NULL, which means no rounding is performed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param big_mark A character to use as the thousand separator.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        Default is ",".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A character vector of formatted numbers.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' big_mark(1234567.89)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' big_mark(c(1234.56, 7890123.45), decimals = 2, big_mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">big_mark &lt;- function(x, decimals = NULL, big_mark = ",") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">19</td>
                    <td class="coverage">65<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(decimals)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">20</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    x &lt;- round(x, decimals)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">22</td>
                    <td class="coverage">65<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  base::format(x,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">23</td>
                    <td class="coverage">65<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    big.mark = big_mark, scientific = FALSE, trim = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">24</td>
                    <td class="coverage">65<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    nsmall = if (is.null(decimals)) 0 else decimals</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Common Setup for Coordinate Operations</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This helper function performs common setup tasks for coordinate operations.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A dataframe containing the geographical coordinates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_data Optional. A dataframe containing reference shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param join_key_a The column name in `data` to join with `shapefile_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param join_key_b Optional. The column name in `shapefile_data` to join with</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        `data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_col The name of the latitude column in `data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon_col The name of the longitude column in `data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lat_col Optional. The name of the correct latitude column in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'      `shapefile_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lon_col Optional. The name of the correct longitude column in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        `shapefile_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list containing processed data and shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">setup_coord_operation &lt;- function(data, shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  join_key_a, join_key_b = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  lat_col, lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  correct_lat_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  correct_lon_col = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use poliprep::shp_global if shapefile_data is not provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">52</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">53</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">54</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    join_key_b &lt;- "ADM2_GUID"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">55</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lat_col &lt;- "CENTER_LAT"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">56</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lon_col &lt;- "CENTER_LON"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Input validation</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">60</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!join_key_a %in% names(data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">61</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">62</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The join key '{join_key_a}' ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">63</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "is not present in the data dataframe."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">66</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(join_key_b) || !join_key_b %in% names(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">67</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">68</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The join key '{join_key_b}' is not ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">69</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "present in the shapefile_data dataframe."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">71</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">72</td>
                    <td class="coverage">8<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(correct_lat_col) || !correct_lat_col %in% names(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">73</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The column '{correct_lat_col}' is not present ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "in the shapefile_data dataframe."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">76</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">77</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">78</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(correct_lon_col) || !correct_lon_col %in% names(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">79</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "The column '{correct_lon_col}' is not present ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">81</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "in the shapefile_data dataframe."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Process data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">86</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">87</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">88</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !!rlang::sym(join_key_a) := as.character(!!rlang::sym(join_key_a)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">89</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !!rlang::sym(join_key_a) := stringr::str_to_lower(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">90</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        stringr::str_replace_all(!!rlang::sym(join_key_a), "[{}]", "")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">91</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">92</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">93</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">94</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  shapefile_data &lt;- shapefile_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">95</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">96</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !!rlang::sym(join_key_b) := as.character(!!rlang::sym(join_key_b)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">97</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !!rlang::sym(join_key_b) := stringr::str_to_lower(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">98</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        stringr::str_replace_all(!!rlang::sym(join_key_b), "[{}]", "")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">99</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">100</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">101</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">102</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Join data with shapefile_data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">103</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  joined_data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">104</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::left_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">105</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      shapefile_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">106</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">107</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(join_key_b),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">108</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(correct_lat_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">109</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !!rlang::sym(correct_lon_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">111</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      by = stats::setNames(join_key_b, join_key_a)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">113</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">114</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(list(data = joined_data, shapefile_data = shapefile_data))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">115</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">116</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">117</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check for Potentially Flipped Geographical Coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">119</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function checks for potentially flipped latitude and longitude</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">120</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' coordinates by comparing them with a reference shapefile, without actually</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">121</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' correcting them.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">123</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @inheritParams setup_coord_operation</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">124</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">125</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A dataframe with additional columns indicating whether coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">126</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         are potentially flipped and the distances to the correct coordinates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">127</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_coord_flip &lt;- function(data, shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             join_key_a, join_key_b = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">129</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             lat_col, lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">130</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             correct_lat_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">131</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                             correct_lon_col = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use poliprep::shp_global if shapefile_data is not provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">133</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">134</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">135</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    join_key_b &lt;- "ADM2_GUID"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">136</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lat_col &lt;- "CENTER_LAT"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">137</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lon_col &lt;- "CENTER_LON"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">138</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">139</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">140</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  setup_result &lt;- setup_coord_operation(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">141</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data, shapefile_data, join_key_a, join_key_b,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">142</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lat_col, lon_col, correct_lat_col, correct_lon_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">143</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">144</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">145</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use poliprep::shp_global if shapefile_data is not provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">146</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">147</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">148</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    join_key_b &lt;- "ADM2_GUID"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">149</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lat_col &lt;- "CENTER_LAT"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">150</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lon_col &lt;- "CENTER_LON"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">151</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">152</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">153</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  joined_data &lt;- setup_result$data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">154</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">155</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result &lt;- joined_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">156</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">157</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !!rlang::sym(lat_col) := as.numeric(!!rlang::sym(lat_col)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">158</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !!rlang::sym(lon_col) := as.numeric(!!rlang::sym(lon_col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">159</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">160</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">161</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dist_correct = calculate_distance(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">162</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lon_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">163</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lat_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">164</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(correct_lon_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">165</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(correct_lat_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">166</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">167</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dist_flipped = calculate_distance(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">168</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lat_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">169</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lon_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">170</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(correct_lon_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">171</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(correct_lat_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">172</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">173</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      coord_diff_input = abs(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">174</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lat_col) - !!rlang::sym(lon_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">175</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">176</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      coord_diff_correct = abs(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">177</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(correct_lat_col) - !!rlang::sym(correct_lon_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">178</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">179</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      potentially_flipped = dplyr::case_when(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">180</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        abs(dist_flipped - dist_correct) &lt; 1e-6 ~ FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">181</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        coord_diff_input &gt; 0.5 &amp; # Lowered threshold</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">182</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          coord_diff_correct &gt; 0.5 &amp; # Lowered threshold</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">183</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dist_flipped &lt; dist_correct * 0.9 ~ TRUE, # Adjusted ratio</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">184</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        TRUE ~ FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">185</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">186</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      flipped_confidence_score = pmin(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">187</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        100, pmax(0, 100 * (dist_correct - dist_flipped) / dist_correct *</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">188</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          (1 + log10(coord_diff_input + 1)) *</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">189</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          (1 + log10(coord_diff_correct + 1)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">190</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">191</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">192</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">193</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      -coord_diff_input, -coord_diff_correct</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">194</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">195</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">196</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Calculate the number of potentially flipped coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">197</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  num_flipped &lt;- sum(result$potentially_flipped, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">198</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  total_coords &lt;- nrow(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">199</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">200</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use cli to give a report</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">201</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (num_flipped &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">202</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    num_flipped &lt;- big_mark(num_flipped)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">203</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    total_coords &lt;- big_mark(total_coords)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">204</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">205</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "{num_flipped} out of {total_coords} coordinates are potentially flipped."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">206</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">207</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">208</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_success("No coordinates appear to be flipped.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">209</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">210</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">211</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">212</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">213</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">214</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Calculate Haversine Distance Between Two Geographic Points</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">215</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">216</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function calculates the Haversine distance between two points on the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">217</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Earth's surface, given their longitude and latitude coordinates. It includes</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">218</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' input validation and error handling.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">219</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">220</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon1 Numeric. Longitude of the first point in decimal degrees.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">221</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat1 Numeric. Latitude of the first point in decimal degrees.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">222</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon2 Numeric. Longitude of the second point in decimal degrees.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">223</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat2 Numeric. Latitude of the second point in decimal degrees.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">224</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">225</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return Numeric. The Haversine distance between the two points in meters.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">226</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         Returns NA if any of the coordinates are invalid or if an error</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">227</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        occurs during calculation.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">228</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">229</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">230</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function first checks if any of the input coordinates are outside the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">231</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' valid range (latitude between -90 and 90 degrees, longitude between -180 and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">232</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 180 degrees). If any coordinate is invalid, it returns NA.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">233</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">234</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' If all coordinates are valid, it uses the geosphere::distHaversine function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">235</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' to calculate the distance. Any errors during this calculation are caught,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">236</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and NA is returned in such cases.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">237</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">238</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">239</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' calculate_distance(0, 0, 1, 1)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">240</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' calculate_distance(-180, 90, 180, -90)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">241</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' calculate_distance(0, 91, 0, 0) # Returns NA due to invalid latitude</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">242</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">243</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom geosphere distHaversine</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">244</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">245</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">246</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">calculate_distance &lt;- function(lon1, lat1, lon2, lat2) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">247</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check for NA values</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">248</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  na_mask &lt;- is.na(lon1) | is.na(lat1) | is.na(lon2) | is.na(lat2)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">249</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">250</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check for out-of-range values</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">251</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  invalid_mask &lt;- abs(lat1) &gt; 90 | abs(lat2) &gt; 90 |</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">252</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    abs(lon1) &gt; 180 | abs(lon2) &gt; 180</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">253</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">254</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Combine NA and invalid masks</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">255</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  mask &lt;- na_mask | invalid_mask</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">256</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">257</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize result vector</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">258</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result &lt;- rep(NA_real_, length(lon1))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">259</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">260</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Calculate distances only for valid coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">261</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  valid_indices &lt;- which(!mask)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">262</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(valid_indices) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">263</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    result[valid_indices] &lt;- geosphere::distHaversine(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">264</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cbind(lon1[valid_indices], lat1[valid_indices]),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">265</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cbind(lon2[valid_indices], lat2[valid_indices])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">266</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">267</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">268</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">269</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">270</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">271</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">272</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check if geographic coordinates are on land or water</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">273</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">274</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function takes vectors of longitude and latitude coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">275</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and determines whether each point is located on land or water using</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">276</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Natural Earth data included in poliprep. It handles missing values gracefully.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">277</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">278</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon Numeric vector of longitude coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">279</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat Numeric vector of latitude coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">280</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">281</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A character vector with "land", "water", or NA for each input</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">282</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        coordinate pair</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">283</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">284</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">285</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Create a data frame with test coordinates, known locations, and missing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">286</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # values</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">287</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' coords &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">288</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lat = c(40.7772, 40.2987, -1.1466, 1.7656, 4.6282, 5.5880, NA, 45.5017),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">289</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   long = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">290</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     -74.1613, -70.7210, 32.9333, 22.8465, -0.6796,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">291</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     -0.0420, -123.5673, NA</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">292</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">293</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   actual_location = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">294</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "Land", "Ocean", "Inland Water", "Land", "Ocean", "Ocean", NA, NA</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">295</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">296</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">297</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">298</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Apply the check_land_water function to the coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">299</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' coords$predicted_location &lt;- check_land_water(coords$long, coords$lat)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">300</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">301</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Print the results, showing actual and predicted locations</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">302</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' print(coords)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">303</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">304</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">305</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_land_water &lt;- function(lon, lat) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">306</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  sf::sf_use_s2(FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">307</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">308</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get world land polygons and lakes</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">309</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  world &lt;- poliprep::world</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">310</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  lakes &lt;- poliprep::lakes</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">311</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">312</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Create a data frame with input coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">313</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  input_df &lt;- data.frame(lon = lon, lat = lat)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">314</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">315</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Identify rows with missing values</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">316</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_mask &lt;- is.na(input_df$lon) | is.na(input_df$lat)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">317</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">318</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Create points from valid input coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">319</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  valid_points &lt;- sf::st_as_sf(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">320</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    input_df[!missing_mask, ],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">321</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    coords = c("lon", "lat"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">322</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    crs = 4326</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">323</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">324</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">325</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize result vector with NAs</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">326</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  result &lt;- rep(NA_character_, length(lon))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">327</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">328</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (nrow(valid_points) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">329</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    suppressMessages({</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">330</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # Check if points intersect with land</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">331</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      intersects_land &lt;- sf::st_intersects(valid_points, world, sparse = FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">332</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">333</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # Check if points intersect with lakes</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">334</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      intersects_lakes &lt;- sf::st_intersects(valid_points, lakes, sparse = FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">335</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">336</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">337</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Determine if points are on land, in lakes, or in ocean</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">338</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    valid_result &lt;- ifelse(apply(intersects_land, 1, any),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">339</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ifelse(apply(intersects_lakes, 1, any),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">340</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Inland water", "Land"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">341</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ), "Ocean"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">342</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">343</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">344</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Assign results to non-missing coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">345</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    result[!missing_mask] &lt;- valid_result</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">346</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">347</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">348</td>
                    <td class="coverage">12<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">349</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">350</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">351</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Comprehensive Geographic Data Check</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">352</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">353</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Performs various checks on geographic data, including coordinate flipping,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">354</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' land/water checks, missing coordinate checks, and more. Provides CLI output</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">355</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and an optional table summary.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">356</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">357</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A dataframe containing the geographic data to be checked.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">358</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_data Optional. A dataframe with reference shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">359</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        If NULL, `poliprep::shp_global` is used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">360</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param join_key_a Column name in data to join with shapefile data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">361</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param join_key_b Optional. Column name in shapefile_data to join with data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">362</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        Defaults to "ADM2_GUID" if shapefile_data is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">363</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_col Name of the latitude column in the data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">364</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon_col Name of the longitude column in the data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">365</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lat_col Optional. Name of correct latitude column in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">366</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        shapefile_data. Defaults to "CENTER_LAT" if shapefile_data is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">367</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lon_col Optional. Name of correct longitude column in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">368</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        shapefile_data. Defaults to "CENTER_LON" if shapefile_data is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">369</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param checks Character vector specifying checks to perform. Options:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">370</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        "flip", "on_water", "missing", "out_of_bounds", "precision",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">371</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        "null_coords", "parse". Default is all checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">372</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param aggregate_by Optional. Column name(s) to aggregate results by.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">373</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param summary_table Logical. If TRUE, returns a summary table instead of</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">374</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        detailed results. Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">375</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_precision Numeric. Minimum decimal places for coordinate</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">376</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        precision check. Default is 4.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">377</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">378</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return If summary_table is FALSE, returns input data with additional check</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">379</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         columns. If TRUE, returns a summary table of the checks.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">380</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">381</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">382</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_coords &lt;- function(data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">383</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">384</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         join_key_a, join_key_b = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">385</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         lat_col, lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">386</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         correct_lat_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">387</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         correct_lon_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">388</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         checks = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">389</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           "flip", "on_water", "missing",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">390</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           "out_of_bounds", "precision",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">391</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           "null_coords", "parse"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">392</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">393</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         aggregate_by = NULL, summary_table = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">394</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         min_precision = 4) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">395</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Conditional loading for packages</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">396</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  required_packages &lt;- c("readr", "parzer")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">397</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">398</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_packages &lt;- required_packages[!sapply(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">399</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    required_packages, requireNamespace,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">400</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quietly = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">401</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">402</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">403</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suppressMessages(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">404</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # convert to appropriate type</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">405</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data &lt;- data |&gt; readr::type_convert()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">406</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">407</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">408</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use poliprep::shp_global if shapefile_data is not provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">409</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">410</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">411</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    join_key_b &lt;- "ADM2_GUID"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">412</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lat_col &lt;- "CENTER_LAT"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">413</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lon_col &lt;- "CENTER_LON"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">414</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">415</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">416</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">417</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results &lt;- data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">418</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  total_count &lt;- nrow(results)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">419</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  total_count_c &lt;- big_mark(nrow(results))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">420</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">421</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check for missing coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">422</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("missing" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">423</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    results &lt;- results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">424</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">425</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        missing_coords = is.na(!!rlang::sym(lat_col)) |</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">426</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          is.na(!!rlang::sym(lon_col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">427</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">428</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">429</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_count &lt;- sum(results$missing_coords, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">430</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">431</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Missing Coordinates Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">432</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (missing_count &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">433</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">434</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">435</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Found {crayon::red(big_mark(missing_count))} out of ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">436</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "{total_count_c} coordinates missing."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">437</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">438</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">439</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">440</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("No missing coordinates found.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">441</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">442</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">443</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Parse coordinates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">444</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suppressWarnings({</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">445</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords &lt;- results |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">446</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">447</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parse_failed = if ("parse" %in% checks) TRUE else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">448</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        null_count = if ("null_coords" %in% checks) FALSE else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">449</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        potentially_flipped = if ("flip" %in% checks) FALSE else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">450</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        on_water = if ("on_water" %in% checks) NA_character_ else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">451</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parse_failed = if ("parse" %in% checks) TRUE else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">452</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        low_precision = if ("precision" %in% checks) FALSE else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">453</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        out_of_bounds = if ("out_of_bounds" %in% checks) FALSE else NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">454</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">455</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">456</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lon_col) := as.numeric(!!rlang::sym(lon_col)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">457</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !!rlang::sym(lat_col) := as.numeric(!!rlang::sym(lat_col)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">458</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Long_parzer = parzer::parse_lon(!!rlang::sym(lon_col)),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">459</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Lat_parzer = parzer::parse_lat(!!rlang::sym(lat_col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">460</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">461</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">462</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # set up missing coords</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">463</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_coords &lt;- parsed_coords |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">464</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(is.na(!!rlang::sym(lon_col)) |</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">465</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        is.na(!!rlang::sym(lat_col)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">466</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">467</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    non_parseable_coords &lt;- parsed_coords |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">468</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">469</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parse_failed = if ("parse" %in% checks) NA else NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">470</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">471</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(!is.na(!!rlang::sym(lon_col)) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">472</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !is.na(!!rlang::sym(lat_col))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">473</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(is.na(Long_parzer) | is.na(Lat_parzer))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">474</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">475</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords &lt;- parsed_coords |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">476</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">477</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parse_failed = if ("parse" %in% checks) FALSE else NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">478</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">479</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(!is.na(!!rlang::sym(lon_col)) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">480</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        !is.na(!!rlang::sym(lat_col))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">481</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::filter(!is.na(Long_parzer) &amp; !is.na(Lat_parzer))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">482</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">483</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">484</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">485</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  parse_count &lt;- nrow(parsed_coords)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">486</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">487</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_h1("Coordinate Parsing Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">488</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (parse_count == total_count) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">489</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">490</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">491</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "All {big_mark(total_count_c)} ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">492</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "coordinates parsed successfully."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">493</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">494</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">495</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">496</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    failed_count &lt;- as.numeric(total_count) - parse_count</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">497</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">498</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">499</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Failed to parse {crayon::red(big_mark(failed_count))}",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">500</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " out of {total_count_c} coordinates."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">501</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">502</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">503</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">504</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">505</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use parsed_coords for subsequent checks</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">506</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("out_of_bounds" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">507</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords &lt;- parsed_coords |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">508</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">509</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        out_of_bounds = (Lat_parzer &lt; -90 | Lat_parzer &gt; 90 |</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">510</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          Long_parzer &lt; -180 | Long_parzer &gt; 180)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">511</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">512</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">513</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    out_of_bounds_count &lt;- sum(parsed_coords$out_of_bounds, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">514</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">515</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Out-of-Bounds Coordinates Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">516</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (out_of_bounds_count &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">517</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">518</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">519</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Found {crayon::red(big_mark(out_of_bounds_count))} out of ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">520</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "{big_mark(parse_count)} parsed coordinates out ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">521</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "of bounds.\n Valid lat range is -90 to 90, and ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">522</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "valid log range is -180 to 180."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">523</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">524</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">525</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">526</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">527</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">528</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "No out-of-bounds coordinates found. ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">529</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "All parsed coordinates are within valid ranges:",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">530</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "\n  - Latitude: -90 to 90",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">531</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "\n  - Longitude: -180 to 180"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">532</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">533</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">534</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">535</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">536</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">537</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("precision" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">538</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords &lt;- parsed_coords |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">539</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">540</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        lat_precision = nchar(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">541</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sub("^-?\\d+\\.", "", as.character(Lat_parzer))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">542</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">543</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        lon_precision = nchar(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">544</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sub("^-?\\d+\\.", "", as.character(Long_parzer))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">545</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">546</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        low_precision = (</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">547</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          lat_precision &lt; min_precision | lon_precision &lt; min_precision)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">548</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">549</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">550</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    low_precision_count &lt;- sum(parsed_coords$low_precision, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">551</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">552</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Coordinate Precision Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">553</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (low_precision_count &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">554</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">555</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">556</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Found {crayon::red(big_mark(low_precision_count))} parsed",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">557</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          " coordinates with precision below {min_precision} decimal places."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">558</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">559</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">560</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">561</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">562</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">563</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "All parsed coordinates have appropriate precision ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">564</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "(minimum {min_precision} decimal places)."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">565</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">566</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">567</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">568</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">569</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">570</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("null_coords" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">571</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords &lt;- parsed_coords |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">572</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">573</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        null_count = (Lat_parzer == 0 &amp; Long_parzer == 0)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">574</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">575</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">576</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    null_count &lt;- sum(parsed_coords$null_count, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">577</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">578</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Null Coordinates Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">579</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (null_count &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">580</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">581</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">582</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Found {crayon::red(null_count)} parsed coordinates ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">583</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "that are Null (0,0)."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">584</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">585</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">586</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">587</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("No parsed coordinates that were Null (0,0).")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">588</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">589</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">590</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">591</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">592</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("flip" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">593</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (is.null(join_key_a)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">594</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">595</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Cannot perform flipped coord check without `join_key_a``."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">596</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">597</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      checks &lt;- checks[checks != "flip"]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">598</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">599</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">600</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Cannot perform flipped coord check without shapefile_data."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">601</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">602</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      checks &lt;- checks[checks != "flip"]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">603</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">604</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">605</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">606</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("flip" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">607</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tryCatch(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">608</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">609</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        suppressMessages({</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">610</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          parsed_coords &lt;- check_coord_flip(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">611</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            data = parsed_coords,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">612</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            shapefile_data = shapefile_data,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">613</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            join_key_a = join_key_a,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">614</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            join_key_b = join_key_b,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">615</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            lat_col = "Lat_parzer",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">616</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            lon_col = "Long_parzer",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">617</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            correct_lat_col = correct_lat_col,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">618</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            correct_lon_col = correct_lon_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">619</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">620</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">621</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">622</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cli::cli_h1("Flipped Coordinates Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">623</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        flipped_count &lt;- sum(parsed_coords$potentially_flipped, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">624</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (flipped_count &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">625</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">626</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">627</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">              "Found {crayon::red(big_mark(flipped_count))} out of ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">628</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">              "{big_mark(nrow(parsed_coords))} parsed coordinates",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">629</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">              "  potentially flipped."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">630</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">631</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">632</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">633</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          cli::cli_alert_success("No potentially flipped coordinates found.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">634</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">635</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">636</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      error = function(e) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">637</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cli::cli_alert_warning("Error in flipped coordinates check: {e$message}")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">638</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parsed_coords$potentially_flipped &lt;- NA</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">639</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">640</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">641</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">642</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">643</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if ("on_water" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">644</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords$on_water &lt;- check_land_water(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">645</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      parsed_coords$Long_parzer,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">646</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      parsed_coords$Lat_parzer</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">647</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">648</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">649</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h1("Land/Water Check")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">650</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    land_count &lt;- sum(parsed_coords$on_water == "Land", na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">651</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    water_count &lt;- sum(parsed_coords$on_water != "Land", na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">652</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    land_count &lt;- big_mark(land_count)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">653</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    water_count &lt;- big_mark(water_count)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">654</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">655</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (water_count == 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">656</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("All {land_count} parsed coordinates are on land.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">657</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">658</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">659</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">660</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "Found {crayon::red(water_count)} parsed coordinates",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">661</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          " on water, the rest are on land."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">662</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">663</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">664</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">665</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">666</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">667</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # bind parsed and non-parsed to make results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">668</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  results &lt;- dplyr::bind_rows(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">669</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_coords,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">670</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    non_parseable_coords,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">671</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    parsed_coords</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">672</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">673</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">674</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (summary_table) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">675</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summary_data &lt;- results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">676</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!is.null(aggregate_by)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">677</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      summary_data &lt;- summary_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">678</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::select(dplyr::any_of(c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">679</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "missing_coords", "parse_failed", "out_of_bounds", "low_precision",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">680</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "null_count", "potentially_flipped", "on_water", "parse",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">681</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          aggregate_by</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">682</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ))) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">683</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::group_by(dplyr::across(dplyr::all_of(aggregate_by)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">684</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">685</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">686</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    summary_data &lt;- summary_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">687</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::summarise(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">688</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        total_coords = dplyr::n(),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">689</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        missing_coords = if ("missing" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">690</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(missing_coords, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">691</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">692</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">693</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">694</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        parse_failed = if ("parse" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">695</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(parse_failed, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">696</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">697</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">698</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">699</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        out_of_bounds = if ("out_of_bounds" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">700</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(out_of_bounds, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">701</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">702</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">703</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">704</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        low_precision = if ("precision" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">705</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(low_precision, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">706</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">707</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">708</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">709</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        null_count = if ("null_coords" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">710</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(null_count, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">711</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">712</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">713</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">714</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        potentially_flipped = if ("flip" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">715</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(potentially_flipped, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">716</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">717</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">718</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">719</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        on_water = if ("on_water" %in% checks) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">720</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          sum(on_water %in% c("Ocean", "Inland water"), na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">721</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">722</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">723</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">724</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        .groups = "drop"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">725</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">726</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::mutate(dplyr::across(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">727</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        where(is.numeric) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">728</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          !dplyr::any_of(aggregate_by), big_mark</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">729</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">730</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::select(dplyr::all_of(c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">731</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        aggregate_by, "total_coords",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">732</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("missing" %in% checks) "missing_coords" else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">733</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("parse" %in% checks) "parse_failed" else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">734</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("out_of_bounds" %in% checks) "out_of_bounds" else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">735</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("precision" %in% checks) "low_precision" else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">736</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("null_coords" %in% checks) "null_count" else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">737</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("flip" %in% checks) "potentially_flipped" else NULL,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">738</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if ("on_water" %in% checks) "on_water" else NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">739</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">740</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">741</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    new_names &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">742</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Total Coords" = "total_coords",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">743</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Missing Coords" = "missing_coords",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">744</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Parse Failed" = "parse_failed",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">745</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Out of Bounds" = "out_of_bounds",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">746</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Low Precision" = "low_precision",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">747</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Null Coords" = "null_count",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">748</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Potentially Flipped" = "potentially_flipped",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">749</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "On Water" = "on_water"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">750</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">751</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">752</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    for (new_name in names(new_names)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">753</td>
                    <td class="coverage">24<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if (new_names[new_name] %in% names(summary_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">754</td>
                    <td class="coverage">22<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        summary_data &lt;- summary_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">755</td>
                    <td class="coverage">22<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::rename(!!new_name := !!rlang::sym(new_names[new_name]))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">756</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">757</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">758</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">759</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cat("\n")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">760</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(as.data.frame(summary_data))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">761</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">762</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(results)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">763</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">764</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">765</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">766</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">767</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Correct Flipped Geographical Coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">768</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">769</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function corrects potentially flipped latitude and longitude coordinates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">770</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' by comparing them with a reference shapefile.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">771</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">772</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A dataframe containing the geographical coordinates to be</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">773</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        corrected.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">774</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile_data Optional. A dataframe containing reference shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">775</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        data. If NULL, `poliprep::shp_global` will be used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">776</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param join_key_a The column name in `data` to join with `shapefile_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">777</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param join_key_b Optional. The column name in `shapefile_data` to join with</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">778</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        `data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">779</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   If NULL and `shapefile_data` is NULL, defaults to "ADM2_GUID".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">780</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat_col The name of the latitude column in `data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">781</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon_col The name of the longitude column in `data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">782</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lat_col Optional. The name of the correct latitude column in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">783</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'      `shapefile_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">784</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   If NULL and `shapefile_data` is NULL, defaults to "CENTER_LAT".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">785</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param correct_lon_col Optional. The name of the correct longitude column</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">786</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        in `shapefile_data`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">787</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   If NULL and `shapefile_data` is NULL, defaults to "CENTER_LON".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">788</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">789</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A dataframe with corrected latitude and longitude coordinates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">790</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">791</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">792</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Using default global shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">793</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">794</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   id = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">795</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "38E294F7-508F-46A2-B5CF-B1D2FD6B2103",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">796</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "1965B8ED-CD56-4784-BEB4-6924A245F533"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">797</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">798</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lat = c(40.7128, -74.0060),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">799</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lon = c(-74.0060, 40.7128)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">800</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">801</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">802</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' corrected_data &lt;- correct_flipped_geo_coords(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">803</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">804</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   join_key_a = "id",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">805</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lat_col = "lat",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">806</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lon_col = "lon"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">807</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">808</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">809</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Using custom shapefile</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">810</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' custom_shapefile &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">811</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   region_id = c(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">812</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "38E294F7-508F-46A2-B5CF-B1D2FD6B2103",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">813</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     "1965B8ED-CD56-4784-BEB4-6924A245F533"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">814</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">815</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   correct_lat = c(40.7128, 41.8781),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">816</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   correct_lon = c(-74.0060, -87.6298)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">817</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">818</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' corrected_data &lt;- correct_flipped_geo_coords(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">819</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">820</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   shapefile_data = custom_shapefile,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">821</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   join_key_a = "id",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">822</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   join_key_b = "region_id",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">823</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lat_col = "lat",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">824</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   lon_col = "lon",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">825</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   correct_lat_col = "correct_lat",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">826</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   correct_lon_col = "correct_lon"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">827</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">828</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">829</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">830</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">correct_flipped_geo_coords &lt;- function(data, shapefile_data = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">831</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                       join_key_a, join_key_b = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">832</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                       lat_col, lon_col,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">833</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                       correct_lat_col = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">834</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                       correct_lon_col = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">835</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use poliprep::shp_global if shapefile_data is not provided</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">836</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile_data)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">837</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile_data &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">838</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    join_key_b &lt;- "ADM2_GUID"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">839</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lat_col &lt;- "CENTER_LAT"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">840</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    correct_lon_col &lt;- "CENTER_LON"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">841</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">842</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">843</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suppressMessages({</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">844</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    checked_data &lt;- check_coord_flip(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">845</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      data, shapefile_data, join_key_a, join_key_b,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">846</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lat_col, lon_col, correct_lat_col, correct_lon_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">847</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">848</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">849</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">850</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  corrected_data &lt;- checked_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">851</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">852</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      temp_lat = dplyr::if_else(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">853</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        potentially_flipped, !!rlang::sym(lon_col), !!rlang::sym(lat_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">854</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">855</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      temp_lon = dplyr::if_else(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">856</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        potentially_flipped, !!rlang::sym(lat_col), !!rlang::sym(lon_col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">857</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">858</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">859</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">860</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      -dist_correct, -dist_flipped,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">861</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      -!!rlang::sym(lat_col), -!!rlang::sym(lon_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">862</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      -!!rlang::sym(correct_lat_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">863</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      -!!rlang::sym(correct_lon_col),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">864</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      -dplyr::any_of("geometry")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">865</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">866</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::rename(!!lat_col := temp_lat, !!lon_col := temp_lon) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">867</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    as.data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">868</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">869</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Calculate the number of coordinates flipped</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">870</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  num_flipped &lt;- sum(corrected_data$potentially_flipped, na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">871</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  total_coords &lt;- nrow(corrected_data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">872</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">873</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Use cli to give a report</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">874</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (num_flipped &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">875</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    num_flipped &lt;- big_mark(num_flipped)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">876</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    total_coords &lt;- big_mark(total_coords)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">877</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">878</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "{num_flipped} flipped coordinates were corrected."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">879</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">880</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">881</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_info("No coordinates were flipped.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">882</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">883</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">884</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(corrected_data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">885</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/get_polis.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Extract Entity Sets from the POLIS API Metadata</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function retrieves and extracts entity sets from the POLIS API metadata</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' URL provided. It parses the XML content to extract the names and entity</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' types of the available data sets.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param url A character string specifying the URL of the POLIS API metadata.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame containing two columns:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \describe{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{DataName}{The name of the data set.}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item{EntityType}{The entity type associated with the data set.}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Define the URL for the POLIS API metadata</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' polis_api_root_url &lt;-</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'              "https://extranet.who.int/polis/api/v2/$metadata?token="</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' api_token &lt;- Sys.getenv("POLIS_API_KEY")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' url &lt;- paste0(polis_api_root_url, api_token)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Extract the entity sets</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' xml_df &lt;- extract_entity_sets(url)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">extract_entity_sets &lt;- function(url) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">27</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response &lt;- httr::GET(url)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">28</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  content &lt;- httr::content(response, as = "text")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">29</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  xml_content &lt;- xml2::read_xml(content)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get the namespaces</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">32</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  ns &lt;- xml2::xml_ns(xml_content)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Extract EntitySet nodes using the correct namespaces</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">35</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  entity_sets &lt;- xml_content |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">36</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    xml2::xml_find_all("//d4:EntityContainer/d4:EntitySet", ns = ns)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Extract attributes from EntitySet nodes and convert to a data frame</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">39</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">40</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    `DataName` = xml2::xml_attr(entity_sets, "Name"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">41</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    `EntityType` = xml2::xml_attr(entity_sets, "EntityType"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">42</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">44</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::group_by(`EntityType`) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">45</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::slice(1) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">46</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::ungroup()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Get HTTP Status Code for a POLIS API Table</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function sends a GET request to a specified POLIS API table and returns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' the HTTP status code. It includes error handling to manage timeouts and other</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' potential request errors.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param table A character string specifying the name of the table to check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param api_token A character string of the POLIS API token. Defaults to</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'      `Sys.getenv("POLIS_API_KEY")`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return An integer representing the HTTP status code, or a character string</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'      ("Timeout" or "Error") if an exception occurs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Get the status code for the "countries" table</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' status_code &lt;- get_status_code("countries")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">get_status_code &lt;- function(table, api_token = Sys.getenv("POLIS_API_KEY")) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">68</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  url &lt;- paste0("https://extranet.who.int/polis/api/v2/", table, "?$top=5")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">69</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">70</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    response &lt;- httr::GET(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">71</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      url,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">72</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      httr::add_headers("authorization-token" = api_token),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">73</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      httr::timeout(10)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">74</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">75</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr::status_code(response)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">76</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }, error = function(e) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">77</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (grepl("Timeout was reached", e$message)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">78</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      return("Timeout")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">80</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      return("Error")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">81</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Check Availability of POLIS API Tables</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">86</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">87</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function checks the availability of specified tables in the POLIS API</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' by sending GET requests. It reports the HTTP status codes and provides</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">89</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' success or error messages using the `cli` package.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">90</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">91</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param api_token A character string of the POLIS API token. Defaults to</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">92</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    `Sys.getenv("POLIS_API_KEY")`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">93</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param tables_to_check An optional character vector of table names to check.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">94</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     If `NULL`, all available tables are checked.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">95</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">96</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return No return value. The function outputs messages to the console</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">97</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    indicating the availability of each table.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">98</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">99</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">100</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">101</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Check the availability of specific tables</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">102</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' check_tables_availability(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">103</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   api_token = Sys.getenv("POLIS_API_KEY"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">104</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   tables_to_check = c("virus", "case", "population", "humanspecimenviruses",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">105</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                       "envsample", "synonym", "geography", "lqas",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">106</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                       "activity", "subactivity", "envirosamplesite",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">107</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                       "im", "labspecimen")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">108</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">109</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'@export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">111</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">check_tables_availability &lt;- function(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    api_token = Sys.getenv("POLIS_API_KEY"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">113</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tables_to_check = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">114</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">115</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get the list of tables</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">116</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  polis_api_root_url &lt;- "https://extranet.who.int/polis/api/v2/$metadata?token="</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">117</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  url &lt;- paste0(polis_api_root_url, api_token)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">119</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  xml_df &lt;- extract_entity_sets(url)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">120</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  tables &lt;- tolower(xml_df$DataName)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">121</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # If specific tables are requested, filter the list</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">123</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(tables_to_check)) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">124</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Ensure the provided table names are in lowercase</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">125</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tables_to_check &lt;- tolower(tables_to_check)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">126</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Filter tables to only include those specified</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">127</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    tables &lt;- tables[tables %in% tables_to_check]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">129</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Warn if any requested tables are not found</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">130</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_tables &lt;- setdiff(tables_to_check, tables)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">131</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (length(missing_tables) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">132</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">133</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">134</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "The following tables were not found and will be skipped:",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">135</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          " {paste(missing_tables, collapse = ', ')}")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">136</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">137</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">138</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">139</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">140</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Disable SSL verification and set a timeout</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">141</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  httr::set_config(httr::config(ssl_verifypeer = 0L))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">142</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  options(timeout = 5)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">143</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">144</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Loop through tables and check availability</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">145</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (table in tables) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">146</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    status_code &lt;- get_status_code(table, api_token = api_token)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">147</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (status_code == 200) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">148</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">149</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "POLIS table `{table}` is available to download."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">150</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">151</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">152</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_danger(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">153</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "POLIS table `{table}` is not available. Status code: {status_code}"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">154</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">155</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">156</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">157</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">158</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">159</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Construct API URL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">160</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">161</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function constructs a URL for making an API call. It takes various</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">162</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' parameters such as the API endpoint, endpoint suffix, date range, region, and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">163</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' selected variables, and combines them to form a complete and well-formatted</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">164</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' API URL. The function handles the inclusion of date filters, region filters,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">165</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and selection of specific fields in the query, and ensures proper URL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">166</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' encoding.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">167</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">168</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param endpoint The base URL of the API endpoint.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">169</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param suffix Additional path appended to the endpoint to specify the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">170</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        API resource.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">171</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_date The minimum date for the date range filter.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">172</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param max_date The maximum date for the date range filter.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">173</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param country_code ISO3 country code to filter the data. Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">174</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_field The field name in the API corresponding to the date.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">175</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param region_field The field name in the API corresponding to the region.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">176</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param region The specific region to filter the data. If NULL or empty,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">177</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        no region filter is applied.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">178</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param select_vars A vector of field names to be included in the API</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">179</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        response. If NULL or empty, no selective fields are applied.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">180</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">181</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A string containing the fully constructed API URL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">182</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">183</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">184</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' construct_api_url(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">185</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   "https://api.example.com/", "data", "2020-01-01", "2020-12-31",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">186</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   "dateField", "NGA", "regionField", "AFRO", c("field1", "field2")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">187</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">188</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">189</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">190</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">construct_api_url &lt;- function(endpoint, suffix, min_date, max_date,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">191</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                              date_field, country_code,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">192</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                              region_field, region, select_vars) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">193</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Base URL construction</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">194</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  base_url &lt;- paste0(endpoint, suffix)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">195</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">196</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Date filter</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">197</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_filter &lt;- glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">198</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "{date_field} ge DateTime'{min_date}' and ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">199</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "{date_field} le DateTime'{max_date}'"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">200</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">201</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">202</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Region filter</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">203</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  region_filter &lt;- ""</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">204</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(region) &amp;&amp; region != "" &amp;&amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">205</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      !(suffix %in% c("HumanSpecimenViruses", "Im"))) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">206</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    region_filter &lt;- glue::glue(" and {region_field} eq '{region}'")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">207</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">208</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">209</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # country code filter</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">210</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  country_code_filter &lt;- ""</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">211</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(country_code) &amp;&amp; country_code != "" ) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">212</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    country_code_filter &lt;- glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">213</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      " and CountryISO3Code eq '{country_code}'")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">214</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">215</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">216</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Combine date and region filters</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">217</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  filter_query &lt;- paste(date_filter, country_code_filter,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">218</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        region_filter, sep = "")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">219</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">220</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Select query for additional fields</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">221</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  select_query &lt;- ""</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">222</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!is.null(select_vars) &amp;&amp; length(select_vars) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">223</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    select_query &lt;- paste0("$select=", paste(select_vars, collapse = ","))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">224</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">225</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">226</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Construct final query string</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">227</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  query_string &lt;- ""</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">228</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (select_query != "") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">229</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    query_string &lt;- paste(filter_query, select_query, sep = "&amp;")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">230</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">231</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    query_string &lt;- filter_query</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">232</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">233</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">234</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Construct the full API URL</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">235</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  api_url &lt;- paste0(base_url, "?$filter=", utils::URLencode(query_string))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">236</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">237</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(api_url)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">238</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">239</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">240</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Get Date Field and Endpoint Suffix Based on Data Type</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">241</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">242</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function returns the appropriate endpoint suffix and date field name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">243</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' for a given data type. It is specifically designed to work with the POLIS API</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">244</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data retrieval system. The function takes a data type as input and returns a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">245</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' list containing the corresponding endpoint suffix and date field. It ensures</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">246</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' that the data type provided is valid and returns an error message if not.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">247</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">248</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data_type A string specifying the type of data for which information</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">249</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  is needed. Valid data types include 'cases', 'virus',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">250</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'population', 'env', 'geo', 'geo_synonym', 'im', 'activity',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">251</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'lab_specimen', 'lab_specimen_virus', 'lab_env',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">252</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'sub_activ', and lqas'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">253</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">254</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A list with two elements: 'endpoint_suffix', which is the suffix for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">255</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         the API endpoint corresponding to the data type, and 'date_field',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">256</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         which is the name of the date field relevant to the data type.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">257</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">258</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">259</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' result &lt;- get_api_date_suffix("cases")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">260</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' endpoint_suffix &lt;- result$endpoint_suffix</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">261</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' date_field &lt;- result$date_field</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">262</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">263</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">264</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">get_api_date_suffix &lt;- function(data_type) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">265</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Define endpoint suffixes and date fields in named lists</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">266</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  endpoint_suffixes &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">267</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cases = "Case", virus = "Virus",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">268</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    population = "Population", env = "EnvSample",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">269</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo = "Geography", geo_synonym = "Synonym",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">270</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_specimen = "LabSpecimen",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">271</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_specimen_virus = "HumanSpecimenViruses",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">272</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_env = "EnvSample",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">273</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    im = "Im", activity = "Activity",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">274</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sub_activ = "SubActivity", lqas = "Lqas"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">275</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">276</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">277</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Define date fields for each data type</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">278</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # for initial data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">279</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_fields_initial &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">280</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cases = "CaseDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">281</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    virus = "VirusDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">282</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    population = "CreatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">283</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    env = "CollectionDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">284</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo = "CreatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">285</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_synonym = "UpdatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">286</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    im = "PublishDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">287</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    activity = "ActivityDateFrom",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">288</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_specimen_virus = "PublishDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">289</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_specimen = "CreatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">290</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_env = "CollectionDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">291</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sub_activ = "DateFrom",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">292</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lqas = "Start"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">293</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">294</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">295</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Define date fields for each data type</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">296</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # for updated data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">297</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_fields &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">298</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cases = "LastUpdateDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">299</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    virus = "UpdatedDate", population = "UpdatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">300</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    env = "LastUpdateDate", geo = "UpdatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">301</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    geo_synonym = "UpdatedDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">302</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    im = "PublishDate", activity = "LastUpdateDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">303</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_specimen_virus = "PublishDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">304</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_specimen = "LastUpdateDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">305</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    lab_env = "LastUpdateDate",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">306</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sub_activ = "UpdatedDate", lqas = "Start"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">307</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">308</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">309</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check if the provided data type is valid</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">310</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (!data_type %in% names(endpoint_suffixes)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">311</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop("Invalid data_type specified")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">312</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">313</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">314</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Return endpoint suffix and date field</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">315</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">316</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    endpoint_suffix = endpoint_suffixes[[data_type]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">317</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_fields_initial = date_fields_initial[[data_type]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">318</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_field = date_fields[[data_type]]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">319</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">320</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">321</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">322</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Retrieve Data from POLIS API</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">323</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">324</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function serves as a gateway to retrieve various types of health-related</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">325</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data from the POLIS API. It simplifies the process of querying the API by</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">326</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' handling authentication, constructing the request URL, and iterating over</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">327</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' paginated results. The function is versatile, allowing for data retrieval</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">328</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' based on a range of parameters such as date range, data type, region, and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">329</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' specific variables. It automates the handling of API responses, including</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">330</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' status checking and data aggregation, and returns the results in a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">331</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' convenient data frame format. The function is designed to be robust,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">332</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' providing informative error messages in case of missing API keys or</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">333</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' unsuccessful API calls.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">334</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">335</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_date Start date for data retrieval in 'YYYY-MM-DD' format.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">336</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 Specifies the earliest date of the data to be fetched.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">337</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 Required parameter.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">338</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param max_date End date for data retrieval in 'YYYY-MM-DD' format.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">339</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 Defaults to the current system date. Specifies the latest</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">340</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 date of the data to be fetched.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">341</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data_type Type of data to retrieve.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">342</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  Supported types include 'cases', 'virus', 'population',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">343</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'env' (Environmental), 'geo' (Geographical), 'geo_synonym',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">344</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'im' (Independent Monitoring), 'activity', 'sub_activ'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">345</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  (Sub-activities), and 'lqas' (Lot Quality Assurance</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">346</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  Sampling), 'lab_specimen' (Human Specimen),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">347</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'lab_env' (Environmental Sample), 'lab_specimen_virus'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">348</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  (Human Specimen Viruses). Default is 'cases'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">349</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param region Region code for data filtering.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">350</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'               Represents the WHO region from which to retrieve the data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">351</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'               Possible values are AFRO; AMRO; EMRO; EURO; SEARO; WPRO Use</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">352</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'               'Global' to retrieve global data. Default is 'AFRO'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">353</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param country_code ISO3 country code to filter the data. Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">354</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param select_vars Vector of variables to select from the API response.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">355</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                    If NULL (default), all variables are selected.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">356</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_api_key API key for authentication.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">357</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                        Default is retrieved from the environment variable</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">358</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                        'POLIS_API_KEY'. An explicit API key can be provided</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">359</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                        if required.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">360</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param log_results Logical indicating whether to log the results of the API</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">361</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param log_file_path Path to the directory where the log file will be saved</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">362</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param updated_dates Logical indicating whether to use the 'LastUpdateDate'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">363</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame containing the requested data aggregated from all pages</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">364</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         of the API response. Each row represents a record, and columns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">365</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         correspond to the variables in the dataset.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">366</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">367</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">368</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">369</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data &lt;- get_polis_api_data("2021-01-01", "2021-01-31", "cases", "AFRO")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">370</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">371</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">372</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">373</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">get_polis_api_data &lt;- function(min_date = "2021-01-01",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">374</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               max_date = Sys.Date(),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">375</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               data_type = "cases",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">376</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               region = "AFRO",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">377</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               country_code = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">378</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               select_vars = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">379</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               updated_dates = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">380</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               polis_api_key,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">381</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               log_results = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">382</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               log_file_path) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">383</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">384</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # API Endpoint and URL Construction</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">385</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  api_endpoint &lt;- "https://extranet.who.int/polis/api/v2/"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">386</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  endpoint_suffix &lt;- get_api_date_suffix(data_type)$endpoint_suffix</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">387</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">388</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # set up the dates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">389</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (updated_dates) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">390</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_field &lt;- get_api_date_suffix(data_type)$date_field</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">391</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">392</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_field &lt;- get_api_date_suffix(data_type)$date_fields_initial</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">393</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">394</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">395</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # set up region field</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">396</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (tolower(region) == "global"  || is.null(region)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">397</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    region_field &lt;- NULL</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">398</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">399</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    region_field &lt;- get_api_date_suffix(data_type)$region_field</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">400</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # set up region field name</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">401</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    region_field &lt;- if (data_type == "virus") "RegionName" else "WHORegion"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">402</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">403</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">404</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Construct the full API URL</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">405</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  api_url &lt;- construct_api_url(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">406</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    api_endpoint, endpoint_suffix, min_date, max_date,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">407</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_field, country_code, region_field, region, select_vars</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">408</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">409</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">410</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # all API iteratively</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">411</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  response &lt;- iterative_api_call(api_url, token = polis_api_key)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">412</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">413</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # process API response</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">414</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_data &lt;- process_api_response(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">415</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">416</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # log results</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">417</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (log_results) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">418</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">419</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Check if log file name is provided</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">420</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (is.null(log_file_path)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">421</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      warning("No log file name provided. Logging is disabled.")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">422</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      return(invisible(NULL))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">423</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">424</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">425</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # set up log file name</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">426</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    log_file_name &lt;- paste0(log_file_path, "/", "polis_data_update_log.rds")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">427</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">428</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Construct the log message</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">429</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    log_message &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">430</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Region = tools::toTitleCase(region),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">431</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      QueryStartDate = as.Date(min_date, format = "%Y-%m-%d"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">432</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      QueryEndDate = as.Date(max_date, format = "%Y-%m-%d"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">433</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      DataStartDate = min(as.Date(full_data[[date_field]])),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">434</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      DataEndDate = max(as.Date(full_data[[date_field]])),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">435</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      PolisDataType = as.character(endpoint_suffix),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">436</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      NumberOfVariables = ncol(full_data),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">437</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      NumberOfRows = format(nrow(full_data), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">438</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">439</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">440</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (file.exists(log_file_name)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">441</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      log_data &lt;- readRDS(log_file_name)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">442</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      log_data &lt;- rbind(log_data, log_message)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">443</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">444</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      log_data &lt;- log_message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">445</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">446</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">447</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Save log file</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">448</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    saveRDS(log_data, log_file_name)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">449</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">450</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">451</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">452</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(full_data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">453</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">454</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">455</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Try API Call with Retry Logic</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">456</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">457</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function attempts to make an API call to a specified URL using the GET</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">458</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' method. It includes a retry mechanism, where the request is attempted up to a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">459</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' specified number of times (`max_attempts`) before giving up. If the request</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">460</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' is successful and returns a 200 status code, the response is returned. If any</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">461</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' errors occur or if a non-200 status code is received, the function will wait</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">462</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' for 5 seconds and retry the request. After the maximum number of attempts, if</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">463</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' the request still fails, the function stops with an error message.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">464</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">465</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param url The URL for the API endpoint to which the GET request is made.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">466</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param token The authorization token required for the API request.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">467</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param max_attempts The maximum number of attempts to make the API call.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">468</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        Default is 3 attempts.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">469</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">470</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return The response from the API call if successful, or an error message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">471</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         if all attempts fail.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">472</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">473</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">474</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">475</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' iterative_api_call("https://api.example.com/data", "your_api_token")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">476</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">477</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">478</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">479</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">iterative_api_call &lt;- function(url, token = NULL, max_attempts = 3) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">480</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Configure the initial request</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">481</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  req &lt;- httr2::request(url) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">482</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::req_headers(`authorization-token` = token) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">483</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::req_retry(max_tries = max_attempts) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">484</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::req_progress()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">485</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">486</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Checking that the API call is valid</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">487</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  resp &lt;- req |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">488</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::req_error(is_error = \(resp) FALSE) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">489</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::req_perform()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">490</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">491</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # check status of call</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">492</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  check_status_api(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">493</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::resp_status(resp)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">494</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">495</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">496</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Perform iterative requests with a lambda function for next_req</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">497</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  httr2::req_perform_iterative(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">498</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    req,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">499</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    next_req = \(req, resp) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">500</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      next_link &lt;- httr2::resp_body_json(resp)$odata.nextLink</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">501</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if (is.null(next_link)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">502</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        return(NULL)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">503</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">504</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      req |&gt; httr2::req_url(next_link)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">505</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    },</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">506</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    max_reqs = Inf,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">507</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    progress = list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">508</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      name = "Downloading POLIS pages:",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">509</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      format_done = "POLIS data downloaded :)",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">510</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      clear = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">511</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">512</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">513</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">514</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">515</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Process API Response</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">516</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">517</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function processes the response from an API call. It checks the status</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">518</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' code of the response; if the status code is 200, indicating a successful</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">519</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' response, it parses the content of the response using.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">520</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">521</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param response The response object from an API call made using the `httr2`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">522</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'       package.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">523</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">524</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A `dataframe`, which is the parsed data from the response If the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">525</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         response is unsuccessful, both elements of the list are NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">526</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">527</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">528</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">529</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Example usage within a function that makes API calls:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">530</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' response &lt;- iterative_api_call(api_url, token)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">531</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' processed_response &lt;- process_response(response)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">532</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">533</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">534</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">535</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">process_api_response &lt;- function(response) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">536</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # extract the main data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">537</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  content &lt;- response |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">538</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::resps_successes() |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">539</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    httr2::resps_data(\(resp) httr2::resp_body_json(resp)$value)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">540</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">541</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  dplyr::bind_rows(content)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">542</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">543</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">544</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Save Polis Data to compressed RDS File</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">545</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">546</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function saves a given POLIS data object to an RDS file using a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">547</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' specific naming convention based on the current date. It also manages the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">548</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' retention of only the 5 most recent datasets in the specified directory,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">549</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' removing older datasets if necessary.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">550</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">551</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_data The POLIS data object to be saved.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">552</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_path The directory path where the RDS file will be saved. This</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">553</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   function will check this directory for existing datasets and will maintain</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">554</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   only the 5 most recent datasets, deleting older ones.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">555</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param filname The name of the file to be saved.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">556</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param max_datasets The max number of datasets to retain in the directory.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">557</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">558</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return Invisible NULL. This function is used for its side effect of</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">559</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   saving a file and potentially deleting older files, rather than for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">560</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   returning a value.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">561</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">562</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">563</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Assume `polis_data` is your dataset and `./polis_datasets` is your</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">564</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # target directory</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">565</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # save_polis_data(polis_data, "./polis_datasets")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">566</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">567</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">568</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">569</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">save_polis_data &lt;- function(polis_data, polis_path, filname, max_datasets = 5) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">570</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_process_start("Saving POLIS data into a compressed RDS file.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">571</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">572</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Generate the file name based on the ISO week year and week number</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">573</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suffix_name &lt;- sprintf("_%s_%s.rds",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">574</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         format(Sys.Date(), "%G"), format(Sys.Date(), "%V"))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">575</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  full_path &lt;- file.path(polis_path, paste0(filname, suffix_name))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">576</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">577</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Save POLIS list</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">578</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  saveRDS(polis_data, full_path, compress = "xz")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">579</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">580</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_process_done()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">581</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">582</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check existing datasets and keep only the 5 most recent</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">583</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  existing_files &lt;- list.files(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">584</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    polis_path, pattern = "\\.rds$", full.names = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">585</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">586</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Exclude files that contain 'polis_data_update_log' in the name</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">587</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  existing_files &lt;- grep(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">588</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "polis_data_update_log", existing_files, value = TRUE, invert = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">589</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">590</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Keep only files starting with the specified filname</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">591</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  existing_files &lt;- grep(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">592</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    paste0("^", filname), basename(existing_files), value = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">593</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">594</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(existing_files) &gt; max_datasets) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">595</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Sort files by date, assuming the naming convention holds the date info</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">596</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    file_dates &lt;- sapply(existing_files, function(x) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">597</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(stringr::str_extract(x, "\\d{4}_\\d{2}"), "%G_%V")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">598</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">599</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">600</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    oldest_files &lt;- existing_files[order(file_dates)][1:(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">601</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      length(existing_files) - max_datasets)]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">602</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">603</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">604</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "Removing {length(oldest_files)} old file(s) to keep top {max_datasets}.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">605</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">606</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    suppressMessages(file.remove(file.path(polis_path, oldest_files)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">607</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">608</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_process_done()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">609</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">610</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">611</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Retrieve and Update POLIS Data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">612</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">613</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function is designed for both the initial retrieval and subsequent</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">614</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' updates of POLIS datasets. It intelligently checks for existing data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">615</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' fetches only new data since the last update, integrates this with the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">616</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' existing data, logs update sessions, and saves the updated dataset to a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">617</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' specified location. It interacts with the POLIS API and allows filtering</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">618</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and selection based on various criteria.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">619</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">620</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_date Start date for data retrieval in 'YYYY-MM-DD' format.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">621</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 This date marks the beginning of the dataset to be retrieved.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">622</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param max_date End date for data retrieval, default is the current date.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">623</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                 This date marks the end of the dataset to be retrieved.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">624</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data_type Type of data to retrieve.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">625</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  Supported types include 'cases', 'virus', 'population',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">626</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'env' (Environmental), 'geo' (Geographical), 'geo_synonym',</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">627</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'im' (Independent Monitoring), 'activity', 'sub_activ'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">628</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  (Sub-activities), and 'lqas' (Lot Quality Assurance</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">629</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  Sampling), 'lab_specimen' (Human Specimen),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">630</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  'lab_env' (Environmental Sample), 'lab_specimen_virus'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">631</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  (Human Specimen Viruses). Default is 'cases'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">632</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param region Region code for data filtering, default is 'AFRO'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">633</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'               This parameter filters the data by the specified WHO region.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">634</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param country_code ISO3 country code to filter the data. Default is NULL.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">635</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param select_vars Vector of variables to select, default is NULL (all vars).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">636</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                    This parameter allows for the selection of specific</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">637</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                    variables from the API response.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">638</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param file_path Path for the data and log files, default is a preset</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">639</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  directory. This defines the storage location for data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">640</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                  and logs.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">641</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param save_directly Boolean indicating whether data should be saved directly.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">642</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                      Default is TRUE. If FALSE, the function returns a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">643</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                      data frame of the aggregated data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">644</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param log_results Boolean indicating whether to log update sessions.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">645</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                    Default is TRUE. This controls the logging of updates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">646</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_api_key API key for authentication, default from environment.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">647</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                        This is used for accessing and authenticating with</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">648</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                        the API.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">649</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">650</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return If save_directly is FALSE, returns a data frame of the aggregated</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">651</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         data. Otherwise, the data is saved to the specified file path and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">652</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         nothing is returned.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">653</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">654</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">655</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">656</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' update_polis_api_data("2021-01-01", "2021-01-31", "cases", "AFRO")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">657</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">658</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">659</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">660</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">update_polis_api_data &lt;- function(min_date,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">661</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  max_date = Sys.Date(),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">662</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  data_type = "cases",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">663</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  region = "AFRO",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">664</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  country_code = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">665</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  select_vars = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">666</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  file_path = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">667</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  save_directly = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">668</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  log_results = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">669</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                  polis_api_key = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">670</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">671</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Construct file names for data and log</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">672</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data_file_name &lt;- paste0(file_path, "/", data_type, "_polis_data.rds")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">673</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  log_file_name &lt;- paste0(file_path, "/", "polis_data_update_log.rds")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">674</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">675</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # set up the dates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">676</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_field &lt;- get_api_date_suffix(data_type)$date_field</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">677</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">678</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Load existing data if it exists</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">679</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (file.exists(data_file_name)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">680</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_data &lt;- readRDS(data_file_name)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">681</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    last_date_in_chunk &lt;- as.Date(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">682</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      max(full_data[[date_field]], na.rm = T),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">683</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      format = "%Y-%m-%d"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">684</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">685</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">686</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_data &lt;- data.frame()</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">687</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    last_date_in_chunk &lt;- as.Date(min_date) - 1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">688</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">689</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">690</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Retrieve data from the API starting from the day after the last date in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">691</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # the existing data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">692</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  min_date &lt;- last_date_in_chunk + 1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">693</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">694</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Retrieve data from the API</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">695</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  new_data &lt;- get_polis_api_data(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">696</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    min_date = min_date, max_date = max_date,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">697</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data_type = data_type, region = region, country_code = country_code,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">698</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    select_vars = select_vars, updated_dates = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">699</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    log_results = FALSE, polis_api_key = polis_api_key,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">700</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">701</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">702</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Combine new data with existing data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">703</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (nrow(new_data) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">704</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    full_data &lt;- dplyr::bind_rows(full_data, new_data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">705</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">706</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">707</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Log the session details to an Excel file</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">708</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (nrow(full_data) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">709</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    session_end_date &lt;- min(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">710</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      as.Date(max_date),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">711</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      max(as.Date(full_data[[date_field]],</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">712</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  format = "%Y-%m-%d"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">713</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ), na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">714</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">715</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">716</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (save_directly &amp;&amp; log_results) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">717</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      write_log_file_api(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">718</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        log_file_name, data_type, full_data, new_data, date_field,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">719</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        last_date_in_chunk, min_date, max_date, session_end_date</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">720</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">721</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">722</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">723</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    n_rows &lt;- format(sum(nrow(full_data)), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">724</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">725</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (file.exists(data_file_name) &amp; session_end_date &gt; min_date) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">726</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      n_rows &lt;- format(sum(nrow(full_data)), big.mark = ",")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">727</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">728</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cat(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">729</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Hooray! You have updated the {data_type} ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">730</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "data (N = {n_rows}) from {as.Date(last_date_in_chunk)}",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">731</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " to {session_end_date}.\n"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">732</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">733</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else if (session_end_date &gt; min_date) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">734</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cat(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">735</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Hooray! You have downloaded the complete {data_type} ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">736</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "data (N = {n_rows}) from {as.Date(min_date)} to ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">737</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "{session_end_date}.\n"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">738</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">739</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">740</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">741</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">742</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Save the updated full dataset</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">743</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (save_directly) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">744</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    saveRDS(full_data, data_file_name, compress = "xz")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">745</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">746</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(full_data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">747</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">748</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">749</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">750</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Write Update Log File</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">751</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">752</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function serves as a wrapper for updating a log file. It constructs a</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">753</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' log  message based on the provided parameters and appends it to an existing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">754</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' log file or creates a new one if it doesn't exist. The function ensures that</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">755</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' date-timecolumns are correctly formatted and removes duplicate entries before</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">756</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' saving the file.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">757</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">758</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param log_file_name The name (and path) of the log file to be updated.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">759</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data_type The type of data being logged.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">760</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param full_data A data frame representing the full dataset being processed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">761</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param new_data A data frame representing the new data being added.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">762</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_field The name of the date field in the full_data and new_data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">763</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        data frames.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">764</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param last_date_in_chunk The last date in the current data chunk being</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">765</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        processed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">766</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param min_date The earliest date in the data being processed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">767</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param max_date The latest date in the data being processed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">768</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param session_end_date The end date of the current session.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">769</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">770</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details The function checks for the existence of the log file. If the file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">771</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'          exists, it appends the new log message. If not, it creates a new log</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">772</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'          file. The function constructs the log message from the given</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">773</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'          parameters, including data types and date ranges. It also handles</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">774</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'          the conversion of specific columns to date format and ensures that</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">775</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'          duplicate entries are removed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">776</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">777</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">778</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \dontrun{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">779</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' new_log_message &lt;- data.frame(...) # example log message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">780</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' write_log_file_api(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">781</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   "api_log.csv", "myDataType", fullData, newData, "dateCol",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">782</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   "2023-01-01", "2023-01-01", "2023-01-10", "2023-01-10"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">783</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">784</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">785</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">786</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">787</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">write_log_file_api &lt;- function(log_file_name,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">788</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               data_type,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">789</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               full_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">790</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               new_data,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">791</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               date_field,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">792</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               last_date_in_chunk,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">793</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               min_date,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">794</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               max_date,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">795</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               session_end_date) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">796</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Construct the log message</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">797</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  log_message &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">798</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    UpdateDate = as.Date(Sys.Date(), "%Y-%m-%d"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">799</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    UpdateTime = format(Sys.time(), "%H:%M:%S %Z"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">800</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    OverallStartDate = min(as.Date(full_data[[date_field]],</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">801</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                   format = "%Y-%m-%d"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">802</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ), na.rm = TRUE),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">803</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    SessionStartDate = as.Date(min_date, format = "%Y-%m-%d"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">804</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    SessionEndDate = as.Date(session_end_date, format = "%Y-%m-%d"),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">805</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    DataType = as.character(data_type),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">806</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    NewRowsAdded = format(nrow(new_data), big.mark = ","),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">807</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stringsAsFactors = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">808</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">809</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">810</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Append or create log file</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">811</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (file.exists(log_file_name)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">812</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    log_data &lt;- readRDS(log_file_name)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">813</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    log_data &lt;- rbind(log_data, log_message)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">814</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">815</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    log_data &lt;- log_message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">816</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">817</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">818</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Convert date-time columns</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">819</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  date_cols &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">820</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "UpdateDate", "OverallStartDate",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">821</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "SessionStartDate", "SessionEndDate"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">822</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">823</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  log_data &lt;- log_data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">824</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">825</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::across(tidyselect::all_of(date_cols), as.Date)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">826</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">827</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::distinct(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">828</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dplyr::across(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">829</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        tidyselect::all_of(c(date_cols, "NewRowsAdded"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">830</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">831</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      .keep_all = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">832</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">833</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">834</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Save log file</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">835</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  saveRDS(log_data, log_file_name)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">836</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">837</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">838</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">839</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">840</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">841</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/prep_detections.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Get virus detections from data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing virus detection data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param virus_types A vector of virus types to filter</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A character vector of detection counts by virus type</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">get_detections &lt;- function(data, virus_types) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">7</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    detections &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">9</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    for (virus in virus_types) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">10</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        count &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">11</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            dplyr::filter(VirusTypeName == virus) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">12</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            dplyr::pull(Detections)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">14</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (length(count) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">15</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            detections[[virus]] &lt;- paste(count, virus)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">19</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    unlist(detections)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Format Date with Ordinal Day</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function converts a date column to a string with an ordinal day</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' (e.g., "1st", "2nd", "3rd") followed by the abbreviated month name and year.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_column A Date vector or a character vector that can be coerced</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   to Date. The dates to be formatted.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A character vector representing the formatted dates with ordinal day,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   abbreviated month, and year (e.g., "2nd Jan 2020").</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' format_date_ord(as.Date("2020-01-02")) # Returns "2nd Jan 2020"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' format_date_ord(c("2023-03-21", "2023-04-11"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Returns c("21st Mar 2023", "11th Apr 2023")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function handles special cases for 11th, 12th, and 13th, which always</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' use "th" as the ordinal suffix regardless of their ones digit.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @seealso \code{\link{as.Date}}, \code{\link{format}}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">format_date_ord &lt;- function(date_column) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">13<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    date_column &lt;- as.Date(date_column)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">47</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    day &lt;- as.integer(format(date_column, "%d"))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">48</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    month &lt;- format(date_column, "%b")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    year &lt;- format(date_column, "%Y")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">51</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ordinal_suffix &lt;- function(day) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">52</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        suffix &lt;- rep("th", length(day))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">53</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        suffix[day %% 10 == 1 &amp; day %% 100 != 11] &lt;- "st"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">54</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        suffix[day %% 10 == 2 &amp; day %% 100 != 12] &lt;- "nd"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">55</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        suffix[day %% 10 == 3 &amp; day %% 100 != 13] &lt;- "rd"</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">56</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        suffix</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">59</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    paste0(day, ordinal_suffix(day), " ", month, " ", year)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Prepare New Detections Table</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function creates a summary table of poliovirus detections, comparing old</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and new data, and optionally includes information about Supplementary</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Immunization Activities (SIA).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_df_old A data frame containing the old POLIS data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">68</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_df_new A data frame containing the new POLIS data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">69</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param polis_sia A data frame containing SIA data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param include_sia Logical, whether to include SIA information in the output</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">71</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   table. Default is TRUE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">72</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param save_table Logical, whether to save the table as an image file.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">73</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Default is FALSE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">74</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param output_path Character string specifying the directory to save the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">75</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   output file. If NULL, uses the current working directory.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">76</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vheight Numeric, the height of the output image in pixels. Default is</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">77</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   800.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">78</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param vwidth Numeric, the width of the output image in pixels. Default is</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   3260.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">80</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">81</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A gt table object containing the summary of poliovirus detections.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function performs the following main steps:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 1. Checks for required packages and loads them if necessary.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">86</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 2. Processes the old POLIS data to get previous detection dates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">87</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 3. Filters and processes the new POLIS data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 4. Combines and summarizes the data, including calculations for various</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">89</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'    metrics.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">90</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 5. Joins with SIA data if include_sia is TRUE.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">91</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 6. Creates a formatted gt table with conditional styling.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">92</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' 7. Optionally saves the table as an HTML and PNG file.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">93</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">94</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @note</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">95</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - The function uses various dplyr, tidyr, and gt functions for data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">96</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   manipulation and table creation.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">97</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - It applies conditional formatting to highlight new emergences, delayed</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">98</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   reporting, and other important information.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">99</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - If save_table is TRUE, it saves the table as both HTML and PNG files, then</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">100</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   deletes the HTML file.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">101</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">102</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">103</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Basic usage:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">104</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # result_table &lt;- prep_new_detections_table(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">105</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   polis_df_old, polis_df_new,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">106</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   polis_sia</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">107</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">108</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">109</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">111</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">prep_new_detections_table &lt;- function(polis_df_old,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      polis_df_new,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">113</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      polis_sia,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">114</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      include_sia = TRUE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">115</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      save_table = FALSE,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">116</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      output_path = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">117</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      vheight = 800,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                      vwidth = 3260) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">119</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Conditional loading for packages</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">120</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    required_packages &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">121</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "gt", "glue", "stringr", "webshot"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">122</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">123</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">124</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    missing_packages &lt;- required_packages[!sapply(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">125</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        required_packages, requireNamespace,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">126</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        quietly = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">127</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">129</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">130</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    prev_detection &lt;- polis_df_old |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">131</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(across(where(is.factor), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">132</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">133</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            VirusTypeName = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">134</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                VirusTypeName == "WILD1", "WPV1", VirusTypeName</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">135</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">136</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">137</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">138</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            stringr::str_detect(VirusTypeName, "^WPV|^VDPV|^cVDPV") &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">139</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                SurveillanceTypeName %in% c("AFP", "Environmental")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">140</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">141</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(VirusDate = as.Date(VirusDate)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">142</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::group_by(Admin0Name, VirusTypeName) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">143</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::reframe(`Previous Detection` = max(VirusDate))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">144</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">145</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">146</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">147</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # get max date for old and new data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">148</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    polis_old_maxdate &lt;- max(as.Date(polis_df_old$UpdatedDate))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">149</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    polis_new_maxdate &lt;- max(as.Date(polis_df_new$UpdatedDate))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">150</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">151</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    res &lt;- polis_df_new |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">152</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">153</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            year = lubridate::year(as.Date(VirusDate))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">154</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">155</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::filter(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">156</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            year &gt; lubridate::year(Sys.Date()) - 3 &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">157</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                !EPID %in% unique(polis_df_old$EPID),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">158</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            stringr::str_detect(VirusTypeName, "^WILD|^VDPV|^cVDPV"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">159</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            SurveillanceTypeName %in% c("AFP", "Environmental")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">160</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">161</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(dplyr::across(where(is.factor), as.character)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">162</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">163</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            # BaseVdpvEmergenceGroup = sub("-\\d+$", "", VdpvEmergenceGroupName),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">164</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            BaseVdpvEmergenceGroup = VdpvEmergenceGroupName,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">165</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            VdpvClassificationChangeDate = as.Date(VdpvClassificationChangeDate),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">166</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            VdpvReportedToHQDate = as.Date(VdpvReportedToHQDate),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">167</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            VirusDate = as.Date(VirusDate),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">168</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            VirusTypeName = ifelse(VirusTypeName == "WILD1", "WPV1", VirusTypeName),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">169</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            year = lubridate::year(VirusDate)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">170</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">171</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">172</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">173</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data &lt;-   res |&gt; </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">174</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::group_by(Admin0Name, VirusTypeName) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">175</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(MostRecentVirusDate = max(VirusDate, na.rm = TRUE)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">176</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::group_by(Admin0Name, VirusTypeName, year) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">177</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::summarise(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">178</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            Detections = dplyr::n(),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">179</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            MostRecentVirusDate = dplyr::first(MostRecentVirusDate),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">180</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            .groups = "drop"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">181</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">182</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        tidyr::pivot_wider(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">183</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            names_from = year,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">184</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            values_from = Detections,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">185</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            names_glue = "{year} Detections",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">186</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            values_fill = 0</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">187</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">188</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">189</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            MostRecentVirusDate = format(MostRecentVirusDate, "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">190</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">191</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::left_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">192</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            prev_detection,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">193</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            by = c("Admin0Name", "VirusTypeName")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">194</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">195</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">196</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            Country = Admin0Name,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">197</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            Virus = VirusTypeName,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">198</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            dplyr::ends_with("Detections"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">199</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Most Recent Detection` = MostRecentVirusDate,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">200</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Previous Detection`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">201</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">202</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::left_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">203</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            res |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">204</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">205</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Ntchanges = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">206</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        is.na(VdpvNtChangesClosestMatch),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">207</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        VdpvNtChangesFromSabin,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">208</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        VdpvNtChangesClosestMatch</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">209</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">210</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Ntchanges = as.numeric(Ntchanges),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">211</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    VdpvNtChangesClosestMatch = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">212</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        is.na(VdpvNtChangesClosestMatch),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">213</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        paste0(VdpvNtChangesFromSabin, "**"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">214</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        VdpvNtChangesClosestMatch</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">215</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    ),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">216</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">217</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::arrange(dplyr::desc(VirusDate)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">218</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::group_by(Admin0Name, VirusTypeName) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">219</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::slice(1) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">220</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::ungroup() |&gt; </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">221</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">222</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Country = Admin0Name,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">223</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Virus = VirusTypeName,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">224</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Emergence Group` = BaseVdpvEmergenceGroup,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">225</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `VDPV Classification Change Date` = VdpvClassificationChangeDate,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">226</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Virus Reported to HQ Date` = VdpvReportedToHQDate,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">227</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Nt Changes from Closest Match` = VdpvNtChangesClosestMatch,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">228</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Ntchanges,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">229</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Vaccine Origin` = VaccineOrigin</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">230</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">231</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            by = c("Country", "Virus")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">232</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">233</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">234</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Most Recent Detection` = as.Date(`Most Recent Detection`),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">235</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Detections to Confirmation (days)` = </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">236</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Virus Reported to HQ Date` - `Most Recent Detection`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">237</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Delayed Reporting` = </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">238</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ifelse(`Detections to Confirmation (days)` &gt; 90, TRUE, FALSE),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">239</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `New Emergence` = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">240</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                Virus %in% c("cVDPV1", "cVDPV2") &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">241</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    !`Emergence Group` %in% unique(polis_df_old$VdpvEmergenceGroupName),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">242</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                TRUE, FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">243</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">244</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">245</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">246</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `New VDPV Classification` = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">247</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                Virus %in% c("cVDPV1", "cVDPV2") &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">248</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `VDPV Classification Change Date` &gt; polis_old_maxdate &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">249</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `VDPV Classification Change Date` &lt;= polis_new_maxdate,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">250</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                TRUE, FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">251</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">252</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">253</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::relocate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">254</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Nt Changes from Closest Match`, </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">255</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Vaccine Origin`, </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">256</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            .after = dplyr::last_col()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">257</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">258</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        as.data.frame() |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">259</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::left_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">260</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            polis_sia |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">261</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::filter(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">262</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Admin0Name %in% res$Admin0Name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">263</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">264</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::filter(ActivityStatus %in% c("Done")) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">265</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">266</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    ActivityDateFrom = as.Date(ActivityDateFrom)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">267</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">268</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::arrange(dplyr::desc(ActivityDateFrom)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">269</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::group_by(Admin0Name) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">270</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::slice(1) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">271</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::ungroup() |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">272</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">273</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    Country = Admin0Name,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">274</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Vaccine Type` = ActivityVaccineType,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">275</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Date of Any Last SIA Campagin` = ActivityDateFrom</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">276</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">277</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            by = "Country"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">278</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">279</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">280</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days Since SIA and Detection` = </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">281</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Most Recent Detection` - `Date of Any Last SIA Campagin`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">282</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days between Previous and Most Recent Detection` = </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">283</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Most Recent Detection` - `Previous Detection`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">284</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days between Previous and Most Recent Detection` = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">285</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                !is.na(`Days between Previous and Most Recent Detection`) &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">286</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Days between Previous and Most Recent Detection` &lt; 0,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">287</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                paste0(`Days between Previous and Most Recent Detection`, "*"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">288</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Days between Previous and Most Recent Detection`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">289</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">290</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days between Previous and Most Recent Detection` = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">291</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                is.na(`Days between Previous and Most Recent Detection`),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">292</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">293</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Days between Previous and Most Recent Detection`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">294</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">295</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Most Recent Detection` = poliprep::format_date_ord(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">296</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Most Recent Detection`),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">297</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Previous Detection` = poliprep::format_date_ord(`Previous Detection`),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">298</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Date of Any Last SIA Campagin` = </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">299</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                poliprep::format_date_ord(`Date of Any Last SIA Campagin`),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">300</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Previous Detection` = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">301</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Previous Detection` == "NAth NA NA",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">302</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "", `Previous Detection`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">303</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">304</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Emergence Group` = ifelse(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">305</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                is.na(`Emergence Group`), </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">306</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "No Classification Given Yet", </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">307</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                `Emergence Group`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">308</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">309</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Vaccine Origin` = ifelse(is.na(`Vaccine Origin`), "", `Vaccine Origin`),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">310</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            Country = stringr::str_to_title(Country)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">311</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">312</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::select(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">313</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            Country,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">314</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Virus` = Virus,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">315</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            dplyr::ends_with("Detections"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">316</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Emergence Group` = `Emergence Group`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">317</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `New Emergence`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">318</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Latest Detection` = `Most Recent Detection`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">319</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Prior Detection` = `Previous Detection`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">320</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days Between` = `Days between Previous and Most Recent Detection`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">321</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days to Confirm` = `Detections to Confirmation (days)`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">322</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Delayed Report` = `Delayed Reporting`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">323</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Nt Changes` = `Nt Changes from Closest Match`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">324</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `New VDPV Class` = `New VDPV Classification`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">325</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Vaccine Origin`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">326</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Last SIA Date` = `Date of Any Last SIA Campagin`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">327</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Days Since SIA` = `Days Since SIA and Detection`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">328</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            `Vaccine Type`, Ntchanges</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">329</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">330</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">331</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    gt_table &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">332</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::gt() |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">333</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">334</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            style = list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">335</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                gt::cell_fill(color = "#de2d26"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">336</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                gt::cell_text(color = "white")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">337</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">338</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            locations = gt::cells_body(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">339</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                columns = `Emergence Group`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">340</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                rows = `New Emergence` == TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">341</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">342</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">343</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_spanner(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">344</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            label = "Previous Campaigns",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">345</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            columns = c(`Last SIA Date`, `Vaccine Type`)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">346</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">347</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_spanner(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">348</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            label = "Virus Information",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">349</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            columns = c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">350</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Virus",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">351</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                dplyr::ends_with("Detections"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">352</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Emergence Group"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">353</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">354</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">355</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_spanner(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">356</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            label = "Virus History",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">357</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            columns = c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">358</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Days to Confirm",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">359</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Latest Detection", "Prior Detection",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">360</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Days Between",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">361</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Nt Changes", "Vaccine Origin"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">362</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">363</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">364</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">365</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            style = list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">366</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                gt::cell_fill(color = "#fee0d2")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">367</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">368</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            locations = gt::cells_body(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">369</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                columns = `Days to Confirm`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">370</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                rows = `Delayed Report` == TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">371</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">372</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">373</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">374</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            style = list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">375</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                gt::cell_fill(color = "#deebf7")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">376</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">377</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            locations = gt::cells_body(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">378</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                columns = `Virus`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">379</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                rows = `New VDPV Class` == TRUE &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">380</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    `Virus` != "WPV1"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">381</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">382</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">383</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">384</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            style = list(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">385</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                gt::cell_fill(color = "#efedf5")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">386</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">387</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            locations = gt::cells_body(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">388</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                columns = `Nt Changes`,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">389</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                rows = Ntchanges &gt; 11</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">390</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">391</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">392</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::cols_hide(columns = c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">393</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Ntchanges", "New VDPV Class", "Delayed Report",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">394</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "New Emergence", "Days Since SIA"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">395</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">396</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_footnote(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">397</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            footnote = gt::md(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">398</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Latest Detection: Latest reported to HQ this week; may not be newest  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">399</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        virus detection in country&lt;br&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">400</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        Prior Detection: Last detection of this virus type in the country  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">401</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        before current reporting week&lt;br&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">402</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        * Due to lab delay, virus may have been detected earlier and not  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">403</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        reported until this week&lt;br&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">404</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ** If VDPV and no Nt Changes from Closest Match, Nt Changes from Sabin </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">405</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        is used."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">406</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">407</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">408</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_style(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">409</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            style = gt::cell_text(weight = "bold"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">410</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            locations = gt::cells_column_spanners(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">411</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                spanners = dplyr::everything()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">412</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">413</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">414</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_source_note(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">415</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            gt::html(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">416</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;pre style="display: inline;font-family: Avenir, Verdana, ', </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">417</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                'sans-serif; font-size: 15px"&gt;',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">418</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;span style="background-color: #deebf7;"&gt;       ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">419</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ' &lt;/span&gt; = New linkage to ongoing outbreak&lt;/pre&gt;   ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">420</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;pre style="display: inline;font-family: Avenir, ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">421</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                'Verdana, sans-serif; font-size: 15px"&gt;',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">422</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;span style="background-color: #de2d26;"&gt;      ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">423</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '  &lt;/span&gt; = New Emergence&lt;/pre&gt;   ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">424</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;pre style="display: inline;font-family: Avenir, ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">425</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ' Verdana, sans-serif; font-size: 15px"&gt;',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">426</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;span style="background-color: #fee0d2;"&gt;       ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">427</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ' &lt;/span&gt; = Days to Confirm &gt; 90&lt;/pre&gt;  ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">428</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;pre style="display: inline;font-family: Avenir, ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">429</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                'Verdana, sans-serif; font-size: 15px"&gt;',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">430</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                '&lt;span style="background-color: #efedf5;"&gt;       ',</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">431</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                ' &lt;/span&gt; = Nt Changes &gt; 11&lt;/pre&gt;  '</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">432</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">433</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">434</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_header(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">435</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            title = "Poliovirus Detections Summary",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">436</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            subtitle = glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">437</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "Confirmed detections between ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">438</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "{poliprep::format_date_ord(polis_old_maxdate)} and ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">439</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                "{poliprep::format_date_ord(polis_new_maxdate)}"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">440</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">441</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">442</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt::tab_options(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">443</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            table.font.size = gt::px(24),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">444</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            table.width = gt::pct(100)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">445</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">446</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">447</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!include_sia) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">448</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt_table &lt;- gt_table |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">449</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            gt::cols_hide(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">450</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                columns = c("Last SIA Date", "Vaccine Type")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">451</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">452</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">453</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">454</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (save_table) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">455</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if (is.null(output_path)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">456</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            output_path &lt;- getwd()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">457</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">458</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">459</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        today &lt;- format(Sys.Date(), "%Y%m%d")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">460</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        file_prefix &lt;- glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">461</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "poliovirus_detections_summary_{today}"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">462</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">463</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">464</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        html_path &lt;- file.path(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">465</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            output_path, glue::glue("{file_prefix}.html")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">466</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">467</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        png_path &lt;- file.path(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">468</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            output_path, glue::glue("{file_prefix}.png")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">469</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">470</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">471</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        gt_table |&gt; gt::gtsave(html_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">472</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">473</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        webshot::webshot(html_path,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">474</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         png_path,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">475</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                         vheight = vheight, vwidth = vwidth</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">476</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">477</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">478</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        file.remove(html_path)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">479</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">480</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">481</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(gt_table)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">482</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/setup.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Package Initialization and Dependency Check</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @description</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function checks for suggested packages and prompts the user to install</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' any missing ones that are needed for full functionality. It handles both</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' CRAN and GitHub packages.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param libname The library name where the package is installed (not used)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param pkgname The name of the package being loaded (not used)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function maintains a predefined list of suggested packages and checks if</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' they are installed. For missing packages, it prompts the user for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' installation in interactive sessions. Special handling is included for</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' GitHub packages like esri2sf'.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The function uses 'cli' for user communication and handles errors gracefully</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' during installation attempts. In non-interactive sessions, it skips</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' installation and returns with a warning.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Returns NULL invisibly. The function's main effects are:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \itemize{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Checking for missing suggested packages</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Displaying missing packages to user</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Installing packages if user agrees</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   \item Providing feedback on installation success/failure</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @note</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Function requires an interactive session for package installation</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Some functionality may be limited if suggested packages are not installed</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' - Installation errors are caught and reported but don't stop execution</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @keywords internal</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">install_suggested_packages &lt;- function(libname = NULL, pkgname = NULL) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">38</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  suggested_pkgs &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">39</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "testthat", "progressr", "janitor",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">40</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "withr", "stringdist", "crayon", "glue",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">41</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "stringi", "httpcode", "yaml", "scales",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">42</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "webshot", "gt", "parzer", "readr",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">43</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "zoo", "epoxy", "officer", "ggplot2",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">44</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "progress", "filelock", "lifecycle", "here"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">47</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_pkgs &lt;- suggested_pkgs[!(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">48</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    suggested_pkgs %in% utils::installed.packages()[, "Package"])]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">50</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_pkgs) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">51</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_h2("Package Installation Required")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">52</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_text("The following packages are missing:")</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">53</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_ol(paste0("{.pkg ", missing_pkgs, "}"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Handle non-interactive sessions</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">56</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!interactive()) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">57</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">58</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Non-interactive session detected. Skipping package installation."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">60</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      return(invisible(NULL))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Prompt user for installation</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">64</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    user_choice &lt;- readline(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">65</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      prompt = cli::col_blue(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">66</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Do you want to install all missing packages? (y/n): "</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">68</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">69</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">70</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (tolower(user_choice) == "y") {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">71</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Installing missing packages...")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">72</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">73</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # Ensure remotes is installed</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">74</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if (!requireNamespace("remotes", quietly = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">75</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">76</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          utils::install.packages("remotes", quiet = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">77</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }, error = function(e) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">78</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          cli::cli_alert_danger(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">79</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Failed to install 'remotes'. Error: ", e$message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">80</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">81</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          invisible(NULL)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # Install CRAN packages</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">86</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cran_pkgs &lt;- missing_pkgs[missing_pkgs != "optout"]</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">87</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if (length(cran_pkgs) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">88</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        for (pkg in cran_pkgs) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">89</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">90</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            utils::install.packages(pkg, quiet = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">91</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          }, error = function(e) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">92</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            cli::cli_alert_danger(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">93</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">              "Failed to install package: ", pkg,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">94</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">              ". Error: ", e$message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">95</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">            ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">96</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">97</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">98</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">99</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">100</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # Install GitHub packages</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">101</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if ("esri2sf" %in% missing_pkgs) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">102</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">103</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          remotes::install_github("coolbutuseless/optout", quiet = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">104</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }, error = function(e) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">105</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          cli::cli_alert_danger(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">106</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "Failed to install GitHub package 'optout'. Error: ", e$message</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">107</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">108</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">109</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">110</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">111</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success("Installation of all packages complete.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">112</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">113</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">114</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Skipping installation of packages. ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">115</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Some functionality might be limited."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">116</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">117</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">118</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">119</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_success("All suggested packages are already installed.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">120</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">121</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">122</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  invisible(NULL)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">123</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">124</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">125</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Create a Standardized Project Folder Structure</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">126</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">127</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function creates a standardized folder structure for organizing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">128</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data, scripts, and outputs within a project directory. It ensures</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">129</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' consistency and reproducibility for data-related workflows.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">130</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">131</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param base_path A character string specifying the root directory where</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">132</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   the folder structure will be created. Defaults to `here::here()`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">133</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   to use the current project directory.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">134</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">135</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return Creates directories under the specified `base_path`. Returns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">136</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   invisible `NULL` and prints messages about folder creation status.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">137</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">138</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @details The function generates the following folder structure:</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">139</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \preformatted{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">140</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # 01_data/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">141</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # ├── processed/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">142</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # ├── raw/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">143</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # 02_scripts/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">144</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # 03_outputs/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">145</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # ├── 3a_visualizations/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">146</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # ├── 3b_tables/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">147</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # ├── 3c_powerpoint_slides/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">148</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # └── 3d_model_outputs/</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">149</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">150</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">151</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">152</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Create the project folder structure in the current directory</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">153</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # create_project_structure()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">154</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">155</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Create the folder structure in a specific directory</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">156</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # create_project_structure(base_path = "~/my_project")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">157</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">158</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">159</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">init_folders &lt;- function(base_path = here::here()) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">160</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">161</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Conditional loading for packages</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">162</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  required_packages &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">163</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "here"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">164</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">165</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">166</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  missing_packages &lt;- required_packages[!sapply(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">167</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    required_packages, requireNamespace,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">168</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    quietly = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">169</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">170</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">171</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (length(missing_packages) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">172</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">173</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">174</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Package(s) ", paste(missing_packages, collapse = ", "),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">175</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        " required but not installed. Please install them."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">176</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">177</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      call. = FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">178</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">179</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">180</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">181</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Define relative directories</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">182</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  relative_dirs &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">183</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "01_data/processed",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">184</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "01_data/raw",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">185</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "02_scripts",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">186</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "03_outputs/3a_visualizations",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">187</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "03_outputs/3b_tables",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">188</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "03_outputs/3c_powerpoint_slides",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">189</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "03_outputs/3d_model_outputs"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">190</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">191</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">192</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Construct full paths and create directories</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">193</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (relative_dir in relative_dirs) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">194</td>
                    <td class="coverage">35<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dir_path &lt;- normalizePath(file.path(base_path, relative_dir),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">195</td>
                    <td class="coverage">35<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                              winslash = "/", mustWork = FALSE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">196</td>
                    <td class="coverage">35<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!dir.exists(dir_path)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">197</td>
                    <td class="coverage">27<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dir.create(dir_path, recursive = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">198</td>
                    <td class="coverage">27<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_info("Created: {dir_path}")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">199</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">200</td>
                    <td class="coverage">8<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning("Exists: {dir_path}")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">201</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">202</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">203</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">204</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_alert_success("Folder structure created successfully.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">205</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/save.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Save Data and Shapefiles to Various File Formats</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function provides a unified interface for saving data to various</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' file formats supported by the \code{\link[=rio]{rio::export()}}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' function. The format is automatically detected from the file extension to</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' simplify the saving process.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data The dataset to be saved</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param file_path Character string specifying the path to the output file.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ... Additional arguments to be passed to the underlying write</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   functions. These arguments are specific to the file format being saved.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Please refer to the documentation of each package used for more</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   information.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return No return value, called for side effects.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @seealso \code{\link[=rio]{rio::import()}} and </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         \code{\link[=sf]{sf::read_sf()}},  which this function is based on.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Create temporary account</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' tmpdir &lt;- tempfile()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' dir.create(tmpdir)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Save a CSV file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' save(mtcars, file_path = file.path(tmpdir, "file.csv"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Save an Excel file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' save(mtcars, file_path = file.path(tmpdir, "file.xlsx"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Save a Stata DTA file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' save(mtcars, file_path = file.path(tmpdir, "file.dta"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Save an RDS file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #save(mtcars, file_path = file.path(tmpdir, "file.rds"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Save an RData file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' save(list(mtcars = mtcars, iris = iris),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        file_path = file.path(tmpdir, "file.RData"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # For saving shapefiles </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # make example shape data</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' my_shp &lt;-  sf::st_sfc(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   sf::st_point(c(43, 23))) |&gt; </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     cbind(mtcars[1, ]) |&gt; </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'     sf::st_as_sf(crs = sf::st_crs(4326))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # save an RDS file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # save(my_shp, file_path = file.path(tmpdir, "file.shp"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Remove the temporary directory and its contents</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' unlink(tmpdir, recursive = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom rio import</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom rio install_formats</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom tools file_ext</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">save &lt;- function(data, file_path, ...) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Extract the file extension from the input file path</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">62</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  file_ext &lt;- tools::file_ext(file_path) |&gt; tolower()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # List of supported formats</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">65</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  supported_formats_rio &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">66</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "csv", "tsv", "xlsx", "rdata", "dta"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">68</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">69</td>
                    <td class="coverage">9<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (file_ext %in% supported_formats_rio) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">70</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    rio::export(data, file_path, ...)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">71</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else if (file_ext %in% "rds") {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">72</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">73</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    con = archive::file_write(file = file_path, filter = "xz")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    open(con)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    saveRDS(data, con)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">76</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    close(con)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">77</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">78</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else if (file_ext %in% "shp") { # shp shapefiles</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">79</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sf::write_sf(data, file_path, ...)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else if (file_ext %in% c("json", "geojson")) { # json shapefiles</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">81</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sf::write_sf(data, file_path, driver = "GeoJSON", ...) </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">83</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">84</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">85</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "File format '", file_ext, "' not supported by 'rio'.",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">86</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Please refer to the package documentation for a full list",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">87</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "of supported formats."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">89</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">90</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">91</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/read.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Read in Data and Shapefiles from Various File Formats</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function provides a unified interface for reading data from various</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' file formats supported by the \code{\link[=rio]{rio}} and </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' \code{\link[=sf]{sf}} package. The format is automatically detected from the </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' file extension to simplify the importing process.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param file_path Character string specifying the path to the input file or</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   a URL pointing to the dataset.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ... Additional arguments to be passed to the underlying read</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   functions. These arguments are specific to the file format being imported.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   Please refer to the documentation of each package used for more</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   information.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame or appropriate R object containing the imported data.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Locate test data directory</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' path &lt;-  system.file("extdata",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                      package = "poliprep")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Import a CSV file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_csv &lt;- read(file_path = file.path(path, "test_data.csv"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Import an Excel file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_excel &lt;- read(file_path = file.path(path, "test_data.xlsx"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Import a Stata DTA file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_dta &lt;- read(file_path = file.path(path, "test_data.dta"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Import an RDS file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_rds &lt;- read(file_path = file.path(path, "test_data.rds"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_rdata &lt;- read(file_path = file.path(path, "test_data.RData"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Import an SPSS file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_spss &lt;- read(file_path = file.path(path, "test_data.sav"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Import an shapefiles file (GeoJSON/json)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data_geojson &lt;- read(file_path = file.path(path, "test_data.GeoJSON"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @seealso \code{\link[=rio]{rio::import()}} and </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         \code{\link[=sf]{sf::read_sf()}},  which this function is based on.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom rio import</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom sf read_sf</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @importFrom tools file_ext</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">read &lt;- function(file_path, ...) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check if the input file path is a URL and if so, read from URL directly</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">53</td>
                    <td class="coverage">11<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (grepl("^http[s]?://", file_path, ignore.case = TRUE)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">54</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(rio::import(file_path, ...))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Extract the file extension from the input file path</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">58</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  file_ext &lt;- tools::file_ext(file_path) |&gt;  tolower()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # List of supported formats</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">61</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  supported_formats_rio &lt;- c(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">62</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "csv", "tsv", "txt", "csvy", "sas7bdat", "sav",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">63</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    "dta", "xpt", "rdata", "xlsx", "tsv"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # If the file extension is unsupported</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">67</td>
                    <td class="coverage">10<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (file_ext %in% supported_formats_rio) {  # for tabular data</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">68</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    rio::import(file_path, ...)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">69</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else if (file_ext  == "rds") {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">71</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      con &lt;- archive::file_read(file_path)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">72</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      res &lt;- readRDS(con)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">73</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      close(con)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      res</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">75</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">76</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else if (file_ext %in% c("shp", "json", "geojson")) { # for shapefiles</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">77</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sf::read_sf(file_path, ...)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">78</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">79</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      paste0(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">81</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "File format '", file_ext, "' not supported by 'rio' and 'sf'. ",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">82</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "Please refer to the package documentation for a full list",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">83</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "of supported formats."</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">86</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">87</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/find_nearest_coord.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Find Nearest Coordinate from shapefile Dataset</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function takes a pair of coordinates (longitude and latitude) and finds</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' the nearest coordinate from the `shp_global` dataset.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' The shapefile dataset should contain longitude and latitude information</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' with columns named `CENTER_LON` and `CENTER_LAT`. The function calculates the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' distance between the target point and all points in the dataset, returning</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' the nearest coordinate.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lon Numeric. Longitude of the target point.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param lat Numeric. Latitude of the target point.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param shapefile An optional `sf` object containing the shapefile data. </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'      Defaults to `poliprep::shp_global`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param level_to_return The admin level to return.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A vector of admin level names containing the nearest coordinate from</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   the provided shapefile.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Example usage</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Assuming `poliprep::shp_global` is already loaded in the environment</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # nearest_coord &lt;- find_nearest_coord(15.28172, -4.271301)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # print(nearest_coord)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Define the function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">find_nearest_coord &lt;- function(lon, lat, </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               shapefile = NULL, </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                               level_to_return = "adm2") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">28</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(shapefile)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">29</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    shapefile &lt;- poliprep::shp_global</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">32</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  shapefile_prepared &lt;- shapefile |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">33</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::filter(ENDDATE &gt; as.Date("9900-12-31")) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">34</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::rename(adm0 = ADM0_NAME, </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">35</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  adm1 = ADM1_NAME, </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">36</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  lon = CENTER_LON,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">37</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  lat = CENTER_LAT,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">38</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  adm2 = ADM2_NAME) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">39</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(lon = as.numeric(lon), </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">40</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  lat = as.numeric(lat)) |&gt; </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">41</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">43</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  target_points &lt;- sf::st_as_sf(data.frame(lon = lon, lat = lat), </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">44</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                coords = c("lon", "lat"), crs = 4326)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  nearest_indices &lt;- sf::st_nearest_feature(target_points, shapefile_prepared)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">47</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  nearest_coords &lt;- shapefile_prepared[nearest_indices, ][[level_to_return]]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(nearest_coords)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/prep_match_datatypes.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Match Data Types Between Dataframes</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function aligns the data types of columns in the target dataframe</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' to match those in the reference dataframe. It ensures consistency in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data types across dataframes, facilitating accurate data analysis and</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' manipulation.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ref_dataframe A dataframe serving as the reference for data types.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param target_dataframe A dataframe whose columns' data types will be</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        modified to match those of `ref_dataframe`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A modified copy of `target_dataframe` with data types aligned</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         to those of `ref_dataframe`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' ref_df &lt;- tibble::tibble(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   integer_col = 1:3,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   character_col = c("a", "b", "c"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   numeric_col = c(1.1, 2.2, 3.3)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' target_df &lt;- tibble::tibble(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   integer_col = c("1", "2", "3"), # should be integer</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   character_col = 1:3, # should be character</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   numeric_col = c("1.1", "2.2", "3.3") # should be numeric</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' matched_df &lt;- prep_match_datatypes(ref_df, target_df)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">prep_match_datatypes &lt;- function(ref_dataframe, target_dataframe) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">30</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data_types &lt;- tibble::tibble(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">31</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    Col_names = names(ref_dataframe),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">32</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    data_type = sapply(ref_dataframe, class)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">34</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (col in names(target_dataframe)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">35</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (col %in% data_types$Col_names) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">36</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      col_type &lt;- data_types$data_type[data_types$Col_names == col]</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">37</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      if (col_type == "integer") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">38</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">39</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(!!col := as.integer(!!rlang::sym(col)))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">40</td>
                    <td class="coverage">5<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      } else if (col_type == "character") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">41</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">42</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(!!col := as.character(!!rlang::sym(col)))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">43</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      } else if (col_type == "numeric") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">44</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">45</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(!!col := as.numeric(!!rlang::sym(col)))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      } else if (col_type == "logical") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">47</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">48</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(!!col := as.logical(!!rlang::sym(col)))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      } else if (col_type == "Date") {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">50</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">51</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          dplyr::mutate(!!col := as.Date(!!rlang::sym(col)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      } #else if (col_type == 'c("POSIXct", "POSIXt")') {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      #   target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      #     dplyr::mutate(!!col == as.POSIXct(!!rlang::sym(col),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      #                                       format = "%Y-%m-%d"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # }  else if (col_type == 'c("POSIXlt", "POSIXt")') {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      #   target_dataframe &lt;- target_dataframe |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      #     dplyr::mutate(!!col == as.POSIXlt(!!rlang::sym(col),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      #                                       format = "%Y-%m-%d"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">64</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(target_dataframe)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/prep_match_names.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Match Naming Conventions Between df</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Standardizes variable names between two df by renaming variables in</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' the target dataframe to match the naming conventions in the reference</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' dataframe. This function is particularly useful for ensuring seamless</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' integration and minimizing errors during data merging processes, especially</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' when dealing with data from different sources that use different naming</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' conventions (e.g., CamelCase vs snake_case).</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ref_dataframe A dataframe with reference variable names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param target_dataframe A dataframe to modify variable names to match</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        `ref_dataframe`.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param report Boolean value indicating if processing report should be printed</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'               or not. Defaults to TRUE </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A modified copy of `target_dataframe` with standardized variable</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Define reference and target df with different naming conventions</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' ref_dataframe &lt;- tibble::tibble(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   CountryName = c("Cameroon", "Nigeria", "Tchad", "Niger"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   NameOfCapital = c("Yaounde", "Abuja", "Ndjamena", "Niamey")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' target_dataframe &lt;- tibble::tibble(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   countryname = c("South Sudan", "Kenya", "Ethiopia", "CAR"),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   nameofcapital = c("Juba", "Nairobi", "Addis Ababa", "Bangui")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Before matching: expect FALSE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' all(names(ref_dataframe) == names(target_dataframe))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # Apply the name matching function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' target_dataframe &lt;- prep_match_names(ref_dataframe, target_dataframe)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # After matching: expect TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' all(names(ref_dataframe) == names(target_dataframe))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">prep_match_names &lt;- function(ref_dataframe, target_dataframe, report = TRUE) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Step 1): get the column names of the ref and target df</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">43</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  ref_names &lt;- names(ref_dataframe)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">44</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  target_names &lt;- names(target_dataframe)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">45</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Step 2): check if reference names contain spaces or punctuation</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # if so names are clean, clean both ref and target names</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">48</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (all(grepl("^[[:alnum:]]+$", ref_names))) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ref_names &lt;- gsub("[[:punct:][:space:]]", "", ref_names)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">50</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    target_names &lt;- gsub("[[:punct:][:space:]]", "", target_names)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Step 3): find the common columns between the ref and the target df</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">54</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  common_cols &lt;- intersect(toupper(target_names), toupper(ref_names))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Step 4): loop through the common columns and rename the target</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # dataframe columns</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">58</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (col in common_cols) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # get the index of the col in the target dataframe column names</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">60</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    col_index1 &lt;- which(tolower(target_names) == tolower(col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # get the index of the col in the target reference column names</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">62</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    col_index2 &lt;- which(tolower(ref_names) == tolower(col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # get the corresponding column name from the reference dataframe</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">64</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    new_col_name &lt;- ref_names[col_index2]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">65</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # rename the target dataframe column using the new name from the reference</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # dataframe</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">67</td>
                    <td class="coverage">14<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    names(target_dataframe)[col_index1] &lt;- new_col_name</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">68</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">69</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Step 5): Return processing report to user</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">71</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # target columns with no match in ref columns</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">72</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (report == TRUE) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">73</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    no_match_cols &lt;-</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      setdiff(names(target_dataframe), names(ref_dataframe))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">3<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (length(no_match_cols) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">76</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cat(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">77</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "No match found for the following {length(no_match_cols)} column(s)",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">78</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          " in the tarrget df: {crayon::red(no_match_cols)}\n"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cat(glue::glue(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">81</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        "All columns were successfully matched and renamed!\n"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">86</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Return the target dataframe</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">87</td>
                    <td class="coverage">4<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(target_dataframe)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">88</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/assign_round_number.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Assign Round Numbers to Dates Based on Proximity</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function assigns a round name to a data frame containing dates based on </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' their proximity within a specified threshold. Dates that are within the </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' threshold (in days) of each other will be assigned the same round name. </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Additionally, the function allows for grouping by additional columns, such </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' as states or LGAs. This is particularly useful in scenarios where campaigns </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' may overlap, such as when campaigns occurring in early October 2024 are </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' closely related to those in September 2024. By clustering campaigns based on </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' proximity, the function effectively handles edge cases and provides coherent </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' round groupings.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param df A data frame containing at least one column of dates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_col A string specifying the name of the date column in the data </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   frame. Default is "today".</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param additional_grouping A character vector specifying additional columns </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   to group by (e.g., c("states", "lgas")). Default is NULL, meaning only </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   clustering by dates will be performed.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param threshold A numeric value representing the maximum number of days </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   between dates to be considered part of the same round. Default is 7.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame with a new column `round_group` containing the assigned </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   round names (month and year) based on the proximity of the dates, and </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   ordered as factors.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #  df &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #    today = as.Date(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #     c("2024-04-28", "2024-05-03", "2024-05-04", "2024-05-03",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #       "2024-06-01", "2024-06-02", "2024-07-29", "2024-07-30")),</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">31</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #   states = c("State1", "State1", "State1", "State1", "State2", "State2", </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #  "State2", "State2")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # result &lt;- assign_round_number(df, date_col = "today", </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                             additional_grouping = "states")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # print(result)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"># Define the function to assign round numbers based on proximity</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">assign_round_number &lt;- function(df,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                date_col = "today",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                additional_grouping = NULL,</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">43</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                threshold = 7) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Ensure dates are of Date type</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">45</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  df[[date_col]] &lt;- as.Date(df[[date_col]])</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get distinct dates for clustering</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">48</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  distinct_dates &lt;- df |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::distinct(!!rlang::sym(date_col)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">50</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(!!rlang::sym(date_col))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check if there are enough distinct dates to perform clustering</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">53</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (nrow(distinct_dates) &lt; 2) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">54</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    df$round_group &lt;- NA # Return NA if insufficient data</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">55</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(df)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">57</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Create a distance matrix</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">59</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  distance_matrix &lt;- as.matrix(dist(distinct_dates[[date_col]]))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Perform hierarchical clustering</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">62</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  hc &lt;- hclust(as.dist(distance_matrix))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">63</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">64</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Cut the dendrogram to form groups</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">65</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  clusters &lt;- cutree(hc, h = threshold) # Cut tree at specified height</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Create a round group label for the distinct dates</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">68</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  distinct_dates$ClusterID &lt;- clusters</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">69</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  round_labels &lt;- unique(format(distinct_dates[[date_col]], "%b %Y"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">71</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Create round group labels based on clusters</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">72</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  distinct_dates &lt;- distinct_dates |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">73</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::group_by(ClusterID) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      round_group = format(dplyr::first(.data[[date_col]]), "%b %Y")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">76</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">77</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::ungroup()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">78</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">79</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  df &lt;- df |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::left_join(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">81</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      distinct_dates |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">82</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        dplyr::select(!!rlang::sym(date_col), ClusterID, round_group),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">83</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      by = date_col</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">85</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">86</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  df &lt;- df |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">87</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">88</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      round_group = factor(round_group,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">89</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           levels = round_labels,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">90</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                           ordered = TRUE</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">91</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      ) </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">92</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt; dplyr::select(-ClusterID)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">93</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">94</td>
                    <td class="coverage">2<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(df)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">95</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/detect_date_format.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Detect the Date Format of a Vector of Dates</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function automatically detects and returns the most likely date format</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' from a given vector of date strings. It attempts to parse the dates using</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' a set of common date formats and selects the format that successfully parses</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' the majority of the entries.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_vector A character vector of dates.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param common_formats An optional character vector specifying the date </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        formats to try. If NULL, a default set of formats is used.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param ... Additional arguments passed to \code{lubridate::parse_date_time}.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A character string representing the date format that had the highest</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         success rate of parsing the dates in \code{date_vector}. Returns</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'         \code{NA} if no suitable format is found.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # date_vector &lt;- c("01-02-2021", "03-15-1988", "2023-05-12",</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' #                  "19/02/2021", "1988-15-03", "05-12-2023", "05.27.2022")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # detect_date_format(date_vector)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">24</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">detect_date_format &lt;- function(date_vector, common_formats = NULL, ...) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">25</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Provide default common formats if not specified ----------------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">27</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (is.null(common_formats)) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">28</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    common_formats &lt;- c("%d-%m-%Y", "%m-%d-%Y", "%Y-%m-%d",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">29</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%d/%m/%Y", "%m/%d/%Y", "%Y/%m/%d",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">30</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%d.%m.%Y", "%m.%d.%Y", "%Y.%m.%d", </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">31</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%Y %m %d",  "%Y%m%d",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">32</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%Y-%m-%d %H:%M:%S",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">33</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%d/%m/%Y %I:%M %p",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">34</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%m.%d.%Y %H-%M-%S",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">35</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%Y %b %d %H%M",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">36</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%d-%m-%Y %H:%M",</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">37</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                        "%m/%d/%Y %I:%M %p"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">39</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">40</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Calculate the number of successful parses for each format ------------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">42</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  format_counts &lt;- vapply(common_formats, function(fmt) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">43</td>
                    <td class="coverage">103<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    sum(!is.na(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">44</td>
                    <td class="coverage">103<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lubridate::parse_date_time(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">45</td>
                    <td class="coverage">103<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        date_vector, orders = fmt, quiet = TRUE, exact = TRUE, ...)))</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }, numeric(1)) </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Select the format with the maximum count of successful parses --------------</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">49</td>
                    <td class="coverage">7<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (max(format_counts) &gt; 0) {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">50</td>
                    <td class="coverage">6<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(names(which.max(format_counts)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">52</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    return(NA)  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">53</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/compress_png_files.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Compress PNG Files in a Directory with pngquant</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function iterates over all PNG files in a specified directory</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' and applies pngquant optimization to each file using the optout package.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param directory A string specifying the path to the directory containing</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' PNG files.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # compress_png_files("path/to/your/folder")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">compress_png_files &lt;- function(directory) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Check for pngquant installation on macOS or Linux</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">15</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  if (Sys.info()["sysname"] == "Darwin" || </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">16</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      Sys.info()["sysname"] == "Linux") {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">18</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (system("which pngquant", ignore.stdout = TRUE, </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">19</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">               ignore.stderr = TRUE) != 0) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">20</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      stop(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">21</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste0("pngquant is not installed or not in the ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">22</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">               "system PATH. Please install pngquant."))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">24</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    pngquant_path &lt;- "pngquant"</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">25</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else if (Sys.info()["sysname"] == "Windows") {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">26</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # Check for pngquant installation on Windows</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">27</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    pngquant_path &lt;- file.path(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">28</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      "C:", "Program Files", "pngquant", "pngquant.exe")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">29</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">30</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (!file.exists(pngquant_path)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">31</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      stop(paste0("pngquant.exe not found. Please install ",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">32</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                  "pngquant and ensure it's in the specified path."))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  } else {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">35</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    stop("Unsupported operating system.")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">37</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # List all PNG files in the directory</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">39</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  png_files &lt;- list.files(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">40</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    path = directory, pattern = "\\.png$", full.names = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Initialize progress bar</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">43</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  pb &lt;- progress::progress_bar$new(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">44</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    format = "Compressing files [:bar] :percent  ETA: :eta",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">45</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    total = length(png_files),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">46</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    width = 60</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">47</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Counter for successfully compressed files</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">50</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  compressed_count &lt;- 0</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">51</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Apply pngquant to each file and update progress bar</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">53</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  for (file in png_files) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">54</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    optout::pngquant(file)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">56</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if (file.exists(file)) {</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">57</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      compressed_count &lt;- compressed_count + 1</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">58</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">59</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    pb$tick()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">62</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">63</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    paste(compressed_count, </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">64</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "out of", length(png_files),</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">65</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          "files compressed")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/prep_mdb_merge.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Function to extract tables from multiple Microsoft Access databases.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param mdb_folder Path to the folder containing the .mdb files</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param target_table The table to be extracted from each mdb file. This should</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'                     unique name accross all the .mdb files.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return Returns a list all all the extracted tables indexed by their names.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' # How to run the function</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' prep_mdb_table_extract(mdb_folder, target_table)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">prep_mdb_table_extract &lt;- function(mdb_folder, target_table){</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Get the start time of the function</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">15</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  start_time &lt;- Sys.time()</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">16</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  tryCatch({</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # a) check if the foldername exist</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">18</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if(!dir.exists(mdb_folder)){</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">19</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(paste("Folder path", </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">20</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                   mdb_folder, "does not exist."))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # b) get the list of all the files with mdb extension from the folder</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">24</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    mdb_files &lt;-</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">25</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      dir(path = mdb_folder,</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">26</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          pattern = "\\.mdb",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">27</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          full.names = T)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">29</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    if(length(mdb_files &gt; 0)){</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">30</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # c) loop through each .mdb file and look for the target table</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">31</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      afp_list &lt;- list()</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">32</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">33</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_progress_bar("Extracting data", total = 100)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">34</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      for(mdb_file in mdb_files) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">35</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">36</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        #print(path)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">37</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ch1 &lt;-</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">38</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          RODBC::odbcDriverConnect(paste0(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">39</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            "DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=",</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">40</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">            mdb_file</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">41</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">          ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">42</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # Get list of all tables in the mdb</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">43</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        tables &lt;- RODBC::sqlTables(ch1)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">44</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # Get the only tables with type TABLE</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">45</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        tables &lt;- tables$TABLE_NAME[tables$TABLE_TYPE == "TABLE"]</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">46</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # Check if the target table exist in list of tables in an .mdb</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">47</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        if(target_table %in% tables){</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">48</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          query &lt;- RODBC::sqlQuery(ch1, </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">49</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                   query = paste("select * from ", </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">50</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                                                 target_table))</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">51</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          afp_list[[paste0(basename(mdb_file), "_", target_table)]] &lt;- query</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">52</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }else{</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">53</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">          cli::cli_text(paste("No table named : ", </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">54</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">                              target_table, " in ", basename(mdb_file)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">55</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">56</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        # close db connection</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">57</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        RODBC::odbcCloseAll()</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">58</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        cli::cli_progress_update(total = length(mdb_files))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">60</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # print the time taken to complete the process</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">62</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      elapsed_time &lt;- Sys.time() - start_time</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">63</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_success(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">64</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste("Process completed sucessfully in ", </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">65</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">              elapsed_time, "Sec"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">66</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">        ))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # return the list of tables</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">68</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      return(afp_list)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">69</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    } else{</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      # print the time taken to complete the process</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">71</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">      cli::cli_alert_warning(</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">72</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">        paste("No mdb file to extract table from"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">73</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    }</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">74</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    </pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">75</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }, error = function(e){</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">76</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # print out the error message</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">77</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_warning(e$message)</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">78</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">  }, warning = function(w){</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    # print out the warning message</pre>
                    </td>
                  </tr>
                  <tr class="missed">
                    <td class="num">80</td>
                    <td class="coverage">!</td>
                    <td class="col-sm-12">
                      <pre class="language-r">    cli::cli_alert_warning(w$message)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">81</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  })</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">82</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">83</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">84</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r"></pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="R/categorize_biannual.R" class="hidden">
              <table class="table-condensed">
                <tbody>
                  <tr class="never">
                    <td class="num">1</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Categorize Dates into Biannual Intervals</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">2</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">3</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' This function categorizes dates in a given dataset into non-overlapping</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">4</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' six-month intervals, working backward from the maximum date in the dataset.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">5</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' Each date is assigned to a category based on the interval it falls into.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">6</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">7</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param data A data frame containing the date column.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">8</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @param date_column A string specifying the name of the date column in the</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">9</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'        data frame.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">10</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">11</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @return A data frame with an additional factor column `date_categ`</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">12</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   that contains the interval labels.</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">13</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">14</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @examples</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">15</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' data &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">16</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'   virus_date = as.Date(c("2021-05-01", "2021-11-30", "2022-01-15"))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">17</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">18</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' categorized_data &lt;- categorize_biannual(data, "virus_date")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">19</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">20</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#' @export</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">21</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">#'</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">22</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">categorize_biannual &lt;- function(data, date_column) {</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">23</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">24</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data[[date_column]] &lt;- as.Date(data[[date_column]], format = "%Y-%m-%d")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">25</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  max_date &lt;- max(data[[date_column]], na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">26</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  min_date &lt;- min(data[[date_column]], na.rm = TRUE)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">27</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">28</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Simplify adjusted start date calculation</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">29</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  adjusted_start_date &lt;- lubridate::ceiling_date(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">30</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    min_date, "6 months") - months(6)</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">31</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  adjusted_end_date &lt;- lubridate::ceiling_date(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">32</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    max_date, "6 months")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">33</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">34</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Sequence generation</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">35</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  start_dates &lt;- seq(from = adjusted_start_date,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">36</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                     to = adjusted_end_date, by = "6 months")</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">37</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  end_dates &lt;- start_dates + months(6) - lubridate::days(1)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">38</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">39</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  intervals &lt;- data.frame(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">40</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    start = start_dates,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">41</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    end = end_dates,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">42</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    start_month = stringr::str_sub(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">43</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lubridate::month(start_dates, label = TRUE), start = 1, end = 3),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">44</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    end_month = stringr::str_sub(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">45</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      lubridate::month(end_dates, label = TRUE), start = 1, end = 3),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">46</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    start_year = lubridate::year(start_dates) %% 100,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">47</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    end_year = lubridate::year(end_dates) %% 100</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">48</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  )</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">49</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">50</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Expanding intervals for join</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">51</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  expanded_intervals &lt;- tidyr::expand_grid(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">52</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    !!date_column := seq(min_date, max_date, by = "day"),</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">53</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    intervals</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">54</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">55</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::filter(!!rlang::sym(date_column) &gt;= start &amp;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">56</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                    !!rlang::sym(date_column) &lt;= end) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">57</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">58</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">      label = glue::glue("{start_month} {start_year} / {end_month} {end_year}")</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">59</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">60</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(!!rlang::sym(date_column) , label)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">61</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">62</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Joining and coalescing the labels</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">63</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">64</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::left_join(expanded_intervals,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">65</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                     by = date_column,</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">66</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">                     relationship = "many-to-many"</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">67</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    ) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">68</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(date_categ = dplyr::coalesce(label, "Other")) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">69</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(-label)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">70</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">71</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  # Order the labels chronologically and set the levels</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">72</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  labels &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">73</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::select(date_categ, !!rlang::sym(date_column)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">74</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::arrange(!!rlang::sym(date_column)) |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">75</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::pull(date_categ)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">76</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">77</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  data &lt;- data |&gt;</pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">78</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">    dplyr::mutate(date_categ = factor(date_categ, levels = unique(labels)))</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">79</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  </pre>
                    </td>
                  </tr>
                  <tr class="covered">
                    <td class="num">80</td>
                    <td class="coverage">1<em>x</em></td>
                    <td class="col-sm-12">
                      <pre class="language-r">  return(data)</pre>
                    </td>
                  </tr>
                  <tr class="never">
                    <td class="num">81</td>
                    <td class="coverage"></td>
                    <td class="col-sm-12">
                      <pre class="language-r">}</pre>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <script>$('div#files pre').each(function(i, block) {
    hljs.highlightBlock(block);
});</script>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
</body>
</html>
